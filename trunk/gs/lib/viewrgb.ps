%    Copyright (C) 1996, 1997, 1998 Aladdin Enterprises.  All rights reserved.
% 
% This software is provided AS-IS with no warranty, either express or
% implied.
% 
% This software is distributed under license and may not be copied,
% modified or distributed except as expressly authorized under the terms
% of the license contained in the file LICENSE in this distribution.
% 
% For more information about licensing, please refer to
% http://www.ghostscript.com/licensing/. For information on
% commercial licensing, go to http://www.artifex.com/licensing/ or
% contact Artifex Software, Inc., 101 Lucas Valley Road #110,
% San Rafael, CA  94903, U.S.A., +1(415)492-9861.

% $Id: viewrgb.ps 6300 2005-12-28 19:56:24Z giles $
% viewrgb.ps
% Display a raw CMYK file.
% Requires the colorimage operator.
% If SCALE is defined, maps input pixels to output pixels with that scale;
% if SCALE is undefined, scales the image to fit the page.
% If BITS is defined, it is the number of bits per sample (1,2,4,8,12);
% if BITS is undefined, its default value is 1.

/viewrgb {			% <filename> <width> viewrgb -
  20 dict begin
  /w exch def
  /fname exch def
  /bpc /BITS where { pop BITS } { 1 } ifelse def
  /f fname (r) file def
  mark fname status pop pop pop /flen exch def cleartomark
  /h flen
(flen = ) print dup = flush
  w bpc dup 1 eq { pop 4 } { 3 mul } ifelse
(bits per sample: ) print dup =
  mul
(bits per line: ) print dup =
  7 add 8 idiv
(line width: ) print dup = flush
  idiv def
  (Dimensions: ) print [w h] == flush
		% Set up scaling.
  /SCALE where {
    pop
	% Map pixels SCALE-for-1.  Assume orthogonal transformation.
    SCALE 1 0 dtransform add abs div
    SCALE 0 1 dtransform add abs div
  } {
	% Scale the image (uniformly) to fit the page.
    clippath pathbbox pop pop translate
    pathbbox 3 -1 roll sub h div
    3 1 roll exch sub w div .min dup
  } ifelse scale
  bpc 1 eq {
(1 bit per component, using Indexed) = flush
    [ /Indexed /DeviceRGB 15 <
	000000
	0000FF
	00FF00
	00FFFF
	FF0000
	FF00FF
	FFFF00
	FFFFFF
	000000
	0000FF
	00FF00
	00FFFF
	FF0000
	FF00FF
	FFFF00
	FFFFFF
      >
    ] setcolorspace
    /BPC 4 def			% change to 4 bit indexed
  } {
    /DeviceRGB setcolorspace
    /BPC bpc def
  }
  ifelse
  << 	/ImageType 1
	/Width w
	/Height h
	/BitsPerComponent BPC
	/ImageMatrix [1 0 0 -1 0 h]
	/DataSource f
	/MultipleDataSources false
	bpc 1 eq { /Decode [ 0 15 ] } { /Decode [ 0 1 0 1 0 1 ] } ifelse
  >> image
  showpage
  f closefile
  end
} bind def

% If the program was invoked from the command line, run it now.
[ shellarguments {
  counttomark 2 eq {
    cvi viewrgb
  } {
    cleartomark
    (Usage: gs -- viewrgb.ps filename.rgb width\n) print
    ( e.g.: gs -- viewrgb.ps my.rgb 2550\n) print flush
  } ifelse
} {
  pop
} ifelse
