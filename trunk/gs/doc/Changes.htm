<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html><head>
<title>Ghostscript 7.30 change history as of 2002-09-07 11:40:05</title>
<link rel=stylesheet type="text/css" href="gs.css">
</head><body>

<!-- cvs command: cvs -d raph@cvs.ghostscript.com:/cvs/ghostscript -Q log  -b -->

<p>
Note from the editor: This changelog incorporates the DeviceN merge.
Much of the DeviceN development was done in a separate repository and
as such, the log messages from that repository have been included by
hand, in addition to the usual cvs2hist.py output from the main
repository.

<p>
For any log message that says little more than indicating a DeviceN
merge, see <a href="#7.30-DeviceN_Source">DeviceN Source</a> and <a
href="#7.30-DeviceN_Library">DeviceN Library</a> for full
details. These two sections reflect commits on the meerkat branch. Note
also that these sections are in standard ChangeLog format, while the
rest of the entries are in the quirky traditional Ghostscript format.

<p>
Sounds like we need to rethink our changelog policies a bit, doesn't it?

<ul>
<li><a href="#7.30-Documentation">Documentation</a>,
    <a href="#7.30-Procedures">Procedures</a>,
    <a href="#7.30-Utilities">Utilities</a>,
    <a href="#7.30-Drivers">Drivers</a>,
    <a href="#7.30-PDF_writer">PDF writer</a>,
    <a href="#7.30-PDF_Interpreter">PDF Interpreter</a>,
    <a href="#7.30-Interpreter">Interpreter</a>,
    <a href="#7.30-Streams">Streams</a>,
    <a href="#7.30-Library">Library</a>,
    <a href="#7.30-Other">Other</a>,
    <a href="#7.30-DeviceN_Source">DeviceN Source (meerkat)</a>,
    <a href="#7.30-DeviceN_Library">DeviceN Library (meerkat)</a>
</ul>


<h2><a name="7.30-Documentation"></a>Documentation</h2><pre>

Fixes problems:
	- byte* filearg should be a char* and copied to the heap. Fixes SF
bug #509646. Also adds byte */char * string convention to C-style.htm.
(doc/C-style.htm [1.34]: 2002/08/28 00:16:14 raph)
	- Fixes incorrect links in the previous commit.
(doc/Develop.htm [1.88]: 2002/09/07 18:05:08 giles)

Third and final commit of 7.22 release: bump version numbers to 7.23.
(doc/News.htm [1.110]: 2002/08/07 06:58:52 raph)

Prefer {} to () for optional commandline arguments. Patch from Eric S.
Raymond. (man/de/ps2pdf.1 [1.3], man/ps2pdf.1 [1.22], man/ps2pdfwr.1 [1.21]:
2002/08/08 12:22:57 giles)

Added description of files added while implementing DeviceN color handling.
(doc/Psfiles.htm [1.35]: 2002/09/04 07:21:26 dan)

Add documentation for new files added during DeviceN support development.
(doc/Develop.htm [1.85]: 2002/09/05 04:18:47 dan)

Delete all temporary files when the interpreter closes.
(doc/Language.htm [1.51]: 2002/09/05 12:20:48 ghostgum)

Include more DeviceN files. Correct a few typos in the previous commit.
(doc/Develop.htm [1.86]: 2002/09/06 05:16:58 dan)

Update versions, news and bug list for 7.30 alpha release.
(doc/News.htm [1.111]: 2002/09/07 17:57:09 giles)

Add the well-tempered screening source files to the developer documentation.
(doc/Develop.htm [1.87]: 2002/09/07 18:03:07 giles)

Update version numbers for 7.30 release. (doc/API.htm [1.24],
doc/Bug-form.htm [1.29], doc/Bug-info.htm [1.28], doc/C-style.htm [1.35],
doc/Commprod.htm [1.21], doc/Copying.htm [1.21], doc/Current.htm [1.21],
doc/DLL.htm [1.23], doc/Develop.htm [1.89], doc/Devices.htm [1.47],
doc/Drivers.htm [1.31], doc/Fonts.htm [1.30], doc/Helpers.htm [1.25],
doc/History1.htm [1.21], doc/History2.htm [1.21], doc/History3.htm [1.21],
doc/History4.htm [1.21], doc/History5.htm [1.23], doc/History6.htm [1.38],
doc/History7.htm [1.20], doc/Htmstyle.htm [1.26], doc/Install.htm [1.34],
doc/Issues.htm [1.25], doc/Language.htm [1.52], doc/Lib.htm [1.23],
doc/Maintain.htm [1.31], doc/Make.htm [1.53], doc/New-user.htm [1.40],
doc/Projects.htm [1.45], doc/Ps-style.htm [1.19], doc/Ps2epsi.htm [1.23],
doc/Ps2pdf.htm [1.45], doc/Psfiles.htm [1.36], doc/Readme.htm [1.40],
doc/Release.htm [1.64], doc/Source.htm [1.21], doc/Tester.htm [1.20],
doc/Testing.htm [1.9], doc/Unix-lpr.htm [1.21], doc/Use.htm [1.56],
doc/Xfonts.htm [1.21], doc/gs-vms.hlp [1.20]: 2002/09/07 18:11:42 giles)

Update version numbers for 7.30 release. (man/dvipdf.1 [1.18],
man/font2c.1 [1.18], man/gs.1 [1.18], man/gslp.1 [1.18], man/gsnd.1 [1.18],
man/pdf2dsc.1 [1.17], man/pdf2ps.1 [1.19], man/pdfopt.1 [1.17],
man/pf2afm.1 [1.18], man/pfbtopfa.1 [1.19], man/printafm.1 [1.18],
man/ps2ascii.1 [1.17], man/ps2epsi.1 [1.16], man/ps2pdf.1 [1.23],
man/ps2pdfwr.1 [1.22], man/ps2ps.1 [1.24], man/wftopfa.1 [1.18]: 2002/09/07
18:11:58 giles)

Update the stress-test buffer size for the smoke test to a value which works
with the devicen code (100k vs 50k). (doc/Release.htm [1.65]: 2002/09/07
19:09:40 giles)

Documentation to accompany gdevperm.c (permute device).
(doc/Develop.htm [1.90], doc/Devices.htm [1.48]: 2002/09/07 20:33:04 raph)

Adds a description of our release numbering scheme and clarifies the
updating process. Based on a patch from L. Peter Deutsch.
(doc/Release.htm [1.66]: 2002/09/07 22:12:27 giles)

Minor tweaking to version numbering language. (doc/Release.htm [1.67]:
2002/09/07 22:45:57 raph)

</pre><h2><a name="7.30-Procedures"></a>Procedures</h2><pre>

Fixes problems:
	- Fixing syntax errors and potentially dangerous warnings with MSVC
after DeviceN merge. (lib.mak [1.91]: 2002/08/22 10:00:48 igor)
	- Logic to invoke banding was confused. Banding gets used when the
bandsize is too small for the full page raster. A bandsize of 10000 causes
banding. (toolbin/tests/gstestgs.py [1.12]: 2002/09/04 23:09:12 ray)
	- Provide an implementation of popen for Windows, to avoid the
broken implementation in MSVC++ 5 and 6. This allows pswrite to output to a
pipe on Windows. Fixes SourceForge bug #482038, pswrite does not write to
pipe. (winlib.mak [1.17]: 2002/09/05 08:34:00 ghostgum)
	- Fix : The "Fix: add missing header for isxdigit()." missed the
dependency update in devs.mak . (devs.mak [1.71]: 2002/09/05 08:50:53 igor)

Third and final commit of 7.22 release: bump version numbers to 7.23.
(version.mak [1.50]: 2002/08/07 06:58:53 raph)

Remove unused defines for the gtk client. (macos-fw.mak [1.6]: 2002/08/07
13:01:18 giles)

DeviceN. (devs.mak [1.70], gs.mak [1.15], int.mak [1.82], lib.mak [1.90],
msvc32.mak [1.30], openvms.mak [1.24], unix-gcc.mak [1.34],
watclib.mak [1.18]: 2002/08/22 07:12:28 henrys)

Modified files:
  src/lib.mak
    Updated varius dependency lists.
(lib.mak [1.92]: 2002/08/26 23:00:07 dan)

Re corrected a problem with an illegal (from the point of view of MSVC)
period in a marcro name. Problem previously fixed by Igor. It came back in
the previous commit which came from ORIMP. (lib.mak [1.93]: 2002/08/26
23:02:24 dan)

Remove gdevht.c and gdevht.h. Also delete outdated references in lib.mak and
a few other files. (lib.mak [1.94]: 2002/09/04 06:36:36 dan)

Changes required for compilation on HPUX and Tru64. Add missing header in
lib.mak after gxdcolor.h added to gscolor3.c. Change dci_std_color_bits
macro to prevent a divide by zero, caused by the compiler not using shortcut
evaluation in an initializer. (lib.mak [1.95]: 2002/09/04 21:44:14 ghostgum)

Update versions, news and bug list for 7.30 alpha release.
(version.mak [1.51]: 2002/09/07 17:57:09 giles)

Update libpng versions to latest release. (all-arch.mak [1.13],
bcwin32.mak [1.20], dvx-gcc.mak [1.19], macos-mcp.mak [1.8],
macosx.mak [1.11], msvc32.mak [1.31], msvclib.mak [1.20],
openvms.mak [1.25], os2.mak [1.26], ugcclib.mak [1.20], unix-gcc.mak [1.35],
unixansi.mak [1.24], watc.mak [1.20], watclib.mak [1.19],
watcw32.mak [1.18]: 2002/09/07 18:28:37 giles)

</pre><h2><a name="7.30-Utilities"></a>Utilities</h2><pre>

Fixes problems:
	- update MacOS build for changes in gs_abort(). (gp_mac.c [1.8]:
2002/08/27 20:27:26 giles)
	- Provide an implementation of popen for Windows, to avoid the
broken implementation in MSVC++ 5 and 6. This allows pswrite to output to a
pipe on Windows. Fixes SourceForge bug #482038, pswrite does not write to
pipe. (gp_mswin.c [1.12]: 2002/09/05 08:34:00 ghostgum)

DeviceN. (genconf.c [1.9]: 2002/08/22 07:12:28 henrys)

Update project file generation script to support Metrowerks CodeWarrior 7.
(macgenmcpxml.sh [1.3]: 2002/09/04 08:57:03 giles)

Code cleanup and warning fixes for macos platform-specific routines.
(gp_macio.c [1.8]: 2002/09/04 10:15:33 giles)

</pre><h2><a name="7.30-Drivers"></a>Drivers</h2><pre>

Fixes problems:
	- FILE_IMPLEMENTATION=fd results in mixed use of unbuffered and
buffered output but the rest of the driver always uses buffered output.
Flushing the buffer in several places solves the problem. Fixes bug #427347.
Fix and analysis by Alex Cherepanov. (gdevps.c [1.29], gdevpsu.c [1.12]:
2002/08/28 15:19:12 ray)

DeviceN. (gdev4693.c [1.6], gdevbit.c [1.5], gdevbmpc.c [1.6],
gdevcdj.c [1.11], gdevdevn.c [1.1], gdevdsp.c [1.12], gdevepsc.c [1.7],
gdevpbm.c [1.8], gdevpccm.c [1.5], gdevpcl.c [1.8], gdevps.c [1.28],
gdevpsdf.h [1.18], gdevpsdi.c [1.22], gdevpsdu.c [1.17], gdevstc.c [1.6],
gdevtknk.c [1.6], gdevupd.c [1.9], gdevx.c [1.14], gdevxalt.c [1.8],
gdevxcf.c [1.1], gdevxcmp.c [1.8]: 2002/08/22 07:12:28 henrys)

Removes dead code harking back from the old, broken x11alpha device.
(gdevxalt.c [1.9]: 2002/09/03 17:48:28 raph)

Adds "permute" device for testing consistency between DeviceCMYK and DeviceN
color models. (gdevperm.c [1.1], gdevxcf.c [1.2]: 2002/09/07 20:02:26 raph)

Removes just a bit more dead code from the old x11alpha driver.
(gdevxalt.c [1.10]: 2002/09/07 20:02:54 raph)

</pre><h2><a name="7.30-PDF_writer"></a>PDF writer</h2><pre>

Fixes problems:
	- Fix (pdfwrite): Widths for /.notdef was not cached, perhaps
Pscript.dll Version 5.0 generates an Encoding, in which /space is replaced
with /.notdef . Source Forge bug #590979 "Spaces drop out".
(gdevpdtt.c [1.8]: 2002/08/07 11:10:56 igor)
	- Fix (pdfwrite): Widths were missed (written as zeros) for Type 3
fonts. Source Forge bug #591808 "Scrambled spacing, chars superimposed"
(gdevpdti.c [1.5]: 2002/08/07 11:33:58 igor)
	- AR5 fails in image when CTM is singular. Skipping such images.
Source Forge bug #453969. Patch from Alex Cherepanov. (gdevpdfi.c [1.42]:
2002/08/14 15:56:19 igor)
	- Fix (pdfwrite): Widths for different WMode's were mixed in same
cache. Discovered with CompareFiles/093-01.ps . (gdevpdte.c [1.10]:
2002/08/16 15:11:05 igor)
	- Fix (pdfwrite) : When device resolution is reduced to keep numbers
within Acrobat Reader limits, the device closed and re-opened. This
re-opened the output PDF file, dropping all preceding pages. The fix removes
the closing of the device. Source Forge Bug #593124. Patch from Alex
Cherepanov. (gdevpdfp.c [1.28]: 2002/08/26 06:29:15 igor)
	- Fix (pdfwrite): Implementing settransfer after DeviceN merge.
(gdevpdfg.c [1.24]: 2002/08/30 09:30:27 igor)
	- Write named COS objects which go out of scope with the local
namespace. Source Forge bug #600243. Patch from Alex Cherepanov.
(gdevpdfm.c [1.26]: 2002/09/01 01:44:15 igor)
	- Fix (pdfwrite) : 'Td' sometimes was missed due to sync_text_state
wrondly checked text position. Discovered with 129-01.ps .
(gdevpdts.c [1.12]: 2002/09/01 16:02:12 igor)
	- add missing header for isxdigit(). (gdevpdtb.c [1.8]: 2002/09/02
22:01:20 giles)
	- Fix (pdfwrite) : pdf_font_resource_enum_ptrs was buggy since
revision 1.9 . (gdevpdtf.c [1.13]: 2002/09/03 19:45:23 igor)
	- Fix (pdfwrite) : (1) Moving the temporary CID font wrapper from
stable to non-stable memory, because its descendent font is non-stable; (2)
Removing pdf_font_resource::glyphshow_font, because after (1) it points from
stable to non-stable memory. (3) representing the "glyphshow_font"
association with a search through gs_font_dir::orig_fonts by font id.
Introducing a new graphics library function gs_find_font_by_id for (3).
Source Forge bug "[603955] (pdfwrite) wrong memory allocation, segv"
(gdevpdtf.c [1.14], gdevpdtf.h [1.5]: 2002/09/05 09:03:42 igor)
	- Fix (pdfwrite) : (1) Moving the temporary CID font wrapper from
stable to non-stable memory, because its descendent font is non-stable; (2)
Removing pdf_font_resource::glyphshow_font, because after (1) it points from
stable to non-stable memory. (3) representing the "glyphshow_font"
association with a search through gs_font_dir::orig_fonts by font id.
Introducing a new graphics library function gs_find_font_by_id for (3).
Source Forge bug "[603955] (pdfwrite) wrong memory allocation, segv"
(gdevpdtc.c [1.8]: 2002/09/05 09:12:30 igor)
	- Fix : (1) ioerror was missed after opening a stream; (2)
pdfwrite/epswrite missed ioerror writing a CFF. Source Forge bug #601238
"segv due to s_init_filter ignores errors". (gdevpdf.c [1.52]: 2002/09/05
18:07:59 igor)

Skipping 0-size images in pdfwrite because AR5 doesn't support them. Patch
from Alex Cherepanov. (gdevpdfi.c [1.41]: 2002/08/13 10:15:38 igor)

DeviceN. (gdevpdf.c [1.51], gdevpdfc.c [1.27], gdevpdfg.c [1.23]: 2002/08/22
07:12:28 henrys)

Move the module back to the same as rev 1.5 as the basis for future fixes.
Rev 1.6 was reinstated to avoid a spurious tag for 7.22, but the 1.6 version
was flawed and removed by Igor Melichev. (gdevpdtw.c [1.7]: 2002/08/27
06:55:54 ray)

</pre><h2><a name="7.30-PDF_Interpreter"></a>PDF Interpreter</h2><pre>

Fixes problems:
	- Dereference indirect objects used as numbers in /Differences array
by pdfTeX-1.0-pdfcrypt. SourceForge bug #580873. Fix by Alex Cherepanov.
(lib/pdf_font.ps [1.42]: 2002/08/13 15:32:51 ray)
	- Extra 'ifelse' in a pdfformaterror case when the Widths array was
smaller than the character range. No SF bug, but fixes George.pdf for
Artifex customer #1 (their support ticket 1-2398). (lib/pdf_font.ps [1.43]:
2002/08/28 07:07:08 ray)
	- Improve accuracy of transparency detection logic. Fixes SF bug
#586595. (lib/pdf_main.ps [1.56]: 2002/08/28 17:34:16 raph)
	- Partial fix to 600855 to allow the pdfwrite (Distiller) to learn
the original font name as well as the unique font name generated by the PDF
interpreter when it copies a font and changes the Metrics and/or Encoding.
The FontName was made unique by appending a series of ? chars until a unique
name was generated. Now the suffix string itself is also defined in the
modified font dictionary with the /FontNameSuffix key. The pdfwrite text
handling needs to be modified to use this information.
(lib/pdf_font.ps [1.44]: 2002/08/29 06:26:22 ray)
	- Initialize graphic state (except CTM) before rendering annotation
appearance stream as stated in 7.4.4 of the PDF reference. Bug #576586,
customer #580. Fix by Alex Cherepanov. (lib/pdf_draw.ps [1.51]: 2002/09/01
23:42:32 ray)
	- Apparently filters that expect EOD throw an ioerror if no data is
received. Just processes without invoking any filter and everything works as
Adobe Acrobat Reader does. SourceForge bug #605236 for customer 561.
(lib/pdf_base.ps [1.28]: 2002/09/05 20:04:27 ray)

DeviceN. (lib/pdf_draw.ps [1.50], lib/pdf_main.ps [1.55]: 2002/08/22
07:12:28 henrys)

</pre><h2><a name="7.30-Interpreter"></a>Interpreter</h2><pre>

Fixes problems:
	- Fix (FAPI): Embedded Type 2 was misidentified as a non-embedded
font. (zfapi.c [1.24]: 2002/08/17 08:04:42 igor)
	- Fix (FAPI): Allowing servers to substitute glyph name for
FAPI_FF_get_glyph callback. (fapiufst.c [1.18], ifapi.h [1.13],
zfapi.c [1.25]: 2002/08/17 09:17:15 igor)
	- Fix (FAPI): Type 1 instruction seac did not work with embedded
fonts. (ifapi.h [1.14], zfapi.c [1.26]: 2002/08/17 10:36:55 igor)
	- Fixing syntax errors and potentially dangerous warnings with MSVC
after DeviceN merge. (dwmain.c [1.11], dwmainc.c [1.14], dwtrace.c [1.3]:
2002/08/22 10:00:48 igor)
	- Fix (FAPI): Improving comments about the 'get_glyph' callback.
(zfapi.c [1.27]: 2002/08/24 09:16:28 igor)
	- Undocumented procedure /setweightvector added to internaldict.
Source Forge bug #593355. Patch from Alex Cherepanov.
(lib/gs_type1.ps [1.12]: 2002/08/26 06:51:01 igor)
	- byte* filearg should be a char* and copied to the heap. Fixes SF
bug #509646. Also adds byte */char * string convention to C-style.htm.
(icstate.h [1.9], imainarg.c [1.22]: 2002/08/28 00:16:14 raph)
	- The technique used to prevent PageSize dimension of 0 silently set
the page size to 6 points whenever the dimension was &lt; 6. Now either
dimension of 0 causes configurationerror from setpagedevice, but small
non-zero values are allowed if the InputAttributes allows it. Fixes
SourceForge bug 521916. Fix mostly by Alex Cherepanov.
(lib/gs_setpd.ps [1.14], zmedia2.c [1.9]: 2002/08/28 14:32:28 ray)
	- Unbound null in the PostScript setup code (gs_init.ps) allowed
redef of /null to cause problems. Replace null with //null immediate name
binding to prevent this. Fixes SF bug #539239. Fix by Alex Cherepanov.
(lib/gs_init.ps [1.61]: 2002/08/28 16:20:19 ray)
	- Fix : z1_glyph_info missed side bearing for WMode 0.
(zchar1.c [1.22]: 2002/08/30 13:40:56 igor)
	- process comment lines when they straddle a buffer boundary, so
that all DSC comments can be processed by the PDF writer. Fixes SourceForge
bug #432040, DSC ignored when reading stdin. (iscan.c [1.11]: 2002/09/05
08:28:48 ghostgum)
	- Corrected the ID line. (Missing $ sign at the end.)
(zcolor3.c [1.2]: 2002/09/06 18:42:16 dan)
	- copy comment lines inside a procedure which require a scanner
refill to the operand stack, not the execution stack. Fixes SourceForge bug
#605240, 070-01.ps fails in .parse_dsc_comments. (iscan.c [1.12]: 2002/09/06
20:52:19 ghostgum)

Third and final commit of 7.22 release: bump version numbers to 7.23.
(lib/gs_init.ps [1.59]: 2002/08/07 06:58:53 raph)

As some PostScript files act differently when /currentdistillerparams is
defined, patched 'known' to hide the systemdict version of the
set/currentdistillerparams unless the currentdevice is pdfwrite. The patch
was done by Ray. Fixes SF#584713, Gradient ignores CRD
(lib/gs_pdfwr.ps [1.17]: 2002/08/17 09:16:34 jeong)

DeviceN. (idparam.c [1.6], igstate.h [1.7], iimage.h [1.6], iimage2.h [1.6],
iutil.c [1.7], iutil.h [1.6], lib/gs_ciecs2.ps [1.1],
lib/gs_ciecs3.ps [1.1], lib/gs_devcs.ps [1.1], lib/gs_devn.ps [1.1],
lib/gs_devpxl.ps [1.1], lib/gs_dpnxt.ps [1.5], lib/gs_icc.ps [1.6],
lib/gs_img.ps [1.1], lib/gs_indxd.ps [1.1], lib/gs_init.ps [1.60],
lib/gs_lev2.ps [1.21], lib/gs_ll3.ps [1.16], lib/gs_patrn.ps [1.1],
lib/gs_pdfwr.ps [1.18], lib/gs_res.ps [1.25], lib/gs_sepr.ps [1.1],
lib/gs_setpd.ps [1.13], zcolor.c [1.9], zcolor1.c [1.6], zcolor2.c [1.10],
zcolor3.c [1.1], zcsdevn.c [1.10], zcssepr.c [1.12], zdevice.c [1.7],
zdfilter.c [1.6], zdpnext.c [1.7], zfsample.c [1.8], zgstate.c [1.6],
zht.c [1.6], zht1.c [1.6], zht2.c [1.6], zimage.c [1.10], zimage2.c [1.7],
zimage3.c [1.6], zmisc.c [1.5], zmisc3.c [1.5], zpcolor.c [1.7],
zshade.c [1.13], ztrans.c [1.19]: 2002/08/22 07:12:28 henrys)

This file was left out of the DeviceN checkin. (lib/gs_cspace.ps [1.1]:
2002/08/22 13:37:47 henrys)

This file was evidently dropped from the DeviceN merge. This eliminates a
loop that can occur in non-sepqxd2distiller.pdf. lib/gs_icc.ps Modified the
cs_substitute routine to suppress color space substitution if the resulting
color space cannot be an Alternate color space for an ICCBased color space.
This situation arises with some frequency in PDF files.
(lib/gs_icc.ps [1.7]: 2002/08/23 04:15:00 dan)

Modified files: src/gstext.h src/gstext.c Added the routine
gs_text_update_dev_color, to update the color used for drawing text if this
changes during a text operation (e.g.: due to the action of a kshow or cshow
procedure). src/zchar.c Modified op_show_continue to call
gs_text_update_dev_color in case a cshow or kshow procedure changed the
current color (strictly speaking, this is only a problem with kshow).
(zchar.c [1.9]: 2002/08/26 22:51:53 dan)

Modified files:
  src/gstext.c,
  src/gxtext.h
  src/zchar.c
    These files are identical to the set released on Aug. 23rd (the fix
    for color changes in a kshow procedure). We are releasing them again
    here to make certain the rest of this code is not committed without
    the former change.
(zchar.c [1.10]: 2002/08/26 23:00:07 dan)

Merge page device Policies from the driver and defaults during the device
initialization to avoid duplication of code for default policies in the
driver (no devices yet do this). Previously, the whole /Policies dictionary
was replaced forcing the driver to duplicate code. Improvement developed by
Alex Cherepanov. (lib/gs_setpd.ps [1.15]: 2002/08/29 05:41:30 ray)

Delete all temporary files when the interpreter closes. (imain.c [1.26]:
2002/09/05 10:23:00 ghostgum)

Update version numbers for 7.30 release. (lib/gs_init.ps [1.62]: 2002/09/07
18:11:53 giles)

</pre><h2><a name="7.30-Streams"></a>Streams</h2><pre>

Fixes problems:
	- Don't skip '\f' or '\0' after eexec but still skip \r', '\n',
'\t', ' ' because Adobe interpreters do this. Bug #594741 from a free user.
Fix by Alex Cherepanov. (seexec.c [1.8]: 2002/09/02 22:09:15 ray)
	- Fix : (1) ioerror was missed after opening a stream; (2)
pdfwrite/epswrite missed ioerror writing a CFF. Source Forge bug #601238
"segv due to s_init_filter ignores errors". (stream.c [1.20]: 2002/09/05
18:07:59 igor)

</pre><h2><a name="7.30-Library"></a>Library</h2><pre>

Fixes problems:
	- Increase fineness of subdivision in axial and radial shadings.
Fixes visible banding as reported in SF bug #586178. (gxshade.c [1.12]:
2002/08/07 07:02:27 raph)
	- Radial shading with 2 circles having same origins is not rendered
properly. Now it works correctly. (gxshade1.c [1.16]: 2002/08/09 05:44:56
jeong)
	- Make rectfill of shadings always take gs_fill path, ensuring high
level pdfwrite rendering. (gsdps1.c [1.5]: 2002/08/21 17:41:00 raph)
	- Go back to old max_error precision values for Type 1 (function
based) shadings, as increased precision (still enabled for Types 2 and 3,
axial and radial) caused a performance hit. (gxshade.c [1.13]: 2002/08/21
17:41:21 raph)
	- Fixing syntax errors and potentially dangerous warnings with MSVC
after DeviceN merge. (gsht1.c [1.8]: 2002/08/22 10:00:48 igor)
	- Fix (pdfwrite) : Uninitialized variable in psf_write_type2_font().
(gdevpsf2.c [1.24]: 2002/08/27 13:22:24 igor)
	- Yesterday's commit of the delayed loading of a binary halftone
cache created some memory management problems. Clear b_tile pointer until
the cache is loaded. Modify pointer enum routines to allow for null cache
pointer. (gxht.c [1.13]: 2002/08/30 23:37:12 dan)
	- Fixing an uninitialized pointer in gs_type0_data_s.
(gsfont0c.c [1.2]: 2002/09/02 16:47:37 igor)
	- cleanup the new code for the metrowerks compiler on macos.
(gdevdgbr.c [1.7], gscolor3.c [1.7], gxwts.c [1.3]: 2002/09/02 21:09:29
giles)
	- Detect overflow in gs_point_transform2fixed and return limitcheck
if overflow would occur. Thanks to Jeong Kim for analysis and suggesting a
solution. Final solution uses integer operations. Fixes bug #570181 for
Artifex customer #870. (gsmatrix.c [1.7], gxfixed.h [1.7]: 2002/09/04
06:40:50 ray)
	- Remove trailing comma from enum declaration. Some compilers
complain about this. (gxclpath.h [1.12]: 2002/09/04 19:55:05 giles)
	- Provide an implementation of popen for Windows, to avoid the
broken implementation in MSVC++ 5 and 6. This allows pswrite to output to a
pipe on Windows. Fixes SourceForge bug #482038, pswrite does not write to
pipe. (pipe_.h [1.6]: 2002/09/05 08:34:00 ghostgum)
	- Fix (pdfwrite) : (1) Moving the temporary CID font wrapper from
stable to non-stable memory, because its descendent font is non-stable; (2)
Removing pdf_font_resource::glyphshow_font, because after (1) it points from
stable to non-stable memory. (3) representing the "glyphshow_font"
association with a search through gs_font_dir::orig_fonts by font id.
Introducing a new graphics library function gs_find_font_by_id for (3).
Source Forge bug "[603955] (pdfwrite) wrong memory allocation, segv"
(gsfont.c [1.12], gsfont.h [1.7], gsfont0c.c [1.3]: 2002/09/05 09:03:42
igor)
	- Fix : (1) ioerror was missed after opening a stream; (2)
pdfwrite/epswrite missed ioerror writing a CFF. Source Forge bug #601238
"segv due to s_init_filter ignores errors". (gdevpsf2.c [1.25]: 2002/09/05
18:07:59 igor)

Third and final commit of 7.22 release: bump version numbers to 7.23.
(gscdef.c [1.24]: 2002/08/07 06:58:53 raph)

Regression testing showed a difference when built with gcc 2.95.4 between
-DDEBUG and non DEBUG builds. This showed up as some minor pixel diffs.
Change to 'double' from 'float' for some precision sensitive variables so
that -DDEBUG matches non DEBUG results. (gxstroke.c [1.6]: 2002/08/16
00:32:56 ray)

DeviceN. (gconf.c [1.6], gdevabuf.c [1.6], gdevbbox.c [1.8],
gdevcmap.c [1.5], gdevdbit.c [1.6], gdevdflt.c [1.6], gdevdgbr.c [1.6],
gdevdrop.c [1.7], gdevm1.c [1.5], gdevm16.c [1.5], gdevm40.c [1.1],
gdevm48.c [1.1], gdevm56.c [1.1], gdevm64.c [1.1], gdevmem.c [1.5],
gdevmem.h [1.7], gdevmr1.c [1.5], gdevnfwd.c [1.6], gdevp14.c [1.13],
gdevplnx.c [1.5], gdevprn.c [1.11], gdevprn.h [1.12], gdevrops.c [1.6],
gdevvec.c [1.16], gsalphac.c [1.6], gsbitops.c [1.6], gsbitops.h [1.6],
gsccolor.h [1.5], gscdevn.c [1.10], gscdevn.h [1.7], gscolor.c [1.9],
gscolor1.c [1.8], gscolor2.c [1.10], gscolor2.h [1.7], gscpixel.c [1.6],
gscscie.c [1.7], gscsepr.c [1.17], gscsepr.h [1.8], gscspace.c [1.7],
gscspace.h [1.12], gsdcolor.h [1.8], gsdevice.c [1.15], gsdfilt.c [1.6],
gsdfilt.h [1.6], gsdparam.c [1.10], gsdps1.c [1.6], gsht.c [1.6],
gsht1.c [1.7], gshtscr.c [1.10], gshtx.c [1.5], gshtx.h [1.6],
gsicc.c [1.8], gsimage.c [1.8], gsiparam.h [1.8], gsistate.c [1.7],
gslib.c [1.11], gsovrc.c [1.1], gspcolor.c [1.7], gsptype1.c [1.8],
gsptype2.c [1.8], gsserial.c [1.1], gsserial.h [1.1], gsshade.c [1.8],
gsstate.c [1.16], gsstate.h [1.6], gswts.c [1.1], gswts.h [1.1],
gxacpath.c [1.6], gxbitfmt.h [1.5], gxcdevn.h [1.6], gxcht.c [1.8],
gxcindex.h [1.5], gxclbits.c [1.7], gxcldev.h [1.9], gxclimag.c [1.7],
gxclip.c [1.9], gxclip2.c [1.6], gxclipm.c [1.7], gxclist.c [1.7],
gxclpath.c [1.13], gxclpath.h [1.10], gxclrast.c [1.17], gxclread.c [1.8],
gxclutil.c [1.8], gxcmap.c [1.6], gxcmap.h [1.6], gxcomp.h [1.6],
gxcspace.h [1.8], gxdcconv.c [1.6], gxdcolor.c [1.7], gxdcolor.h [1.7],
gxdevcli.h [1.11], gxdevice.h [1.10], gxdevmem.h [1.6], gxdevndi.c [1.1],
gxdevndi.h [1.1], gxdht.h [1.8], gxdhtserial.c [1.1], gxdhtserial.h [1.1],
gxdither.h [1.6], gxht.c [1.8], gxht.h [1.6], gxicolor.c [1.6],
gximag3x.c [1.12], gximage2.c [1.5], gximono.c [1.7], gxipixel.c [1.7],
gxiscale.c [1.7], gxistate.h [1.12], gxoprect.c [1.1], gxoprect.h [1.1],
gxpcmap.c [1.7], gxpcolor.h [1.6], gxshade.c [1.14], gxstate.h [1.6],
gxwts.c [1.1], gxwts.h [1.1], gzht.h [1.9], gzstate.h [1.8]: 2002/08/22
07:12:28 henrys)

From ORIMP: Modified files: src/gsht.c: In gx_imager_dev_ht_install, the
comp_number field in the entries for the newly allocated components_array
was improperly assigned, due to a typo. Later code checks if the comp_number
value matches the component index and, if not, uses the default halftone
order for this component. This would cause a typical 4-color device to
always use the default halftone component (and leak memory). As part of the
same fix, some redundant code in gx_imager_dev_ht_install has been removed,
and the code that updates the "used_default" variable in this procedure has
been corrected. (gsht.c [1.7]: 2002/08/23 07:43:30 dan)

Modified files: src/gstext.h src/gstext.c Added the routine
gs_text_update_dev_color, to update the color used for drawing text if this
changes during a text operation (e.g.: due to the action of a kshow or cshow
procedure). src/zchar.c Modified op_show_continue to call
gs_text_update_dev_color in case a cshow or kshow procedure changed the
current color (strictly speaking, this is only a problem with kshow).
(gstext.c [1.10], gstext.h [1.7]: 2002/08/26 22:51:53 dan)

Modified files:

  src/gdevdbit.c:
    Changed gx_default_fill_mask to use the fill_masked routine of the
    device color. This avoids an instance in which a possibly
    uninitialized halftone tile is used for drawing. It also makes the
    code considerably cleaner.

  src/gscdefs.h
    Re-installed the definition of extern_gs_find_compositor, which had
    in-advertently been lost in a recent code merge.

  src/gsdcolor.h
    Added the colors.binary.b_level field to the gx_device_color_saved
    structure. Also added a comment explaining why this structure is
    used rather than the gx_device_color structure itself.

  src/gsht.c
    This file should be identical to the version released on Aug. 22nd.
    We are releasing again here just to guard against this code being
    committed without the former change.

  src/gsht1.c
    Modified the check for "binaryness" of a device color model in
    gs_sethalftone_try_wts to handle cases in which not all of the depth
    bits are used.

  src/gstext.c,
  src/gxtext.h
  src/zchar.c
    These files are identical to the set released on Aug. 23rd (the fix
    for color changes in a kshow procedure). We are releasing them again
    here to make certain the rest of this code is not committed without
    the former change.

  src/gxacpath.c
    Modified gx_cpath_accum_end to set the new bbox_accurate field rather
    than the bbox_set field. This avoids overloading the bbox_set field
    in a way that can lead to inconsistent output when the setbbox
    operator is used with a path.

  src/gxcht.c
  src/gxht.c
  src/gxdcolor.c
  src/gxdcolor.h
    Modified the "write" methods for various color spaces so that their
    return value can indicate that the operand and last transmitted
    colors are the same. Also fixed various bugs uncovered when the
    modular device color serialization/de-serialization was first used.
    The changes to gxdcolor.h involve only comments.

  src/gxcldev.h
    1. Added a saved device color (gx_device_color_saved) to the band
       state structure.
    2. Removed the (long since unnecessary) type operand from the
       cmd_put_halftone procedure.
    3. Commented out some now obsolete command codes.

  src/gxclimag.c
    1. Modified clist_fill_mask to work with the new, modular drawing
       color serialization/de-serialization routines.
    2. Rewrote cmd_put_halftone as required by the new mechanism for
       serializing/de-serializing device halftones.
    3. Modified various invocations of cmd_put_halftone to discard the
       the type operand.

    Note: The existing code impose a requirement that image objects that
          used a device color (e.g.: image masks) would only be passed
          through the command list if that color is pure. We do not
          know why this limitation was necessary, and suspect it is no
          longer necessary, but we have left it in place for now.

  src/gxclist.c
    Added gxdcolor.h to the included file list.

  src/gxclpath.c
    1. Rewrote cmd_put_drawing_color to use the new mechanism for
       serialization/de-serialization of device colors.
    2. Removed the device color type information from the stroke/
       fill/polyfill commands.
    3. Modified cmd_put_path so that "moveto closepath" is not
       passed through the command list as just "moveto".

  src/gxclpath.h
    1. Added the cmd_opv_ext_put_ht_seg, to allow device halftones to be
       split across multiple command buffers. Also added the macro
       cbuf_ht_seg_max_size, to indicate the largest halftone segment to
       be put in a single command buffer.
    2. Commented out some now obsolete command codes.
  src/gxclrast.c
    1. Modified the code to read device halftones and device colors to
       use the new serialization/de-serialization methods for these
       structures.
    2. Modified various locations in which partial/temporary device
       colors are used to use the current color for the band.
    3. Removed code for the various stroke/fill/polyfill commands that
       encode device color type as part of the command.
    4. Added code to save the current color when a pure color must be
       set to generate a clip region using the fill procedure.
    5. Modified the clip path reading code to flatten the clip path
       before passing it to the fill operation. This is necessary to
       ensure consistent results between the banded and non-banded
       cases (the non-banded case also flattens a clip path before
       passing it to the fill operation).

  src/gxdhtserial.c
    1. Updated gx_ht_read_tf and gx_ht_read_and_install to properly
       use the reference count in a transfer function.
    2. Fixed various other errors discovered when this code was first
       used.

  src/gxdhtserial.h
    Fixed typo.

  src/gxpath.c
    Initialize the new bbox_accurate field of the gx_path structure to
    false in gx_path_init_contents.

  src/gxpath2.c
    Modified gx_path_bbox to use the bbox_accurate rather than bbox_set
    field to determine if the bounding box of a path needs to be
    explicitly calculated. If bbox_set is true, the bounding box
    in the bbox field will contain the current path, but may be larger
    than necessary. Due to a problem in the clip/fill code, the larger
    bounding box may generate slightly inconsistent results.

  src/gzpath.h
    Added the bbox_accurate field to the gx_path_s structure. This field
    is used by the clip accumulator device, which avoids the need to
    overload the bbox_set field (which is also used by the setbbox
    operator).

  src/lib.mak
    Updated varius dependency lists.
(gdevdbit.c [1.7], gscdefs.h [1.6], gsdcolor.h [1.9], gsht.c [1.8],
gsht1.c [1.9], gstext.c [1.11], gstext.h [1.8], gxacpath.c [1.7],
gxcht.c [1.9], gxcldev.h [1.10], gxclimag.c [1.8], gxclist.c [1.8],
gxclpath.c [1.14], gxclpath.h [1.11], gxclrast.c [1.18], gxdcolor.c
[1.8], gxdcolor.h [1.8], gxdhtserial.h [1.2], gxht.c [1.9], gxpath.c
[1.6], gxpath2.c [1.5], gzpath.h [1.7]: 2002/08/26 23:00:07 dan)

Another fix of a problem that had been previously fixed and lost due to a
commit of files from ORIMP. MSVC will not accept { } for a structure
initializer. Added a zero to keep MSVC happy. Problem previously fixed by
Igor. (gsht1.c [1.10]: 2002/08/26 23:07:00 dan)

We have traced the difficulties with multiple-band processing in the code
we released on Aug. 26 to two problems:

  1. The halftone phase information is not adjusted for bands that
     start at locations other than the top of the page.

  2. The "moveto closepath" style of degenerate path, which our code
     allows to be passed through the band list, is used in the path
     encoding code to indicate that a path lies entirely outside the
     current band (i.e.: all of the path operators between the initial
     moveto and the final closepath have been skipped because they are
     outside of the band). This resulted in the code passing isolated
     "closepath" segments through the command list, which much confused
     the band list renderer.

The attached code release fixes both of these problems, and a couple of
other more minor issues we discovered. With this change, our system has
identical output for the banded and unbanded case for the pkmraw device
at 300 dpi, for all but one FTS file (027-09.ps). In that one case, the
banded and unbanded output are visually identical, so the output difference
may not be significant. We will look into this situation, and test some
of the other devices in the next day or so.

As best we can tell, halftone phase adjustment has never been correctly
implemented for the command list device. The pre-DeviceN code handles
binary halftone colors properly, but does not set the phase for general
colored halftones. General colored halftones are much more common in the
DeviceN code, which probably is the reason Dan first noticed the problem
with FTS file 245-07.ps (and others) with the DeviceN code.

                                                         Jan

Modified Files:

  src/gsht.c
    Modified the code that calculates the lcm_height field of a device
    halftone in gx_imager_dev_ht_install to use the full_height rather
    than the height of a halftone order. This typo was introduced sometime
    during the DeviceN development; the pre-DeviceN code was correct.

  src/gsptype1.c
  src/gsptype2.c
  src/gxwts.c
    Added the "get_phase" method to various gx_device_color_type_t
    instances.
  src/gxcht.c
  src/gxht.c
    Added the "get_phase" method to a pair of gx_device_color_type_t
    instances. Also modified the "write" and "read" methods of these
    structures to ignore halftone phase information. This information
    must be passed to and be directly handled by the command list
    writer code, so that the command list renderer code may correct it
    for the band starting coordinates.

  src/gxclpath.c
    1. Modified cmd_put_drawing_color to directly handle halftone phase
       information, using the new "get_phase" method of device colors.
       The passing of this information must be perfomed at the command
       list level, so that the command list renderer can correct the
       phase for the starting point of the band.
    2. Also in cmd_put_drawing_color, "unset" the saved color information
       if the halftone id does not match the most recently set halftone,
       rather than setting the saved color pointer to 0.
    3. In cmd_put_path, when processing a segment containing a
       moveto followed by a closepath, check if the moveto was to a point
       outside of the current band, and discard the closepath if this
       is the case. This is necessary to avoid inserting isolated
       closepath segments into the command list.

  src/gxclrast.c
    Added code to initialize the dev_color variable to clist_playback_band
    to "no color".

  src/gxdcolor.c
  src/gxdcolor.h
    Added the "get_phase" method to the gx_device_color_type_t structure,
    and installed this method in various instances of the structure. Also
    provided the two canonical implementations of this method.
(gsht.c [1.9], gsptype1.c [1.9], gsptype2.c [1.9], gxcht.c [1.10],
gxclpath.c [1.15], gxclrast.c [1.19], gxdcolor.c [1.9], gxht.c [1.10],
gxwts.c [1.2]: 2002/08/28 23:11:06 dan)

The two files were missed in earlier commits. Missing from the 8-28-02
commit form ORIMP. src/gxdcolor.c Added the "get_phase" method to the
gx_device_color_type_t structure, and installed this method in various
instances of the structure. Also provided the two canonical implementations
of this method. Missing from the 8-26-02 commit from ORIMP.
src/gxdhtserial.c 1. Updated gx_ht_read_tf and gx_ht_read_and_install to
properly use the reference count in a transfer function. 2. Fixed various
other errors discovered when this code was first used. (gxdcolor.h [1.9],
gxdhtserial.c [1.2]: 2002/08/29 00:11:30 dan)

The attached code fixes a minor problem introduced in our release
of August 26th. That release changed the behavior of the gx_path_bbox
procedure (gxpath2.c) so as to make the banding and non-banding cases
consistent. In the process we inadvertently also changed the behavior
of the pathbbox operator. This fix restores the proper behavior of
that operator.

Also included is a modified version of gsht.c for interim use. This is
not intended for final release. The gx_imager_dev_ht_install routine
is modified in this code to ensure that the halftone caches are also
made large enough to provide (at least) one tile per level. Doing so
avoids the cache overwrite bug that Dan has described, which avoids
many spurious differences in the regression test. Once Dan's fix for
the handling of the halftone tile in binary halftone colors is
installed, this version of gsht.c may be discarded.

Modified files:
 src/gspath1.c
    Modified gs_upathbbox to call gx_path_bbox_set rather than
    gx_path_bbox. The former will return the bounding box set via the
    setbbox operator, if that operator has been used for the current
    path; otherwise it will return the actual path bounding box. The
    latter will always return the actual path bounding box.

  src/gxpath.h
  src/gxpath2.c
    Added the gx_path_bbox_set procedure, which will return the
    bounding box set by the setbbox operator if that operator has been
    used for the current path.

Temporary Files:

  src/gsht.c
    Modified the gx_imager_dev_ht_install procedure to always allocate
    caches large enough to provide (at least) one tile per level. This
    is a temporary hack to avoid a bug with the handling of tiles for
    binary halftone colors. It is not intended for the final release.
(gsht.c [1.10], gspath1.c [1.7], gxpath.h [1.6], gxpath2.c [1.6]:
2002/08/30 02:38:24 dan)

This is a repeat of an earlier commit that was backed out. Its back. Split
the binary half tone cache initialization into two pieces. The halftone
cache is now initialized just prior to being used in the various halftone
render routines. This was doe to prevent a problem with cache conflicts. If
the half tone cache is not large enough for a separate tile for each level
then there could be a problem if two different device colors used the same
cache entry but with different level values. (gxht.c [1.11],
gximono.c [1.8]: 2002/08/30 04:39:10 dan)

A line was left out of the previous commit. This is part of the splitting of
the load the binary halftone cache until it is ready to be used.
(gxht.c [1.12]: 2002/08/30 06:19:54 dan)

Modified File: src/gxdevndi.c Modified gx_render_device_DeviceN to always
perform the conversion from color component intensity values to halftone
levels in an additive sense, if the gray_colorspace operand is true. This is
necessary for compatibility with the pre-DeviceN code. (gxdevndi.c [1.2]:
2002/09/03 02:58:48 dan)

Remove gdevht.c and gdevht.h. Also delete outdated references in lib.mak and
a few other files. (gxclrast.c [1.20], gxclread.c [1.9]: 2002/09/04 06:36:36
dan)

Changes required for compilation on HPUX and Tru64. Add missing header in
lib.mak after gxdcolor.h added to gscolor3.c. Change dci_std_color_bits
macro to prevent a divide by zero, caused by the compiler not using shortcut
evaluation in an initializer. (gxdevcli.h [1.12]: 2002/09/04 21:44:14
ghostgum)

Add redundant parentheses to dci_std_color_bits macro to work around MSVC 7
internal compiler error. (gxdevcli.h [1.13]: 2002/09/05 21:19:20 ghostgum)

Update versions, news and bug list for 7.30 alpha release. (gscdef.c [1.25]:
2002/09/07 17:57:09 giles)

</pre><h2><a name="7.30-Other"></a>Other</h2><pre>

DeviceN. (gsovrc.h [1.1]: 2002/08/22 07:12:29 henrys)

Adds support for the GX_COLOR_INDEX_TYPE define to the autoconf build. The
script tries a variety of likely candidates for a 64-bit type and passes the
first one found through the GCFLAGS makefile variable. If no such type is
found, it does nothing special, allowing the code in gxcindex.h to fallback
to a 32-bit type. (configure.ac [1.19]: 2002/09/05 08:54:08 giles)

Adds the new devicen-specific devices to the autoconf build.
(Makefile.in [1.16]: 2002/09/06 13:41:37 giles)

</pre><h2><a name="7.30-DeviceN_Source"></a>DeviceN Source (meerkat)</h2><pre>

Wed Aug 21 07:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gdevm1.c [1.5] (+2 -2):
        gx_default_encode_color() improperly called with non separable and
        linear device.  Fixes 045-01.ps regression problems.
        

Wed Aug 21 06:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * zdfilter.c [1.5] (+2 -2), gsdfilt.h [1.4] (+6 -4), gsdfilt.c [1.5] (+7 -3), 
        gdevp14.c [1.7] (+249 -8):
        non-transfer mapped cmap-procs for gdevp14.c.  (Raph)
        
        * gxshade.c [1.5] (+2 -2), gsht.c [1.16] (+9 -2), gdevpdfg.c [1.8] (+5 -5):
        Modified Files:
          src/gdevpdfg.c
            Changed various references to the default order component of a device
            halftone to refer to the order of the initial component instead. This
            avoids use of the (no longer initialized) default order.
        
          src/gsht.c
            Modified gs_currentscreenlevels to use the gray component of the current
            device halftone (if it exists) rather than the default component. If
            the gray component does not exist, the initial component will be used.
        
          src/gxshade.c
            Modified shade_init_fill_state to use the order of the initial component
            of the current device halftone, rather than the default order. This avoids
            use of the (no longer initialized) default order.
        

Mon Aug 19 05:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * lib.mak [1.24] (+3 -3):
        fixes minor merge discrepancy and a typo.
        

Sun Aug 18 08:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * lib.mak [1.23] (+21 -7), gxwts.c [1.2] (+58 -5), gxpcolor.h [1.5] (+8 -1), 
        gxht.c [1.9] (+270 -3), gxdhtserial.h [1.1] (+81 -0), gxdhtserial.c [1.1] (+625 -0), 
        gxdcolor.h [1.7] (+113 -2), gxdcolor.c [1.9] (+301 -5), 
        gxclpath.h [1.7] (+5 -2), gxcht.c [1.18] (+361 -1), gsserial.h [1.1] (+253 -0), 
        gsserial.c [1.1] (+365 -0), gsptype2.c [1.4] (+15 -1), gsptype1.c [1.7] (+88 -4), 
        gsdcolor.h [1.8] (+49 -5):
        Attached is the second installment of the code for modular serialization
        of device color in the command list. This release includes all of the
        necessary support code, but this code has not yet been hooked into the
        command list devices (writer and reader). That should be accomplished in
        a few days.
        
                                                                      Jan
        
        
        Files Added:
        
          gsserial.c        These two files provide a extended and public version
          gsserial.h        of the little-endian integer encoding used by the
                            command list. Since serialization can occur
                            outside of the command list, it is reasonable to have
                            this facility become a general utility. (For now,
                            at least, the command-list specific version of this
                            encoding remains as well.)
        
                            gsserial.c includes a unit-test.
        
        
          gxdhtserial.c     Code to serialize device halftones. These are serialized
          gxdhtserial.h     as a unit, rather than using separate commands for
                            separate pieces.
        
        
        Files Modified:
        
          gsdcolor.h        Removed the no longer used screens field from the wts
                            field of the colors union of the gx_device_color
                            structure.
        
                            Added the gx_device_color_saved structure, which may be
                            used by the command list device to retain information
                            about the last device color placed in a band. Using this
                            information can reduce the size of the newly encoded
                            color.
        
          gxdcolor.h        Added methods to the gx_device_color_type_t method
                            vector to support serialization of device colors. The
                            new methods are:
        
                              save_dc
                                Create a "saved" version of the device color. The
                                saved version contains information about the
                                device color, but does not include any pointers.
                                It can be used to reduce the amount of information
                                encoded with a device color.
        
                              get_dev_halftone
                                Return the device halftone used by a device color
                                (or a null pointer if no device halftone is used).
        
                              write
                                Serialize the device color.
        
                              read
                                Reconstruct the device color from its serial
                                representation.
        
                            Also added prototypes for two utilities to be used
                            when serializing device colors: gx_dc_write_color
                            and gx_dc_read_color. These work on color indices.
        
          gxclpath.h        Added the codes for cmd_opv_ext_put_halftone and
                            cmd_opv_ext_put_drawing_color.
        
          gxpcolor.h        Added prototypes for gx_dc_pattern_save_dc,
                            gx_pattern_dc_write, and gx_dc_pattern_read. Since
                            patterns cannot be passed through the command list,
                            all of these just return errors.
        
          gsptype1.c        Added stubs for the new device color methods. The
          gsptype2.c        get_dev_halftone method is supported to the extent
                            possible; it cannot be supported for color
                            PatternType 1 patterns as their PaintProc procedures
                            may use multiple patterns.
        
          gxcht.c           Added support for the new device color methods for
                            general (colored halftone ) device colors, including
                            full serialization support.
        
          gxht.c            Added support for the new device color methods for
                            binary halftone device colors, including full
                            serialization support.
        
          gxdcolor.c        Added support for the new device color methods for
                            the "no color", transparent, and pure device colors,
                            including serialization support. Also added the two
                            utility routines gx_dc_write_color and
                            gx_dc_read_color, which work on color indices.
        
          gxwts.c           Added stubs to support the new device color methods.
                            Also corrected a few minor compiler complaints.
        
          lib.mak           Added targets for gsserial.$(OBJ) and
                            gxdhtserial.$(OBJ). Also updated some dependency
                            lists.
        
        * zcolor.c [1.8] (+1 -2):
        Modified Files: (jan)
        
          lib/gs_cspace.ps
            Added _setcolorspace_nosub, a variation of the setcolorspace operation that
            avoids color space substitution. This is required for ICCBased color spaces,
            as they may be used to substitute for a device-specific color space, but
            use that same device-specific color space as an alternative space. If the
            alternative space was used (or even if it wasn't, in the prior code), an
            infinite loop would result (the eventual error is execstackoverflow).
        
          lib/gs_icc.ps
            Modified the cs_install routine for ICCBased color spaces to use the new
            _setcolorspace_nosub procedure.
        
          lib/pdf_draw.ps
            Removed the color substitution scheme used by resolvecolorspace. This has
            been superseded by the PostScript-based scheme.
        
          lib/pdf_main.ps
            Implemented color space substitution using PostScript's method. This works
            for all color spaces and, with the above noted modifications to
            gs_cspace.ps and gs_icc.ps, avoids infinite-loop problems. The
            earlier code did not implement color space substitution for
            DeviceCMYK (the code was just missing) and in rare cases could
            suffer from infinite loops.
        
          src/zcolor.c
            Correct a typo: the .setdevcspace operator was included twice in the
            zcolor_op_defs array.
        

Wed Aug 14 04:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * zusparam.c [1.5] (+2 -1), zfdcte.c [1.4] (+2 -2), zfapi.c [1.4] (+35 -22), 
        zcsdevn.c [1.8] (+2 -3), zcolor.c [1.7] (+3 -4), zchar1.c [1.4] (+16 -7), 
        watc.mak [1.3] (+2 -2), version.mak [1.4] (+5 -5), unixinst.mak [1.4] (+5 -5), 
        unixansi.mak [1.4] (+2 -2), os2.mak [1.4] (+2 -1), openvms.mak [1.4] (+2 -2), 
        msvclib.mak [1.3] (+2 -2), msvc32.mak [1.8] (+2 -2), macos-fw.mak [1.3] (+3 -10), 
        libpng.mak [1.4] (+2 -2), gxsync.h [1.4] (+8 -8), gxshade1.c [1.4] (+5 -2), 
        gxfont.h [1.4] (+2 -1), gxdevice.h [1.11] (+7 -6), gsptype1.c [1.6] (+5 -3), 
        gsmisc.c [1.4] (+2 -2), gslib.c [1.7] (+6 -7), gsimage.c [1.6] (+5 -2), 
        gsht1.c [1.10] (+3 -3), gp_macio.c [1.4] (+12 -14), gdevpxat.h [1.4] (+1 -3), 
        gdevpsft.c [1.4] (+6 -6), gdevpsf2.c [1.4] (+21 -13), gdevpsf.h [1.4] (+3 -2), 
        gdevprn.h [1.5] (+16 -16), gdevpdtw.c [1.2] (+20 -5), gdevpdtt.h [1.2] (+2 -1), 
        gdevpdtt.c [1.2] (+4 -6), gdevpdts.c [1.2] (+4 -2), gdevpdti.c [1.2] (+2 -2), 
        gdevpdtf.h [1.2] (+2 -1), gdevpdtf.c [1.2] (+24 -5), gdevpdte.c [1.2] (+67 -1), 
        gdevpdtd.c [1.2] (+3 -2), gdevpdtc.c [1.2] (+3 -3), gdevpdtb.h [1.2] (+3 -2), 
        gdevpdtb.c [1.2] (+72 -5), gdevpdfs.c [1.4] (+3 -3), gdevpdfj.c [1.4] (+4 -4), 
        gdevpdfi.c [1.4] (+26 -24), gdevpdfg.c [1.7] (+6 -4), gdevpdff.c [1.4] (+10 -5), 
        gdevpdfe.c [1.4] (+12 -7), gdevp14.c [1.6] (+8 -4), gdevbmpc.c [1.4] (+3 -3), 
        dwinst.h [1.4] (+2 -2), dwinst.cpp [1.4] (+2 -2), devs.mak [1.14] (+6 -6):
        backward forward merge.
        

Mon Aug 12 20:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gzht.h [1.7] (+4 -6), gxclrast.c [1.19] (+9 -11), gswts.h [1.2] (+7 -1), 
        gswts.c [1.2] (+13 -1), gshtx.c [1.9] (+4 -2), gshtscr.c [1.6] (+5 -2), 
        gsht1.c [1.9] (+31 -14), gsht.c [1.15] (+556 -190):
        
        This is the first part of the code we are providing to allow device
        colors to be passed through the command list in a modular manner. The
        rest of the code should be released within a couple of days. We are
        providing this code first because we need to fix these leaks in order
        for the rest of the code to function correctly, but these fixes are
        otherwise independent of that code.
        
          src/gsht.c:
        
            a. Added a (moderately hack-ish) mechanism to allow halftone
               components to share well-tempered screens. This mechanism uses the
               width field of the halftone component, which is nominally not used
               for well-tempered screens, to indicate which component "owns" the
               screen and can release it.
        
            b. Modified gx_ht_alloc_ht_order and gx_ht_copy_ht_order to handle well-
               tempered screens, which do not have levels or bid_data arrays.
        
            c. Created gx_ht_move_ht_order, an analog to gx_ht_copy_ht_order, that
               assumes ownership of the structure's reference by a source halftone
               order rather than copying them.
        
            d. Modified gx_ht_order_release to handle well-tempered screen
               component orders, and to decrement the transfer function
               referenced by a halftone order (as opposed to blindly releasing
               it).
        
            e. Completely re-wrote gx_imager_dev_ht_install, to fix various memory
               leaks and better handle well-tempered screens. See the comments
               in the procedure for additional information.
        
            f. Modified gx_ht_install to take ownership of all structures referenced
               by the operand device halftone, if it returns successfully. This
               matches the behavior of the pre-DeviceN code and is required by
               various clients to avoid memory leaks. Any referenced structures
               that are not required by the device halftone in the imager state
               will be released (again, only on successful completion).
        
            g. Modified gx_imager_set_effective_xfer to ignore the "default"
               order in a device halftone. This order is not used for device
               halftones installed in the imager state, and
               gx_imager_set_effective_xfer should only be called for device
               halftones installed in the imager state.
        
          src/gsht1.c:
            a. Modified gs_sethalftone_allocated to release any unused parts
               of the device halftone in the event that gx_ht_install returns
               with an error code.
        
            b. Modified gs_sethalftone_prepare to not allocate a cache for
               (traditional) halftone orders.
        
            c. Modified process_transfer to set a reference count of 1 in the
               transfer functions. This is appropriate, as the routine
               sets a reference to these structures (in the halftone component
               order).
        
            d. Simplified the check for bi-level device in gs_sethalftone_try_wts.
        
            e. Used gs_alloc_struct_array in place of malloc for allocating the
               component order array in gs_sethalftone_try_wts.
        
            f. Set the num_bits and num_levels values in well-tempered screening
               halftone orders to 0. This setting is required to allow them to
               be correctly handled by gx_ht_copy_ht_order.
        
            g. Added processing of halftones to gx_sethalftone_try_wts.
        
        
          src/gshtscr.c:
            Modified gs_screen_install to discard any structures referenced by
            a device halftone if gx_ht_install returns an error code.
        
          src/gshtx.c
            Modified gs_ht_install to discard any structures referenced by
            a device halftone if gx_ht_install returns an error code.
        
          src/gswts.c
            Added the procedures gs_wts_free_enum and gs_wts_free_screen, to
            free gs_wts_screen_enum_t and wts_screen_t structures.
        
          src/gswts.h
            Added prototypes for the procedures gs_wts_free_enum and
            gs_wts_free_screen. These are used by the device halftone
            code to free gs_wts_screen_enum_t and wts_screen_t structures.
        
          src/gxclrast.c
            Added code in read_set_ht_data to discard just the allocated
            halftone components array, but not any of the structures
            it references, after gx_imager_dev_ht_install returns. This is
            necessary as gx_imager_dev_ht_install will always copy this
            structure, and cannot release the original.
        
            NB: This is an interim change. The mechanism by which halftones
                are passed through the command list will change shortly.
        
          src/gzht.h
            Modified the prototypes for gx_imager_dev_ht_install and
            gx_ht_install to remove the const qualifier for the device
            halftone operand.
        

Thu Aug  8 17:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * int.mak [1.7] (+8 -3):
        The zcolor3.c module was accidently dropped.  THis module is needed for
        the UseCIEColor feature.
        

Sun Aug  4 05:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gsht.c [1.14] (+2 -1):
        Increment the reference count for the transfer function when a halftone
        is copied.
        

Sat Aug  3 20:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gsht.c [1.13] (+2 -1):
        The halftone transfer function was lost when the "copy halftone" routine
        was created.
        

Fri Aug  2 08:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * zht1.c [1.6] (+1 -2):
        This file was left out of the last commit
        
        * zht.c [1.5] (+1 -2), zcolor.c [1.6] (+4 -5), igstate.h [1.7] (+2 -2), 
        gxistate.h [1.13] (+5 -8), gxclrast.c [1.18] (+3 -6), gxclist.h [1.5] (+2 -2), 
        gxclimag.c [1.9] (+14 -22), gsistate.c [1.8] (+7 -11), gsht.c [1.12] (+5 -10), 
        gscolor1.c [1.8] (+3 -3), gscolor.c [1.7] (+5 -7):
        The data section of the gray transfer component (from the setcolortransfer
        operator) and the 'default_comp' were not both being updated properly.
        This resulted in gray transfer functions not being transfered properly
        through the clist.  The fix involves simply removing the 'default_comp'
        and using the gray component for the default and for the settransfer
        operator.
        

Thu Aug  1 07:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxicolor.c [1.6] (+2 -2):
        A correction to the earlier color image fix.  There was a typo in the
        CMYK processing which was found in the regression testing.
        

Thu Aug  1 05:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxclimag.c [1.8] (+2 -2):
        There was an improper check which was excluding the zeroth component
        (which is valid) when putting transfer functions from a setcolortransfer
        into the clist.
        
        * gximono.c [1.6] (+2 -22), gxicolor.c [1.5] (+35 -9):
        This is the fix for Orimp's image.ps test file.  The image processing
        routine were special casing 1, 3, and 4 components cases and assuming
        that there were Gray, RGB, and CMYK.  This did not work for DeviceN
        colorspaces.  The fix involves using the colorspace remap_color
        routine instead of going directly to the cmap_procs.  This should be
        slightly slower (but will work in all cases).
        

Wed Jul 31 05:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxclrast.c [1.17] (+6 -2):
        The component number for transfer functions was not being set properly
        in the clist.  This was causing an ERROR in dina3_watermark.pdf under
        WIndows and MSVC.
        

Thu Jul 25 08:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gdevpsdu.c [1.4] (+46 -1), gdevpsdf.h [1.4] (+8 -1), gdevps.c [1.4] (+8 -3), 
        gdevpdf.c [1.8] (+4 -4), devs.mak [1.13] (+2 -2):
        (Jan) Implements the overprint and overprint mode features for the
        PostScript and PDF writer devices. These devices have supported the
        overprint feature for some time. The modifications allow them to
        intercept and discard the create_compositor invocation for the
        overprint compositor, as they don't need the compositor and already
        access overprint information from the imager state.
        
        Note: This set of changes is quite simple, but we have no easy way to
              test the result. Hence, while we believe it very unlikely the
              changes will cause discrepancies, we have not actually tested
              them (other than to verify compilation).
        
        Modified files:
        
          src/devs.mak
            Updated dependency list for gdevpsdu.$(OBJ).
        
          src/gdevpdf.c
            Added the methods psdf_get_bits, psdf_get_bits_rectangle, and
            psdf_create_compositor to the method vector initialization of the
            gs_pdfwrite_device.
        
          src/gdevps.c
            Added the methods psdf_get_bits, psdf_get_bits_rectangle, and
            psdf_create_compositor to the method vector initialization of the
            gs_pswrite_device and gs_epswrite_device.
        
          src/gdevpsdf.h
            Added prototypes for the psdf_get_bits, psdf_get_bits_rectangle,
            and psdf_create_compositor procedures.
        
          src/gdevpsdu.c
            Added the psdf_get_bits, psdf_get_bits_rectangle, and
            psdf_create_compositor procedures. The first of these just returns
            an unregistered error. The prior code also generated an error if
            these methods were called, but via a much more obscure and round-
            about route. The psdf_create_compositor procedure recognizes and
            discards invocations of the create_compositor method for the overprint
            compositor. The PostScript and PDF writers do not need this compositor
            to support overprint, and would fail if it were present as it
            requires support for the get_bits/get_bits_rectangle methods.
        

Thu Jul 25 07:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * zht2.c [1.7] (+22 -22), lib.mak [1.22] (+22 -8), gxwts.h [1.1] (+72 -0), 
        gxwts.c [1.1] (+438 -0), gxshade.c [1.4] (+7 -3), gxdht.h [1.7] (+22 -1), 
        gxdevndi.c [1.13] (+52 -4), gswts.h [1.1] (+68 -0), gswts.c [1.1] (+1138 -0), 
        gshtscr.c [1.5] (+72 -55), gsht1.c [1.8] (+121 -2), gsht.c [1.11] (+36 -4), 
        gsdcolor.h [1.7] (+17 -1):
        Raph's well tempered screening code.
        
        * gxdevice.h [1.10] (+3 -1), gxcmap.c [1.27] (+25 -1), gdevdsp.c [1.11] (+8 -5), 
        gdevdbit.c [1.5] (+19 -10):
        Patch from Russel Lang  (gsview@ghostgum.com.au)
        
        Anti-aliasing for CMYK devices did not work because
        gx_default_copy_alpha converted the new and existing pixel
        values to RGB, merged them then remapped the result. This
        patch uses decode_color on the two pixels, merges the pixel
        color values individually, then uses encode_color on the
        result.
        
        To avoid flashes of incorrect colour begin displayed when
        the display device size is changed, the display device
        erases the page to white immediately after bitmap
        allocation. Actually, it was erasing the colour to
        RGB(1.0,1.0.1.0) by calling map_rgb_color, which actually
        calls encode_color which is expecting CMYK as input.  This
        resulted in a black background. This patch changes the code
        to use encode_color with appropriate values for DeviceGray,
        DeviceRGB or DeviceCMYK.
        
        The display device did not work with CMYK anti-aliasing
        because the decode_color procedure was decoding to RGB, not
        CMYK.  This patch adds new cmyk_[18]bit_map_color_cmyk
        functions for decode_color.
        

Sun Jul 21 03:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcmap.h [1.13] (+7 -0):
        This file was not included in the previous commit.  This file is part of a
        fix for restoring the setting othe cmap_procs in the imager state.
        

Sat Jul 20 23:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcmap.c [1.26] (+8 -1), gxclrast.c [1.16] (+2 -0), gsstate.c [1.9] (+1 -0), 
        gsdevice.c [1.5] (+6 -1):
        The last commit went too far.  Not only did it delete the setup of the
        cm_color_map_procs, it also deleted the setup of cmap_procs.
        This commit corrects that.
        

Sat Jul 20 08:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxistate.h [1.12] (+1 -5), gxcmap.h [1.12] (+1 -8), gxcmap.c [1.25] (+8 -19), 
        gxclrast.c [1.15] (+1 -3), gsstate.c [1.8] (+1 -2), gsdevice.c [1.4] (+2 -7):
        Remove the cm_color_mapping_procs from the imager state.
        Instead we are getting the mapping procs directly from the
        device as needed.
        

Sat Jul 20 07:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gdevx.c [1.5] (+5 -1):
            Fixed a problem in x_copy_image. If the image passed to this routine
            contains more than one pixel, the colors_and and colors_or fields were
            not updated. Because these fields are only used for optimization, and
            properly updating them in this situation is potentially expensive,
            they are now just set to safe values (colors_and = 0;
            colors_or = (x_pixel)(-1)).
        

Thu Jul 18 06:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * msvc32.mak [1.7] (+14 -7):
        Add a conditional to enable 64 bit gx_color_index values.
        

Thu Jul 18 04:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcmap.c [1.24] (+12 -4):
        The previous changes for Seprations color spaces and additive process color
        models where only applied to contone devices.  This extends it to half tone
        devices.
        

Thu Jul 18 01:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gscsepr.c [1.14] (+10 -1), gscdevn.c [1.15] (+9 -1):
        Always use the alternate tint transform logic if the device color space
        is additive.  This seem to match both the specification and the action of
        Adobe Acrobat.
        

Wed Jul 17 22:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gsdll32.rc [1.3] (+3 -3), dwsetup.rc [1.3] (+2 -2), dwmain.rc [1.3] (+3 -3):
        Added a couple of changes that Henry missed from the CVS head merge. These
        are required so that the MSVC version will build.
        

Wed Jul 17 06:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gdevdsp.c [1.10] (+0 -44):
        Removed a pair of routines that were not used and caused compile errors
        under MSVC.
        

Tue Jul 16 18:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gsdps1.c [1.3] (+3 -2):
        The following should be prominently posted in full view of all
        software engineers:
        
          ***Do not use caches to hold unreplaceable data***
        
        Failure to follow that rule of good programming is the heart of the
        problem with FTS panel 245-04 (file 245-01.ps).
        
        The immediate cause of the problem is the optimization put in the
        setcolorspace code to avoid repeatedly setting the same color space.
        The steps that lead to the error are the following:
        
          1. The job sets a CIEBasedABC color space as the current color
             space. The white and black point information from the color
             space dictionary is combined with the white and black point
             information in the color rendering dictionary to sample the
             TransformPQR procedures in that dictionary. The resulting
             data is placed in the joint CIE cache. All of this activity
             ends with an execution of the internal operator cie_tpqr_finish
             (zcrd.c). This operator has two side-effects:
        
                 The TransformPQR data structure in the cie_render structure
                 of the current state is set to TransformPQR_from_cache, which
                 indicates that the PQR phase of the CIE color mapping (the
                 white point point adjustment) is to be done via the joint CIE
                 cache.
        
                 The gs_cie_cs_complete procedure is invoked with the "init"
                 argument set to false, indicating that no further
                 initialization is required for the joint CIE caches. This
                 causes the status flag in those caches to be set to
                 CIE_JC_STATUS_INITED, indicating that the caches are ready
                 to use.
        
          2. The job calls gsave. Since the joint CIE caches can be shared by
             multiple graphic states, the cache reference count is incremented.
        
          3. The job sets a pattern color space, whose base color space is the
             current (CIEBasedABC) color space.
        
             The PostScript interpreter in Ghostscript uses the convention that
             a base or alternative color space will always be set as the current
             color space immediately before the enclosing color space is set.
             The cs_install procedure for the pattern color space
             (lib/gs_patrn.ps) invokes setcolorspace on the base space. Because
             this is already the current color space, nothing happens.
        
          4. Immediately afterwards, the cs_install procedure invokes the
             .setpatternspace operator on the enclosing pattern color space.
             Through a couple of layers, this will invoke the "install_cspace"
             method for pattern color spaces, the gx_install_Pattern
             (gspcolor.c). This will in turn invoke the "install_cspace" method
             for the base color space, in this case gx_install_CIE.
        
          5. Through a few additional layers, gx_install_CIE will also call
             gs_cie_cs_complete (see (1) above), but this time the "init"
             variable will be set to true, indicating that additional
             initialization is required.
        
             gs_cie_cs_complete will invoke gx_currentciecaches, whose purpose
             is to make sure that new copies of the joint CIE cache is created
             when necessary. Since the reference count on the existing cache is
             larger than 1 (see (2) above), a unique copy of the cache is created
             and is marked as invalid.
        
          6. Subsequently, when drawing is attempted in the base color (the
             pattern has PaintType 2), the code will note that the cache is
             not yet valid and invoke cie_joint_caches_init (gscie.c). This
             routine can do nothing, however, because the TransformPQR structure
             for the cie_render structure in the graphic state is set to
             TransformPQR_from_cache, indicating that the only data available
             for the TransformPQR procedure is in the (now invalidated) cache.
        
             As a fall-back, the CIE color is mapped to RGB by setting all
             components to 0, which yields the black output.
        
        The proper fix for this problem is re-designing both the CIE color space
        and the color rendering structures so that they retain enough information
        to regenerate the joint CIE cache when necessary. Since that is a big
        change, the attached modifications take the more modest approach of adding
        a "forcesetcolorspace" operator, which will set a color space even if it
        is identical to the current color space.
        
        Also included in the set of changes is a minor modification to gs_rectfill
        (gsdps1.c) that suppresses direct access to the device's fill_rectangle
        procedure if both overprint and overprint mode are true. Since
        overprintmode must be applied prior to halftoning, the code must be forced
        through one of the higher-level methods which include the pre-halftoned
        device color information.
        
        Modified files:
        
          lib/gs_cspace.ps
            Added the _setcolorspace procedure, which accepts both a boolean and
            a color space dictionary. If the boolean is true, the color space
            will not be set if it is the same as the current color space (via a
            conservative evaluation).
        
            The setcolorspace pseudo-operator now invokes _setcolorspace with the
            boolean operand set to true. A new operator, forcesetcolorspace,
            invokes _setcolorspace with boolean set to false.
        
          lib/gs_devn.ps
          lib/gs_icc.ps
          lib/gs_indxd.ps
          lib/gs_patrn.ps
          lib/gs_sepr.ps
            Replaced setcolorspace with forcesetcolorspace when setting a base or
            alternative color space. This is necessary due to some problems in the
            handling of the the joint CIE cache in the graphic library.
        
          src/gsdps1.c
            Modify gs_rectfill to suppress direct access of a device's
            fill_rectangle method if both overprint and overprint mode are set
            to true. This is required to make sure the overprint compositor has
            access to pre-halftoned device color information with which to
            implement overprint mode.
        

Tue Jul 16 07:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcmap.c [1.23] (+5 -5):
        Transfer functions were not be correctly applied when the source colorspace
        was CMYK and we were halftoning.
        

Tue Jul 16 04:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * zvmem2.c [1.3] (+3 -3), zvmem.c [1.3] (+4 -4), zusparam.c [1.4] (+10 -10), 
        zupath.c [1.3] (+25 -16), ztype.c [1.3] (+3 -3), ztrans.c [1.4] (+38 -9), 
        ztoken.c [1.3] (+8 -7), zshade.c [1.4] (+52 -36), zrelbit.c [1.3] (+2 -2), 
        zpcolor.c [1.5] (+5 -5), zpath1.c [1.3] (+8 -8), zpath.c [1.3] (+7 -7), 
        zmisc2.c [1.3] (+5 -5), zmisc1.c [1.3] (+11 -6), zmedia2.c [1.3] (+22 -18), 
        zmatrix.c [1.3] (+6 -6), zlib.mak [1.3] (+8 -7), ziodevs.c [1.3] (+3 -3), 
        ziodev2.c [1.3] (+2 -2), ziodev.c [1.3] (+2 -1), zimage.c [1.4] (+17 -12), 
        zht2.c [1.6] (+9 -10), zht1.c [1.5] (+3 -3), zht.c [1.4] (+6 -6), 
        zgstate.c [1.7] (+7 -7), zgeneric.c [1.3] (+9 -9), zfunc4.c [1.3] (+2 -2), 
        zfunc.c [1.3] (+74 -37), zfsample.c [1.3] (+3 -3), zfrsd.c [1.3] (+17 -10), 
        zfproc.c [1.3] (+3 -3), zfont42.c [1.3] (+31 -24), zfont0.c [1.3] (+4 -4), 
        zfont.c [1.3] (+3 -3), zfilter.c [1.3] (+2 -2), zfileio.c [1.3] (+12 -12), 
        zfile.c [1.3] (+91 -46), zfctest.c [1.1] (+105 -0), zfcmap.c [1.4] (+44 -95), 
        zfcid1.c [1.3] (+24 -7), zfcid0.c [1.4] (+7 -45), zfapi.c [1.3] (+8 -15), 
        zdscpars.c [1.3] (+3 -3), zdps1.c [1.3] (+4 -4), zdps.c [1.3] (+2 -2), 
        zdpnext.c [1.5] (+6 -6), zdouble.c [1.3] (+8 -8), zdfilter.c [1.4] (+2 -23), 
        zdevice2.c [1.3] (+3 -3), zcsindex.c [1.3] (+2 -2), zcrd.c [1.4] (+72 -11), 
        zcontrol.c [1.3] (+64 -40), zcontext.c [1.3] (+28 -28), 
        zcolor.c [1.5] (+40 -47), zcie.c [1.3] (+28 -40), zcidtest.c [1.1] (+145 -0), 
        zcharout.c [1.3] (+17 -4), zchar42.c [1.3] (+7 -6), zchar1.c [1.3] (+91 -63), 
        zchar.c [1.3] (+13 -8), zcfont.c [1.3] (+23 -3), zbfont.c [1.3] (+53 -86), 
        winlib.mak [1.5] (+1 -7), winint.mak [1.3] (+22 -20), watcw32.mak [1.3] (+2 -2), 
        watclib.mak [1.4] (+2 -2), version.mak [1.3] (+4 -4), vdtrace.h [1.3] (+31 -31), 
        vdtrace.c [1.3] (+2 -5), unixlink.mak [1.3] (+10 -18), unixinst.mak [1.3] (+23 -23), 
        unixansi.mak [1.3] (+8 -12), unix-gcc.mak [1.9] (+10 -14), 
        unix-dll.mak [1.3] (+12 -12), unix-aux.mak [1.3] (+2 -1), 
        unistd_.h [1.3] (+2 -2), ugcclib.mak [1.3] (+24 -5), szlibxx.h [1.3] (+5 -5), 
        strimpl.h [1.3] (+3 -3), stream.h [1.3] (+47 -47), stream.c [1.3] (+14 -14), 
        stdpre.h [1.3] (+15 -29), stdpn.h [1.1] (+51 -0), stdio_.h [1.3] (+2 -2), 
        std.h [1.3] (+15 -17), srdline.h [1.3] (+5 -5), spsdf.h [1.3] (+10 -12), 
        spprint.h [1.3] (+27 -27), slzwx.h [1.3] (+3 -3), sjpegc.c [1.3] (+46 -2), 
        sjpeg.h [1.3] (+26 -30), siscale.c [1.3] (+2 -2), siinterp.c [1.3] (+2 -2), 
        shcgen.h [1.3] (+9 -9), shc.h [1.3] (+3 -3), sfxstdio.c [1.3] (+12 -12), 
        sfxfd.c [1.3] (+15 -15), seexec.c [1.3] (+16 -4), sdct.h [1.3] (+2 -2), 
        sdcparam.h [1.3] (+19 -19), scommon.h [1.3] (+19 -11), scfetab.c [1.3] (+2 -2), 
        scfe.c [1.3] (+6 -6), scfdtab.c [1.2] (+3 -3), scfdgen.c [1.3] (+11 -17), 
        scfd.c [1.3] (+5 -5), sbwbs.c [1.3] (+2 -2), sbcp.h [1.3] (+3 -3), 
        sa85d.c [1.3] (+2 -2), pipe_.h [1.3] (+3 -3), os2.mak [1.3] (+7 -8), 
        opextern.h [1.3] (+86 -86), oper.h [1.3] (+2 -2), openvms.mmk [1.3] (+14 -2), 
        openvms.mak [1.3] (+7 -6), opdef.h [1.3] (+3 -3), opcheck.h [1.3] (+2 -2), 
        oparc.h [1.3] (+4 -4), msvc32.mak [1.6] (+32 -19), memory_.h [1.3] (+14 -8), 
        md5main.c [1.1] (+139 -0), md5.h [1.2] (+18 -21), md5.c [1.3] (+73 -108), 
        math_.h [1.3] (+2 -2), malloc_.h [1.3] (+2 -2), main.h [1.3] (+2 -2), 
        macosx.mak [1.2] (+8 -13), macos-mcp.mak [1.3] (+2 -2), 
        macos-fw.mak [1.2] (+7 -2), libpng.mak [1.3] (+2 -2), lib.mak [1.21] (+124 -63), 
        jpeg.mak [1.3] (+2 -2), ivmem2.h [1.3] (+3 -3), iutil2.h [1.3] (+6 -6), 
        iutil.h [1.4] (+29 -29), iutil.c [1.6] (+2 -2), itoken.h [1.3] (+7 -7), 
        istruct.h [1.3] (+2 -2), istream.h [1.3] (+7 -7), istack.h [1.3] (+27 -28), 
        istack.c [1.3] (+4 -4), iscannum.h [1.3] (+3 -3), iscannum.c [1.3] (+28 -4), 
        iscanbin.h [1.3] (+3 -3), iscanbin.c [1.3] (+11 -7), iscan.h [1.3] (+16 -13), 
        iscan.c [1.3] (+7 -5), isave.h [1.3] (+16 -16), isave.c [1.3] (+14 -14), 
        iref.h [1.3] (+189 -108), ireclaim.c [1.3] (+4 -4), iplugin.h [1.3] (+7 -7), 
        ipcolor.h [1.3] (+3 -3), iparray.h [1.3] (+3 -3), iparam.h [1.3] (+18 -18), 
        iparam.c [1.3] (+18 -18), interp.h [1.3] (+15 -15), interp.c [1.3] (+15 -14), 
        int.mak [1.6] (+112 -59), inames.h [1.3] (+17 -17), inamedef.h [1.3] (+4 -4), 
        iname.c [1.3] (+4 -4), imemory.h [1.3] (+12 -12), imainarg.h [1.3] (+3 -4), 
        imainarg.c [1.3] (+21 -21), imain.h [1.3] (+47 -50), imain.c [1.3] (+11 -15), 
        ilocate.c [1.3] (+5 -4), iinit.h [1.3] (+5 -5), iinit.c [1.3] (+6 -4), 
        iimage2.h [1.4] (+4 -4), iimage.h [1.4] (+10 -10), iht.h [1.3] (+5 -5), 
        igstate.h [1.6] (+2 -2), igcstr.h [1.3] (+7 -7), igcstr.c [1.3] (+2 -2), 
        igc.h [1.3] (+11 -11), igc.c [1.3] (+14 -14), ifwpred.h [1.3] (+4 -4), 
        ifunc.h [1.3] (+12 -16), ifrpred.h [1.3] (+4 -4), ifont42.h [1.3] (+8 -8), 
        ifont2.h [1.3] (+3 -3), ifont1.h [1.3] (+12 -12), ifont.h [1.3] (+4 -13), 
        ifilter2.h [1.3] (+5 -5), ifilter.h [1.3] (+18 -18), ifcid.h [1.3] (+5 -5), 
        ifapi.h [1.3] (+1 -2), idstack.h [1.3] (+3 -3), idstack.c [1.3] (+2 -2), 
        idparam.h [1.3] (+37 -37), idosave.h [1.3] (+5 -5), idict.h [1.3] (+23 -23), 
        idict.c [1.3] (+3 -3), idebug.h [1.3] (+9 -9), idebug.c [1.3] (+5 -5), 
        iddstack.h [1.3] (+3 -3), icsmap.h [1.3] (+5 -5), icontext.h [1.3] (+8 -8), 
        icontext.c [1.3] (+2 -1), icolor.h [1.3] (+7 -7), icie.h [1.3] (+31 -31), 
        icid.h [1.3] (+2 -2), icharout.h [1.3] (+15 -15), ichar1.h [1.3] (+5 -5), 
        ichar.h [1.3] (+14 -14), icclib.mak [1.3] (+2 -2), iccfont.c [1.3] (+9 -4), 
        ibnum.h [1.3] (+9 -9), iapi.h [1.3] (+45 -75), iapi.c [1.3] (+3 -3), 
        ialloc.h [1.3] (+8 -8), gzpath.h [1.3] (+11 -11), gzline.h [1.3] (+2 -2), 
        gzht.h [1.6] (+47 -47), gzacpath.h [1.3] (+7 -7), gxxfont.h [1.3] (+19 -21), 
        gxtype1.h [1.3] (+22 -22), gxtype1.c [1.3] (+41 -26), gxttf.h [1.3] (+2 -2), 
        gxtmap.h [1.3] (+5 -5), gxtext.h [1.3] (+20 -20), gxsync.h [1.3] (+13 -13), 
        gxstroke.c [1.3] (+18 -18), gxstate.h [1.4] (+14 -14), gxshade6.c [1.3] (+3 -3), 
        gxshade4.h [1.3] (+10 -10), gxshade4.c [1.3] (+2 -3), gxshade1.c [1.3] (+242 -22), 
        gxshade.h [1.3] (+30 -22), gxshade.c [1.3] (+31 -15), gxsample.h [1.3] (+3 -3), 
        gxrplane.h [1.3] (+3 -3), gxropc.h [1.3] (+3 -3), gxpdash.c [1.3] (+4 -4), 
        gxpcopy.c [1.3] (+4 -4), gxpcolor.h [1.4] (+23 -23), gxpcmap.c [1.5] (+3 -3), 
        gxpcache.h [1.3] (+2 -2), gxpath.h [1.3] (+82 -83), gxpath.c [1.3] (+4 -4), 
        gxpaint.h [1.3] (+15 -15), gxpageq.h [1.3] (+24 -24), gxpageq.c [1.3] (+4 -4), 
        gxp1impl.h [1.3] (+3 -3), gxp1fill.c [1.3] (+3 -3), gxop1.h [1.3] (+5 -5), 
        gxmclip.h [1.3] (+5 -5), gxmatrix.h [1.3] (+7 -7), gxline.h [1.3] (+4 -5), 
        gxistate.h [1.11] (+54 -40), gxipixel.c [1.4] (+9 -9), gxiparam.h [1.3] (+26 -26), 
        gxiodev.h [1.3] (+42 -27), gximage3.h [1.3] (+25 -25), gximage3.c [1.3] (+2 -2), 
        gximage.h [1.3] (+12 -12), gximage.c [1.3] (+3 -3), gximag3x.h [1.3] (+27 -27), 
        gximag3x.c [1.4] (+8 -8), gxifast.c [1.3] (+2 -2), gxidata.c [1.3] (+7 -7), 
        gxiclass.h [1.3] (+4 -4), gxht.h [1.5] (+11 -11), gxht.c [1.8] (+3 -3), 
        gxhint3.c [1.3] (+4 -4), gxhint2.c [1.3] (+4 -4), gxhint1.c [1.3] (+7 -7), 
        gxgetbit.h [1.3] (+9 -9), gxfunc.h [1.3] (+30 -8), gxfont42.h [1.3] (+36 -16), 
        gxfont1.h [1.3] (+18 -10), gxfont0c.h [1.1] (+59 -0), gxfont0.h [1.3] (+8 -3), 
        gxfont.h [1.3] (+62 -40), gxfmap.h [1.3] (+5 -5), gxfixed.h [1.3] (+8 -8), 
        gxfill.c [1.3] (+20 -20), gxfcopy.h [1.1] (+142 -0), gxfcopy.c [1.1] (+1618 -0), 
        gxfcmap1.h [1.1] (+119 -0), gxfcmap.h [1.3] (+231 -94), 
        gxfcid.h [1.3] (+9 -7), gxfcache.h [1.3] (+17 -12), gxfarith.h [1.3] (+5 -5), 
        gxfapi.h [1.3] (+5 -5), gxfapi.c [1.3] (+4 -4), gxdither.h [1.6] (+2 -2), 
        gxdhtres.h [1.3] (+2 -2), gxdht.h [1.6] (+9 -10), gxdevmem.h [1.6] (+29 -29), 
        gxdevice.h [1.9] (+32 -32), gxdevcli.h [1.11] (+114 -114), 
        gxdevbuf.h [1.3] (+11 -11), gxdcolor.h [1.6] (+14 -14), 
        gxdcconv.h [1.3] (+9 -9), gxctable.h [1.3] (+5 -5), gxcspace.h [1.6] (+23 -23), 
        gxcpath.h [1.3] (+9 -9), gxcpath.c [1.3] (+4 -4), gxcoord.h [1.3] (+4 -4), 
        gxcomp.h [1.4] (+7 -8), gxcolor2.h [1.3] (+6 -6), gxcmap.h [1.11] (+16 -16), 
        gxclread.c [1.3] (+12 -12), gxclrast.c [1.14] (+47 -47), 
        gxclpath.h [1.6] (+13 -13), gxclpath.c [1.4] (+5 -5), gxclpage.h [1.3] (+5 -5), 
        gxclmem.h [1.3] (+3 -3), gxclmem.c [1.3] (+3 -3), gxclist.h [1.4] (+11 -11), 
        gxclist.c [1.4] (+2 -2), gxclipm.c [1.4] (+2 -2), gxclip2.h [1.3] (+6 -6), 
        gxclip.h [1.3] (+15 -15), gxclip.c [1.4] (+6 -5), gxclio.h [1.3] (+15 -17), 
        gxclimag.c [1.7] (+25 -28), gxcldev.h [1.6] (+56 -59), gxcie.h [1.3] (+13 -13), 
        gxcid.h [1.3] (+9 -5), gxcht.c [1.17] (+5 -5), gxchrout.h [1.3] (+2 -2), 
        gxchar.h [1.3] (+16 -16), gxchar.c [1.3] (+44 -23), gxcdevn.h [1.5] (+5 -5), 
        gxccman.c [1.3] (+7 -7), gxccache.c [1.4] (+24 -19), gxbcache.h [1.3] (+8 -8), 
        gxarith.h [1.3] (+5 -5), gxalloc.h [1.3] (+19 -17), gswin386.rc [1.2] (+2 -2), 
        gswin32.rc [1.2] (+2 -2), gswin16.icx [1.1] (+34 -0), gswin.rc [1.3] (+3 -3), 
        gswin.icx [1.1] (+787 -0), gsutil.h [1.3] (+9 -9), gsutil.c [1.4] (+24 -13), 
        gsuid.h [1.3] (+5 -3), gstypes.h [1.3] (+10 -1), gstype42.c [1.5] (+51 -25), 
        gstype2.c [1.3] (+5 -8), gstype1.h [1.3] (+9 -9), gstrap.h [1.3] (+2 -2), 
        gstrap.c [1.3] (+2 -2), gstrans.h [1.3] (+25 -25), gstrans.c [1.3] (+11 -11), 
        gstparam.h [1.3] (+2 -2), gstext.h [1.3] (+53 -53), gstext.c [1.3] (+33 -4), 
        gsstype.h [1.3] (+8 -8), gsstruct.h [1.3] (+23 -10), gsstate.h [1.4] (+24 -26), 
        gsstate.c [1.7] (+8 -8), gsshade.h [1.3] (+34 -34), gsshade.c [1.3] (+8 -18), 
        gsropt.h [1.3] (+2 -2), gsropc.h [1.3] (+4 -4), gsrop.h [1.3] (+9 -9), 
        gsrefct.h [1.3] (+7 -7), gsrect.h [1.3] (+3 -3), gsptype2.h [1.3] (+2 -3), 
        gsptype1.h [1.3] (+31 -31), gsptype1.c [1.5] (+6 -6), gspcolor.h [1.3] (+7 -7), 
        gspath2.h [1.3] (+6 -6), gspath1.c [1.3] (+2 -2), gspath.h [1.3] (+32 -33), 
        gspath.c [1.3] (+3 -3), gsparamx.h [1.3] (+11 -11), gsparams.h [1.3] (+5 -5), 
        gsparams.c [1.3] (+11 -11), gsparam2.c [1.3] (+12 -6), gsparam.h [1.3] (+66 -66), 
        gspaint.h [1.3] (+7 -7), gsnotify.h [1.3] (+12 -12), gsnotify.c [1.3] (+2 -2), 
        gsnogc.c [1.3] (+2 -2), gsmemret.h [1.3] (+11 -11), gsmemraw.h [1.3] (+10 -10), 
        gsmemory.h [1.3] (+32 -32), gsmemlok.h [1.3] (+7 -7), gsmdebug.h [1.3] (+2 -2), 
        gsmatrix.h [1.3] (+20 -19), gsmatrix.c [1.3] (+9 -9), gsmalloc.h [1.3] (+7 -7), 
        gsmalloc.c [1.4] (+2 -12), gsline.h [1.3] (+31 -31), gslib.h [1.3] (+5 -5), 
        gslib.c [1.6] (+15 -16), gsiparm4.h [1.3] (+2 -2), gsiparm3.h [1.3] (+3 -3), 
        gsiparm2.h [1.3] (+2 -2), gsiparam.h [1.4] (+21 -20), gsipar3x.h [1.3] (+2 -3), 
        gsiodisk.c [1.1] (+886 -0), gsiodevs.c [1.3] (+2 -2), gsimpath.c [1.3] (+4 -4), 
        gsimage.h [1.3] (+20 -21), gsimage.c [1.5] (+2 -2), gsicc.h [1.3] (+4 -4), 
        gshtx.h [1.6] (+6 -6), gshtscr.c [1.4] (+3 -3), gsht1.h [1.3] (+6 -6), 
        gsht1.c [1.7] (+10 -11), gsht.h [1.3] (+10 -11), gsht.c [1.10] (+2 -2), 
        gshsb.h [1.3] (+3 -3), gshsb.c [1.3] (+3 -3), gsgc.h [1.3] (+2 -2), 
        gsfuncv.h [1.3] (+6 -6), gsfunc4.h [1.3] (+6 -6), gsfunc4.c [1.3] (+67 -3), 
        gsfunc3.h [1.3] (+16 -16), gsfunc3.c [1.3] (+195 -4), gsfunc0.h [1.3] (+6 -6), 
        gsfunc0.c [1.3] (+36 -3), gsfunc.h [1.3] (+40 -14), gsfunc.c [1.3] (+98 -2), 
        gsfont0c.c [1.1] (+130 -0), gsfont.h [1.3] (+27 -23), gsfont.c [1.3] (+41 -27), 
        gsfname.h [1.3] (+7 -7), gsflip.h [1.3] (+4 -4), gsflip.c [1.3] (+3 -3), 
        gsfcmap1.c [1.1] (+670 -0), gsfcmap.h [1.3] (+20 -7), gsfcmap.c [1.3] (+268 -502), 
        gsfcid2.c [1.1] (+325 -0), gsfcid.c [1.3] (+8 -1), gsexit.h [1.3] (+18 -6), 
        gserver.c [1.3] (+14 -14), gserror.h [1.3] (+2 -2), gsdsrc.h [1.3] (+3 -3), 
        gsdps.h [1.3] (+5 -5), gsdps.c [1.3] (+2 -2), gsdparam.c [1.5] (+9 -10), 
        gsdfilt.h [1.3] (+1 -8), gsdevice.h [1.3] (+34 -34), gsdcolor.h [1.6] (+5 -5), 
        gscssub.h [1.3] (+8 -8), gscspace.h [1.10] (+27 -20), gscsepr.h [1.6] (+11 -11), 
        gscsepr.c [1.13] (+10 -10), gscrypt1.h [1.3] (+5 -5), gscrdp.h [1.3] (+13 -13), 
        gscrd.h [1.3] (+30 -30), gscpixel.h [1.3] (+2 -2), gscoord.h [1.3] (+19 -12), 
        gscoord.c [1.3] (+3 -3), gscompt.h [1.3] (+2 -2), gscolor3.h [1.3] (+4 -4), 
        gscolor2.h [1.4] (+7 -7), gscolor2.c [1.6] (+2 -2), gscolor1.h [1.4] (+18 -12), 
        gscolor1.c [1.7] (+3 -3), gscolor.h [1.4] (+9 -7), gscolor.c [1.6] (+3 -4), 
        gsclipsr.h [1.3] (+3 -3), gscindex.h [1.3] (+20 -20), gsciemap.c [1.3] (+3 -3), 
        gscie.h [1.3] (+67 -46), gscie.c [1.3] (+110 -78), gschar0.c [1.3] (+35 -4), 
        gschar.h [1.3] (+31 -31), gschar.c [1.3] (+3 -3), gscencs.h [1.1] (+70 -0), 
        gscencs.c [1.1] (+181 -0), gscedata.h [1.1] (+31 -0), gscedata.c [1.1] (+3633 -0), 
        gscdevn.h [1.7] (+12 -12), gscdevn.c [1.14] (+6 -6), gscdefs.h [1.4] (+3 -7), 
        gscdef.c [1.3] (+3 -3), gsccode.h [1.3] (+56 -42), gsbittab.c [1.3] (+2 -2), 
        gsbitops.h [1.5] (+21 -21), gsargs.h [1.3] (+9 -9), gsargs.c [1.3] (+2 -2), 
        gsalphac.h [1.3] (+4 -4), gsalphac.c [1.6] (+5 -5), gsalpha.h [1.3] (+3 -3), 
        gsalloc.h [1.3] (+10 -10), gsalloc.c [1.3] (+17 -24), gs16spl.rc [1.3] (+2 -2), 
        gs.mak [1.7] (+8 -1), gs.c [1.3] (+11 -3), gpsync.h [1.3] (+13 -13), 
        gpmisc.h [1.3] (+3 -3), gpgetenv.h [1.3] (+2 -2), gpcheck.h [1.3] (+3 -3), 
        gp_vms.c [1.3] (+2 -2), gp_unix.c [1.3] (+4 -3), gp_unifs.c [1.3] (+2 -2), 
        gp_strdl.c [1.3] (+2 -2), gp_os9.c [1.3] (+4 -3), gp_os2.c [1.3] (+4 -3), 
        gp_mswin.c [1.3] (+4 -3), gp_msio.c [1.3] (+2 -2), gp_macio.c [1.3] (+10 -10), 
        gp_mac.c [1.3] (+5 -5), gp_iwatc.c [1.3] (+5 -4), gp_getnv.c [1.3] (+2 -2), 
        gp_dvx.c [1.3] (+3 -2), gp.h [1.3] (+29 -29), geninit.c [1.3] (+6 -6), 
        gendev.c [1.3] (+2 -2), genconf.c [1.4] (+15 -15), genarch.c [1.3] (+6 -4), 
        gdevxxf.c [1.3] (+2 -2), gdevxini.c [1.6] (+3 -3), gdevxcmp.c [1.4] (+4 -1), 
        gdevxcf.c [1.8] (+4 -11), gdevxalt.c [1.4] (+4 -4), gdevx.h [1.3] (+10 -10), 
        gdevx.c [1.4] (+12 -16), gdevwprn.c [1.3] (+4 -4), gdevwddb.c [1.3] (+4 -4), 
        gdevvec.h [1.3] (+74 -74), gdevupd.c [1.4] (+42 -42), gdevtifs.h [1.3] (+12 -12), 
        gdevtfax.h [1.3] (+3 -3), gdevtfax.c [1.3] (+3 -3), gdevsvga.h [1.3] (+8 -8), 
        gdevsvga.c [1.3] (+13 -13), gdevstc.h [1.3] (+2 -2), gdevstc.c [1.4] (+7 -7), 
        gdevsco.c [1.3] (+5 -5), gdevs3ga.c [1.3] (+3 -3), gdevpxut.h [1.3] (+23 -23), 
        gdevpx.c [1.3] (+3 -5), gdevpsu.h [1.3] (+13 -13), gdevpsu.c [1.3] (+2 -2), 
        gdevpsim.c [1.3] (+7 -8), gdevpsfx.c [1.3] (+3 -2), gdevpsft.c [1.3] (+257 -122), 
        gdevpsfm.c [1.3] (+68 -42), gdevpsf2.c [1.3] (+94 -39), 
        gdevpsf1.c [1.3] (+15 -13), gdevpsf.h [1.3] (+88 -63), gdevpsdu.c [1.3] (+3 -5), 
        gdevpsds.h [1.3] (+32 -4), gdevpsds.c [1.3] (+232 -1), gdevpsdp.c [1.3] (+68 -68), 
        gdevpsdi.c [1.4] (+45 -16), gdevpsdf.h [1.3] (+57 -48), 
        gdevps.c [1.3] (+128 -66), gdevprna.h [1.3] (+5 -5), gdevprna.c [1.3] (+10 -10), 
        gdevprn.h [1.4] (+49 -49), gdevprn.c [1.5] (+4 -4), gdevppla.h [1.3] (+14 -14), 
        gdevpm.c [1.3] (+1 -2), gdevplnx.h [1.3] (+4 -5), gdevpjet.c [1.3] (+3 -3), 
        gdevpdtx.h [1.1] (+95 -0), gdevpdtw.h [1.1] (+68 -0), gdevpdtw.c [1.1] (+452 -0), 
        gdevpdtt.h [1.1] (+203 -0), gdevpdtt.c [1.1] (+876 -0), 
        gdevpdts.h [1.1] (+142 -0), gdevpdts.c [1.1] (+558 -0), 
        gdevpdti.h [1.1] (+81 -0), gdevpdti.c [1.1] (+360 -0), gdevpdtf.h [1.1] (+364 -0), 
        gdevpdtf.c [1.1] (+751 -0), gdevpdte.c [1.1] (+568 -0), 
        gdevpdtd.h [1.1] (+132 -0), gdevpdtd.c [1.1] (+586 -0), 
        gdevpdtc.c [1.1] (+519 -0), gdevpdtb.h [1.1] (+129 -0), 
        gdevpdtb.c [1.1] (+557 -0), gdevpdt.h [1.1] (+99 -0), gdevpdt.c [1.1] (+57 -0), 
        gdevpdfx.h [1.3] (+206 -167), gdevpdfw.c [1.3] (+30 -39), 
        gdevpdfv.c [1.3] (+176 -86), gdevpdfu.c [1.3] (+168 -103), 
        gdevpdft.h [1.1] (+106 -0), gdevpdft.c [1.3] (+192 -48), 
        gdevpdfs.c [1.3] (+202 -119), gdevpdfr.c [1.3] (+58 -5), 
        gdevpdfp.c [1.3] (+83 -78), gdevpdfo.h [1.3] (+74 -61), 
        gdevpdfo.c [1.3] (+107 -20), gdevpdfm.c [1.3] (+166 -48), 
        gdevpdfk.c [1.2] (+111 -67), gdevpdfj.c [1.3] (+204 -33), 
        gdevpdfi.c [1.3] (+113 -52), gdevpdfg.h [1.3] (+101 -62), 
        gdevpdfg.c [1.6] (+40 -45), gdevpdff.h [1.3] (+53 -63), 
        gdevpdff.c [1.3] (+90 -58), gdevpdfe.c [1.3] (+11 -12), 
        gdevpdfd.c [1.3] (+37 -30), gdevpdfc.h [1.2] (+2 -2), gdevpdfc.c [1.4] (+85 -24), 
        gdevpdfb.c [1.3] (+35 -47), gdevpdf.c [1.7] (+99 -110), 
        gdevpcx.c [1.3] (+3 -3), gdevpcl.h [1.3] (+6 -6), gdevpcfb.h [1.3] (+7 -7), 
        gdevpcfb.c [1.3] (+8 -8), gdevpccm.h [1.3] (+2 -2), gdevpbm.c [1.8] (+60 -5), 
        gdevp14.c [1.5] (+12 -2), gdevokii.c [1.3] (+2 -2), gdevmsxf.c [1.3] (+6 -6), 
        gdevmswn.h [1.3] (+8 -8), gdevmswn.c [1.3] (+2 -2), gdevmrun.h [1.3] (+2 -2), 
        gdevmrop.h [1.3] (+16 -16), gdevmpla.h [1.3] (+3 -3), gdevmgr.c [1.3] (+3 -3), 
        gdevmem.h [1.5] (+2 -2), gdevmeds.h [1.3] (+3 -3), gdevmacxf.c [1.3] (+3 -3), 
        gdevm8.c [1.3] (+7 -7), gdevijs.c [1.2] (+3 -3), gdevifno.c [1.2] (+8 -8), 
        gdevhl7x.c [1.3] (+2 -2), gdevherc.c [1.3] (+3 -3), gdevfax.h [1.3] (+10 -10), 
        gdevepsn.c [1.3] (+2 -2), gdevepsc.c [1.4] (+2 -2), gdevdsp.c [1.9] (+49 -3), 
        gdevdrop.c [1.4] (+2 -2), gdevdm24.c [1.3] (+3 -3), gdevdljm.h [1.2] (+5 -5), 
        gdevdljm.c [1.2] (+4 -1), gdevdjtc.c [1.3] (+3 -3), gdevdjet.c [1.2] (+8 -4), 
        gdevdgbr.c [1.6] (+10 -10), gdevdevn.c [1.10] (+12 -11), 
        gdevdcrd.h [1.3] (+3 -3), gdevdbit.c [1.4] (+2 -2), gdevcmap.h [1.3] (+3 -3), 
        gdevcgml.h [1.3] (+97 -71), gdevcgml.c [1.3] (+15 -15), 
        gdevcdj.c [1.4] (+20 -20), gdevbmpa.c [1.3] (+5 -5), gdevbmp.h [1.3] (+3 -3), 
        gdevbjcl.h [1.3] (+33 -35), gdevbj10.c [1.3] (+44 -4), gdevbbox.h [1.3] (+12 -12), 
        gdevalph.c [1.3] (+2 -2), gdev8bcm.h [1.3] (+6 -6), gdev8510.c [1.3] (+3 -3), 
        gdebug.h [1.3] (+8 -8), files.h [1.3] (+28 -28), fapiufst.c [1.3] (+14 -14), 
        estack.h [1.3] (+2 -2), errors.h [1.3] (+7 -1), echogs.c [1.3] (+5 -5), 
        dxmain.c [1.3] (+105 -47), dwuninst.rc [1.3] (+2 -2), dwtrace.h [1.2] (+6 -3), 
        dwtext.c [1.3] (+26 -53), dwmainc.c [1.3] (+9 -1), dwinst.h [1.3] (+2 -1), 
        dwinst.cpp [1.3] (+10 -1), dwimg.h [1.4] (+2 -1), dwimg.c [1.3] (+10 -6), 
        dvx-gcc.mak [1.3] (+6 -10), dscparse.h [1.3] (+23 -35), 
        dscparse.c [1.3] (+42 -42), dpmain.c [1.3] (+10 -6), devs.mak [1.12] (+215 -64), 
        contrib.mak [1.3] (+5 -3), ccfont.h [1.3] (+16 -18), btoken.h [1.3] (+5 -5), 
        bfont.h [1.3] (+26 -27), bench.c [1.3] (+2 -3), bcwin32.mak [1.3] (+49 -8), 
        bcc32.cfg [1.2] (+1 -1), all-arch.mak [1.3] (+6 -7), Makefile.in [1.1] (+420 -0):
        backward merge of 7.22 to the devicen branch.
        

Sun Jul 14 07:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcmap.c [1.22] (+8 -8):
        Limit the last commit to only affecting the /All separation.  A /Blue
        separation is set to its component value without inversion.  See the
        MagicEye.pdf test file for an example.
        

Sat Jul 13 07:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcmap.c [1.21] (+13 -4):
        Invert the sense of Separation component values if the the device is
        using an additive color model.  Separation colors are always subtractive.
        

Fri Jul 12 23:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gximono.c [1.5] (+29 -2), gxht.c [1.7] (+75 -42), gxdcolor.h [1.5] (+0 -2):
        Back out the last commit.  The theory is good and I still have hope for
        the concept.  However it currently creates 532 errors in the regression
        testing.  Thus it is being backed out (for now).
        

Fri Jul 12 07:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gximono.c [1.4] (+3 -30), gxht.c [1.6] (+43 -76), gxdcolor.h [1.4] (+3 -1):
        Split the half tone cache initialization into two pieces.  The halftone
        cache is now initialized just prior to being used in the various
        halftone render routines.  This was doe to prevent a problem with cache
        conflicts.  If the half tone cache is not large enough for a separate
        tile for each level then there could be a problem if two different
        device colors used the same cache entry but with different level values.
        

Tue Jul  9 02:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxicolor.c [1.4] (+13 -25):
        This commit is to remove the change from yesterday.  That commit has
        some serious flaws.  It fixed a small problem by creating some larger ones.
        
        There is still a flaw in the logic of image_render_color.  It is creating
        a pair of device colors.  Unfortunately, the process of creating the second
        one can change a half tone cache used by the first.  This affects the final
        image when the first color is then used to image pixels.
        

Mon Jul  8 20:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gdevxini.c [1.5] (+1 -5):
        (Jan) fixes infinite recursion in x11alpha device.
        

Mon Jul  8 19:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gdevmem.c [1.7] (+3 -1):
        memory devices are now processed thought the "expert system".
        
        * unix-gcc.mak [1.8] (+2 -2):
        adds in the bbox device for testing... not sure why it was ever taken
        out.
        

Mon Jul  8 06:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxicolor.c [1.3] (+27 -15):
        image_render_color creates a pair of device colors and then compares them.
        Unfortunately the process of creating the second device color can alter
        the halftone cache used by the first.  This can occur when the halftone
        cache is small (4096 bytes) and there is not enough room for a cache
        entry for each level.  The fix is to reload the cache by remapping the
        first color before it is used to render a pixel.
        
        Note:  This problem also affects non DeviceN code but is less visible
        since a large cache (100000 bytes) is used for many situations.
        

Wed Jul  3 07:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxht.c [1.5] (+2 -2):
        Change the return code from gx_check_tile_size to indicate that there is
        no imager state half tone cache.
        

Thu Jun 27 22:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxclbits.c [1.4] (+2 -2):
        We were off by one in the map data written into the clist.
        

Tue Jun 25 18:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * lib.mak [1.20] (+6 -4), gxoprect.h [1.2] (+1 -1), gxoprect.c [1.2] (+2 -2), 
        gxcomp.h [1.3] (+30 -2), gxcmap.c [1.20] (+5 -2), gxclutil.c [1.4] (+5 -4), 
        gxclrast.c [1.13] (+91 -12), gxclpath.h [1.5] (+12 -2), 
        gxclimag.c [1.6] (+35 -6), gsstate.c [1.6] (+9 -4), gsovrc.c [1.3] (+40 -18), 
        gscolor.c [1.5] (+3 -1), gscdefs.h [1.3] (+5 -1), gsalphac.c [1.5] (+8 -7), 
        gs.mak [1.6] (+3 -1), genconf.c [1.3] (+17 -2), gdevx.c [1.3] (+5 -1), 
        gdevdgbr.c [1.5] (+6 -2), gconf.c [1.3] (+25 -1):
        Modified Files:
        
          lib/gs_ll3.ps
            Added code to create the setoverprintmode and currentoverprintmode
            operators.
        
          src/gconf.c
            Add the gx_compositor_list array, to list the set of compositor
            types compiled into the system. Also provided the gs_find_compositor
            procedure, to locate a compositor method vector based on its
            type identifier.
        
          src/gdevdgbr.c
            Fixed several bugs in gx_get_bits_copy, for cases in which the
            transfer of output data involves a skew (bit shift) but no color
            conversion (a case that is apparently used only by the overprint
            facility). This case uses the copy_mono method for the 1-bit
            memory device. The invocation of this method had two problems:
        
              1. The temporary device created for the transfer had uninitialized
                 width and height fields. Because copy_mono will invoke the
                 fit_copy macro, these fields must be set to reasonable values.
        
              2. The width passed to copy_mono must be bit-width, as the
                 method for a depth == 1 device is used. Previously, the
                 pixel width was used.
        
          src/gdevx.c
            Fixed a problem in x_copy_image. If the image passed to this routine
            contains more than one pixel, the colors_and and colors_or fields were
            not updated. Because these fields are only used for optimization, and
            properly updating them in this situation is potentially expensive,
            they are now just set to safe values (colors_and = 0;
            colors_or = (x_pixel)(-1)).
        
          src/genconf.c
            Added to "-comp" option to support construction of a list of
            compositors compiled into the system.
        
          src/gs.mak
            Added the SETCOMP and ADDCOMP macros, to provide access to the
            -comp option of genconf.c.
        
          src/gsalphac.c
            Exported the gs_composite_alpha_type structure, and added a compositor
            type identifier to this structure. Also modified the de-serialization
            (read) method for this size so that the data string provided be large
            enough but not necessarily exactly the right size, and to return the
            number of bytes actually read (or an error code).
        
          src/gscdefs.h
            Added a prototye for gs_find_compositor (see gconf.c above).
        
          src/gscolor.c
            Modified gx_set_device_color_1 to turn off overprint (and overprint
            mode).
        
          src/gsovc.c:
            1. Modified the de-serialization method (read) to return the number of
               bytes actually read (or an error code).
            2. Renamed gs_overprint_type to be gs_composite_overprint_type, so as
               to conform to the new convention for compositor names.
            3. For the overprint devices, set the get_xfont_procs, get_xfont_device,
               and text_begin methods to use the corresponding default methods,
               rather than the forwarding methods. Device-supported fonts are
               incompatible with overprint, as the required low-level calls may
               not be made. While the text_begin method is not itself a rendering
               method, it does record an imaging device, and this device must
               be the overprint device rather than the target device. If the
               forwarding text_begin method is used, the recorded imaging device
               would be the target device.
            4. Modified update_overprint_params to avoid use of the overprint
               devices for cases in which overprint is true, but all color
               components are to be drawn. Though the output is not changed, use
               of the non-overprint device improves performance in this case.
            5. Modified the default overprint compositor creation method
               (c_overprint_create_default_compositor) to ignore overprint
               requests if the current color model has only a single component.
               Overprinting can never have an effect in this situation, and
               avoiding these cases also avoids difficulties with mask caching
               devices (such as are used with the character cache).
        
          src/gsstate.c
            Modified gs_state_update_overprint to update the color model mapping
            procedures and unset the device color. Though updating the overprint
            status will never change the color model, the overprint devices
            require a special set of forwarding color model mapping procedures.
        
          src/gxclimag.c
            Implemented the clist_create_compositor procedure (the create_compositor
            method for the command list device).
        
          src/gxclpath.c
            Replaced the cmd_opv_put_params code (0xdf) with cmd_opv_extend. This
            code indicates that the subsequent byte should be read and interpreted
            as a command from the gx_cmd_ext_op enumeration. Currently, this
            enumeration has two elements, cmd_opv_ext_put_params (the put_params
            method) and cmd_opv_ext_create_compositor (the create_compositor
            method).
        
          src/gxclrast.c
            1. Made the code parsing changes required by the new cmp_opv_extend
               code (see gxclpath.h above).
            2. Added the read_create_compositor procedure, to interpret the
               cmd_opv_ext_create_compositor command.
        
          src/gxclutil.c
            Modified cmd_put_params for the new cmp_opv_extend/cmd_opv_ext_put_params
            coding techinque.
        
          src/gxcmap.c
            Modified gx_set_cmap_procs to handle devices that have no
            get_color_mapping_procs method (such as mask caching devices).
        
          src/gxcomp.h
            Added the comp_id field to the gs_composite_type_t structure. Also
            added macros for the alpha and overprint compositors (the only two
            compositors in the current system).
        
          src/gxoprect.c
            Fixed typo in pack_scanline_lt8: the source data pointer was not
            being advanced.
        
          src/gxoprect.h
            Fixed typo in RCS identifier comment.
        
          src/lib.mak
            1. Updated several dependency lists.
            2. Added code to generate the list of compiled compositors.
        

Sat Jun 22 00:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcmap.c [1.19] (+2 -3):
        Fix an infinite loop in the separation logic.  Bug created in the last
        commit.  I was too carried away with clean up.
        

Fri Jun 21 22:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcmap.c [1.18] (+9 -5), gscsepr.c [1.12] (+5 -3):
        We still were not correctly setting the separation use_alt_cspace flag for
        the None and All cases.  We also were not correctly setting colorant values
        for the All case.
        

Fri Jun 21 19:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gscsepr.c [1.11] (+22 -1), gscdevn.c [1.13] (+3 -3):
        More clean up on separation color spaces.  Report the alternate color space
        as the concrete space if we are using the alternate space.
        

Fri Jun 21 07:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gscsepr.c [1.10] (+32 -5), gscdevn.c [1.12] (+7 -3):
        Corrected some problems in the Separation color space.  The color cache
        assumed that there was only one component.  We were not correctly using
        the alternate color space in the remap_concrete routine.
        

Thu Jun 20 06:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxdevndi.c [1.12] (+2 -2), gxcmap.c [1.17] (+5 -2):
        One more revision about when to use render_gray versus render_color math.
        

Wed Jun 19 05:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * lib.mak [1.19] (+2 -2), gxcmap.h [1.10] (+8 -1), gxcmap.c [1.16] (+4 -4), 
        gdevnfwd.c [1.8] (+83 -7):
        Changes the forwarding device so that there are forwarding procedures for
        the color space to color model mapping procs.  Corrects a problem found
        by henry with multi4.ps and the spotcmyk device.
        

Tue Jun 18 03:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gzht.h [1.5] (+19 -1), gxistate.h [1.10] (+8 -10), gximono.c [1.3] (+4 -1), 
        gxht.c [1.4] (+14 -3), gxclrast.c [1.12] (+3 -34), gxcht.c [1.16] (+4 -11), 
        gsstate.c [1.5] (+1 -11), gsistate.c [1.7] (+7 -12), gshtscr.c [1.3] (+2 -2), 
        gsht1.c [1.6] (+3 -29), gsht.c [1.9] (+84 -43):
        Removes the half tone cache from the imager state structure.  Changes the
        way that half tones are copied.  Changes where half tone caches are
        allocated.  Previously there were problems with half tone elements being
        released multiple times.  This created havoc with memory management.
        

Tue Jun 11 05:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxdevndi.c [1.11] (+45 -36):
        One more revision of the "joint gray and color math".
        The last version had a problem in that the gray calculation might miss
        the fact that the calculation had produced a solid color (due to rounding
        in the calculation).  Then it would access an array out of bounds.
        

Tue Jun  4 05:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * lib.mak [1.18] (+9 -3), gxoprect.h [1.1] (+76 -0), gxoprect.c [1.1] (+621 -0), 
        gxdcconv.c [1.3] (+3 -3), gsovrc.h [1.2] (+1 -1), gsovrc.c [1.2] (+117 -9), 
        gscdevn.c [1.11] (+2 -1), gsbitops.h [1.4] (+4 -1), gsbitops.c [1.3] (+135 -76), 
        gdevdflt.c [1.10] (+153 -5):
        code set from ORIMP to enable overprint and overprint mode.
        
        New Files:
        
          src/gxoprect.c
          src/gxoprect.h
            These files provide the low-level code for the fill_rectangle method
            of the overprint compositor device. There are three such procedures,
            which are used in different circumstances:
        
              gx_overprint_generic_fill_rectangle is always applicable, but is
                very slow as it must decode and re-encode the color for each pixel.
        
              gx_overprint_sep_fill_rectangle_1 is applicable to separable and
                linear color encodings whose depth is a divisor of
                8 * sizeof(mono_fill_chunk) = 32. This is always the
                case if depth &lt;= 8. The code used in this case is, once past a
                large amount of setup, about as fast as can be achieved while
                using get_bits_rectangle.
        
              gx_overprint_sep_fill_rectangle_2 is applicable to all other
                separable and linear color encodings (all of which will have
                depth % 8 = 0). This uses a byte-wise method which is in principle
                slower than what could be achieved with a chunk-wise method, but
                is much easier to code in the general case (i.e.: for multiple
                possible depths). It will likely be faster in practice.
        
        Modified Files:
        
          lib/gs_init.ps
          lib/gs_setpd.ps
            Modified erasepage (and several other bits of code that erase the
            page) to turn off overprint before filling the page. This is necessary
            to preserve the meaning of erasepage.
        
          src/gsbitops.c
          src/gsbitops.h
            Added the bits_fill_rectangle_masked procedure, a generalization of
            the bits_fill_rectangle procedure that allows for a component mask.
            Also generalized bits_fill_rectangle (and bits_fill_rectangle_masked)
            to support depth &gt; 8, so long as
            (8 * sizeof(mono_fill_chunk)) % depth = 0.
        
            Currently, bits_fill_rectangle_masked is used only by the overprint
            compositor device, but it can also be used by devices that can
            directly implement overprint (such as the memory device).
        
          src/gscdevn.c
            Modified check_DeviceN_component_names to initialize the
            component_map.sep_type field of the imager state to SEP_OTHER.
            Previously this field was not set for DeviceN color spaces, which
            confused some of the overprint code.
        
          src/gsovrc.c
            Implemented the real overprint_fill_rectangle procedures. As part of
            this work, added the local procedure swap_color_index, that swaps
            bytes in a color index as required to work with byte-oriented bitmaps
            on little-endian devices (only if depth &gt; 8).
        
            Also fixed a parity bug in the creation of the retain_mask.
        
          src/gsovrc.h
            Fixed typo (/* $Id$Id:$ */).
        
          src/gxdcconv.c
            Modified color_rgb_to_cmyk to work if the imager state pointer
            operand is a null pointer. Note that in this case full undercolor
            removal and black generation will be performed, which is consistent
            with other such conversions in the code that do not have access to
            the imager state, but differs from the mapping used if the imager
            state is available but has no blackgeneration or undercolor removal
            map.
        
          src/lib.mak
            Added the gxoprect.$(OBJ) target and included this as a dependency
            in LIB4s. Also updated some other dependency lists.
        
        
        Additional file modified (not for overprint but needed for release):
        
          src/gdevdflt.c
            Added code to select a reasonable default value for the decode_color
            method, as this method is used extensively by the generic overprint
            implementation routines. The modifications are just a first pass to
            allow us to test the overprint code; they are not intended as a
            final solution.
        

Mon Jun  3 06:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxdither.h [1.5] (+5 -2), gxdevndi.c [1.10] (+10 -4), 
        gxcmap.c [1.15] (+7 -7):
        A revised version of the "match the reference version" math for half tone
        level calculations.  This was done to match the regression reference math.
        

Fri May 31 22:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxdevcli.h [1.10] (+2 -2):
        Corrected gx_device_has_color() macro.  It was reporting gray scale devices
        as color devices.
        

Fri May 31 21:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxdevndi.c [1.9] (+8 -11):
        Add a kludge to emulate the different calculations used for gray versus
        color halftone levels.  This is done to minimize regressions during
        regression testing.
        
        * gdevpbm.c [1.7] (+9 -5):
        Correct the pgmraw device.  The encode color routine was using three
        components instead of one for encoding the color.
        

Thu May 30 03:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gxcmap.c [1.14] (+11 -4):
        fix from ORIMP so that gx_default_b_w_map_rgb_color() can be used as
        an encode color procedure with devices of 1 color component.
        

Wed May 29 07:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * lib.mak [1.17] (+3 -3):
        Changed a typo (gsoverc.h vs gsovrc_h).  This prevented building under MSVC.
        

Wed May 29 06:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gsovrc.h [1.1] (+303 -0), gsovrc.c [1.1] (+1041 -0):
        These should have been added in the last checkin.
        
        * zpcolor.c [1.4] (+3 -2), zmisc.c [1.3] (+14 -2), zgstate.c [1.6] (+6 -7), 
        zfdcte.c [1.3] (+2 -2), lib.mak [1.16] (+18 -7), iutil.c [1.5] (+13 -4), 
        gxpcolor.h [1.3] (+7 -1), gxpcmap.c [1.4] (+6 -2), gxipixel.c [1.3] (+3 -6), 
        gxht.c [1.3] (+43 -2), gxdcolor.h [1.3] (+30 -1), gxdcolor.c [1.8] (+39 -4), 
        gxcspace.h [1.5] (+19 -13), gxclrast.c [1.11] (+13 -7), 
        gxcht.c [1.15] (+31 -3), gxccache.c [1.3] (+6 -1), gsstate.h [1.3] (+14 -1), 
        gsstate.c [1.4] (+99 -7), gsptype2.c [1.3] (+3 -2), gsptype1.c [1.4] (+26 -5), 
        gspcolor.c [1.4] (+15 -2), gslib.c [1.5] (+9 -1), gsimage.c [1.4] (+3 -2), 
        gsicc.c [1.3] (+2 -55), gsdevice.c [1.3] (+8 -2), gscspace.h [1.9] (+1 -9), 
        gscspace.c [1.4] (+203 -29), gscsepr.h [1.5] (+1 -7), gscsepr.c [1.9] (+4 -51), 
        gscscie.c [1.4] (+9 -5), gscpixel.c [1.6] (+16 -10), gscolor2.c [1.5] (+16 -33), 
        gscdevn.c [1.10] (+3 -21), gdevp14.c [1.4] (+25 -2):
        checkin for three separate code set releases from ORIMP, release
        notes follow in reverse chronological order.
        
        Notes:
        
         Modified files:
        
          gsstate.c
            Added code to ignore an error return from the create_compositor call
            in gs_state_update_overprint if the call was made to turn off
            overprint. This avoids errors for device configurations that do not
            (yet) support the create_compositor call, when running files that do
            not require overprint support.
        
          gsovrc.h
            Fixed a typo in a commment.
        
          gxclrast.c
            Fixed a re-entrancy problem in read_set_color_space that was introduced
            by the previous modification to this file.
        
          gsimage.c
            Added a comment concerning re-entrancy, and slightly modified another
            comment.
        
          gscspace.c
            Added some comments concerning re-entrancy.
        
        Notes:
        
        Modified Files:
        
          src/gsovrc.c
            Added full compositor device "plumbing". The overprint compositor
            now does all of the required device creation and setup work. The
            only piece still missing are implementations of the low-level
            rendering routines that actually implement overprint.
        
          src/gsptype1.c
          src/gsptype2.c
          src/gxcht.c
          src/gxdcolor.c
          src/gxdcolor.h
          src/gxht.c
          src/gxpcolor.h
            Added the method get_nonzero_comps to the gx_device_color_type_t
            structure (the gx_device_color methods). This method is used by
            the overprint code to determine which color component intensities
            have non-zero value, which must be known to implement overprint
            mode.
        
          src/gsovrc.h
          src/gscspace.c
            Changed the drawn_comps field of the gs_overprint_params_t
            structure from a byte array to a gx_color_index. This is a bit
            ugly, as the value is a bit map rather than an encoded color,
            but allows much simpler processing. (As in device colors, a
            gx_color_index is used because it is known to be large enough.
        
          src/lib.mak
            Updated dependency list for gsovrc.$(OBJ).
        
        Notes:
        
        New Files:
        
          src/gsovrc.c
            Implementation of the overprint compositor. For the moment, this is
            just a stub. This file will grow considerably in the next two releases.
        
        
          src/gsovrc.h
            Interface to the overprint compositor. This is in essentially final
            form, even though only a stub implementation of the compositor is
            available. This file also includes a lengthy comment describing when
            the compositor must be updated.
        
        
        Modified Files:
        
          lib/gs_ciecs2.ps
          lib/gs_ciecs3.ps
          lib/gs_cspace.ps
          lib/gs_devcs.ps
          lib/gs_devn.ps
          lib/gs_devpxl.ps
          lib/gs_icc.ps
          lib/gs_indxd.ps
          lib/gs_patrn.ps
          lib/gs_sepr.ps
            Incorporated an optimization of setcolorspace from the casper head.
            The optimization avoids setting the color space if it is the same as
            the current color space. gs_icc.ps also contains a fix for a bug
            in the handling of DataSources that are streams (rather than strings;
            Dan discovered and analyzed this bug).
        
            Note that this is a fairly complex optimization, and there were many
            problems with the head code that needed to be resolved. Among these
            were:
        
              1. An invocation of setcolorspace should always set the default
                 color for the operand color space, even if that color space is
                 identical to the current color space.
        
              2. If UseCIEColor is true, setcolorspace must be executed if
                 the operand color space involves device-specific color spaces.
                 This is because the Default{Gray,RGB,CMYK} instances of the
                 ColorSpace resource category may have changed.
        
              3. When UseCIEColor is changed from true to false in setpagedevcie,
                 the implicit initgraphics invocation must perform a setcolorspace
                 operation, even if the current color space is DeviceGray. This
                 is necessary to ensure that the un-substituted DeviceGray color
                 space is set as the current color space.
        
        
          lib/gs_init.ps
            In /showpage, replace the sequence "erasepage ... initgraphics" with
            "initgraphics 1 setcolor .fillpage 0 setcolor". This has the desired
            effect, and avoids two unnecessay invocations of setcolorspace.
        
        
          lib/gs_setpd.ps
            1. Modified the currentpagedevice pseudo-operator for cases in which
               the stored page device must be copied. Previously, the new copy
               was allocated in the current VM mode, which could cause
               invalidaccess errors if currentpagedevice was invoked while in
               global VM mode and composite objects stored in the page device
               dictionary were in local VM (this problem is present in the PS3
               FTS). The new code will allocate the copy in the save VM as the
               original dictionary.
        
            2. In setpagedevice, added code to set current color space to
               something other than DeviceGray if modification of the page device
               will set UseCIEColor to false. This is necessary for the
               setcolorspace optimization to function properly (see above).
        
            3. In the .postinstall pseudo-operator, replaced "erasepage initgraphics"
               with "initgraphics 1 setcolor .fillpage 0 setcolor". This avoids
               two unnecessary invocations of setcolorspace.
        
        
          src/gdevp14.c
            Added the pdf14_create_compositor method. This method will check if
            the compositor to be created is the overprint compositor. If so,
            the request to create the compositor will simply be ignored, as
            the gs_pdf14_device and its associated marking device must implement
            overprint directly.
        
        
          src/gscdevn.c
            1. Removed the equality check method.
        
            2. Added the set_overprint method for DeviceN color spaces.
        
        
          src/gscolor2.c
            1. Removed the equality check method.
        
            2. Added the set_overprint method for Indexed color spaces.
        
        
          src/gscpixel.c
            1. Removed the equality check method.
        
            2. Added the set_overprint method for DevicePixel color spaces.
        
        
          src/gscscie.c
            1. Removed the equality check method.
        
            2. Added the set_overprint method for CIEBased color spaces.
        
        
          src/gscsepr.c
            1. Removed the equality check method.
        
            2. Added the set_overprint method for Separation color spaces.
        
            3. Moved the gs_{set|current}overprint[mode] procedures to gsstate.c.
        
        
          src/gscsepr.h
            Moved prototypes for the gs_{set|current}overprint[mode] procedures
            to gsstate.h.
        
        
          src/gscspace.c
            1. Removed the color space equality check methods for the device-
               specific color spaces.
        
            2. Added the basic set_overprint procedures, to provide color-space
               specific setting of the overprint compositor.
        
            3. Modified the gs_cspace_{build|init}_Device{Gray|RGB|CMYK}
               procedures to use the same identifier for all instances of
               the parameterless color spaces (i.e.: all DeviceGray instances
               will have the same id, as will all DeviceRGB instances, but the
               id for any DeviceGray will differ from the id for a DeviceRGB
               instance). This enables an optimization in the gs_setcolorspace
               routine that had been lost in the previous code modification.
        
        
          src/gscspace.h
            Removed prototype for the gs_color_space_equal procedure.
        
        
          src/gsicc.c
            1. Removed the equality check method.
        
            2. Added the set_overprint method for ICCBased color spaces.
        
        
          src/gslib.c
            Modified test9 to explicitly reset the current color space; this
            is no longer done by gs_initgraphics.
        
        
          src/gspcolor.c
            Added set_overprint method for pattern color spaces, removed the
            equality check method.
        
        
          src/gsstate.c
            1. Added code to update the overprint compositor when the current
               color space, current device, overprint, or overprint mode
               settings change. Included in this change is code in gs_grestore_only
               that updates the overprint compositor as part of the grestore
               operation when this is required.
        
            2. Moved the gs_{set|current}overprint[mode] procedures to this file
               from gscsepr.c. This is more convenient for the new code, and
               gscsepr.c was never a particularly appropriate place for these
               routines.
        
            3. Modified gs_initgraphics to not reset the current color space or
               current color. For PostScript this must now be done in the
               PostScript code to properly handle color space substitution.
               Other clients that use this procedure (the XL interpreter is the
               only one (aside from gslib.c)) can easily reset these parameters
               as well.
        
        
          src/gsstate.h
            Moved prototypes for the gs_{set|current}overprint[mode] procedures
            here from gscsepr.h.
        
        
          src/gxccache.c
            Modified gx_image_cached_char to just return if the current color
            is a pure gx_no_color_index (transparent).
        
        
          src/gxcspace.h
            1. Removed the equality check method.
        
            2. Added the set_overprint method.
        
        
          src/gxipixel.c
            Modified the gx_image_enum_begin to allow the Decode array for
            imagemasks to have any two distinct numbers, rather than just 0 and
            1. This matches the behavior of all Adobe systems (though not the
            documentation), and avoids some spurious failures when running the
            FTS.
        
        
          src/gxpcmap.c
            Modified pattern_accum_copy_mono to just return if both the foreground
            and background colors are gx_no_color_index (transparent). If this is
            not done, the mask device's copy_mono procedure may generate an
            error when invoked (this is true for mem_mono_copy_mono).
        
        
          src/iutil.c
            Modified obj_eq to consider two 0-length arrays to be equal,
            irrespective of their type and their pointers (the latter aren't
            meaningful if the array length is 0). This matches the PostScript
            documentation and the behavior of Adobe systems. It also fixes
            some spurious failures in the FTS.
        
        
          src/lib.mak
            Added an entry for gsovrc (the overprint compositor), and updated
            various dependency lists.
        
        
          src/zfdcte.c
            Modified the DCTEncode procedure (zDCTE) to allocate the
            jpeg_compress_data and subsidiary memory structures in current VM.
            Previously these structures were allocated in gs_default_memory,
            which does not support garbage collection. Since the structures
            were subject to garbage collection and relocation, chaos could
            and, in the case of FTS file 119-28.ps, did ensue.
        
            Note that these structure must be allocated immovable, which
            requires a considerable amount of overhead when using VM. A better
            approach would be to allocate them in gs_default_memory, and use
            a more sophisticated structure descriptor for the stream_DCT_state
            structure (st_DCT_state).
        
        
          src/zgstate.c
            Slightly simplified zinitgraphics, and updated a comment in this
            procedure.
        
        
          src/zmisc.c
            Modified realtime operator to set a zero point at boot time. This
            avoids an annoying delay in running FTS panel 211-01 (206-01.ps).
        
        
          zpcolor.c
            Modified the pattern_paint_prepare procedure to use gs_setdevice_no_int
            rather than gx_set_device_only. It is not clear why the latter
            procedure was ever used in this location, and it is now important to
            use the former procedure so the overprint compositor may be properly
            updated.
        

Wed May 29 06:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxclrast.c [1.10] (+13 -3):
        Added comments to cmd_select_map.  Also corrected setting a pointer to
        NULL inside of that routine.  (Fix from ORIMP.)
        

Wed May 29 05:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * zht1.c [1.4] (+3 -2):
        Corrects problem with 050-01.ps.  setcolorscreen was not correctly setting
        the screen procs in the istate.
        

Tue May 28 06:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gsht.c [1.8] (+16 -9):
        Fix for segment fault while setting device half tones.
        

Thu May 23 06:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gsht.c [1.7] (+9 -3):
        Fix from ORIMP for preventing a divide error if the halftone structure has
        not been initialized.
        

Tue May 21 05:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxistate.h [1.9] (+9 -3):
        This file is part of the check color space commit from yesterday.
        I somehow managed to not include this file in that commit.
        

Mon May 20 22:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * lib.mak [1.15] (+2 -2), gscpixel.c [1.5] (+20 -1), gscolor2.c [1.4] (+20 -1), 
        gscdevn.c [1.9] (+27 -1):
        Added checking of color space ID versus ID for color space installed in the
        current imager state. (Requested by ORIMP.  Debug only.)
        

Thu May 16 08:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcmap.c [1.13] (+13 -13):
        Add casts to reduce various warning messages.
        
        * gdevdevn.c [1.9] (+14 -13), devs.mak [1.11] (+3 -2):
        More fixes for the 1 bit CMYK mode.
        
        * gxdevndi.c [1.8] (+14 -4):
        Correct calculation of component number from plane mask bit position.
        The old calculation only worked for 4 or fewer components.  This was
        causing halftoning to not work with 5 or more components.
        

Mon May 13 21:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * ztrans.c [1.3] (+4 -4), zshade.c [1.3] (+2 -2), zpcolor.c [1.3] (+4 -2), 
        zmisc3.c [1.3] (+1 -22), zimage3.c [1.3] (+5 -5), zimage2.c [1.3] (+3 -132), 
        zimage.c [1.3] (+137 -97), zgstate.c [1.5] (+3 -3), zdpnext.c [1.4] (+6 -10), 
        zcolor3.c [1.1] (+58 -0), zcolor2.c [1.7] (+16 -193), zcolor1.c [1.4] (+1 -45), 
        zcolor.c [1.4] (+335 -132), watclib.mak [1.3] (+2 -2), lib.mak [1.14] (+6 -22), 
        iutil.h [1.3] (+4 -1), iutil.c [1.4] (+29 -1), int.mak [1.5] (+15 -25), 
        iimage2.h [1.3] (+2 -20), iimage.h [1.3] (+22 -13), igstate.h [1.5] (+12 -1), 
        idparam.c [1.3] (+3 -3), gzstate.h [1.3] (+3 -9), gxistate.h [1.8] (+3 -33), 
        gximage2.c [1.3] (+39 -35), gximag3x.c [1.3] (+2 -2), gxclrast.c [1.9] (+11 -5), 
        gsstate.c [1.3] (+2 -47), gsptype1.c [1.3] (+23 -13), gspcolor.c [1.3] (+1 -3), 
        gslib.c [1.4] (+17 -12), gsistate.c [1.6] (+6 -62), gsiparam.h [1.3] (+1 -8), 
        gsimage.c [1.3] (+13 -4), gscspace.h [1.8] (+1 -15), gscspace.c [1.3] (+1 -17), 
        gscsepr.c [1.8] (+0 -0), gscscie.c [1.3] (+10 -5), gscolor2.h [1.3] (+1 -6), 
        gscolor2.c [1.3] (+19 -34), gscolor1.h [1.3] (+2 -2), gscolor1.c [1.6] (+18 -88), 
        gscolor.h [1.3] (+1 -3), gscolor.c [1.4] (+32 -153), gdevpsdi.c [1.3] (+6 -3), 
        gdevp14.c [1.3] (+4 -3), gdevnfwd.c [1.7] (+2 -2):
        Overprint implementation (Jan Stoeckenius)
        
        This is a preliminary code release for the overprint capability. The
        release does not contain the overprint facility itself; it consists
        entirely of modifications so that color space changes will occur in a
        predictable fashion.
        
        Files removed:
        
          src/gshsb.c
          src/gshsb.h
          src/gscssub.c
          src/gscssub.h
          src/zhsb.c
        
        
        Files added:
        
          lib/gs_cspace.ps      PostScript portion of the basic color space handling;
                                see the extensive comment at the head of the file
                                for information. Note that color space substitution
                                and the hue-saturation-brightness (HSB) color space
                                are now fully implemented in the PostScript code;
                                the interpreter and the graphic library are no longer
                                involved in or even aware of these features.
        
          lib/gs_devcs.ps       Implementation of the DeviceGray, DeviceRGB, and
                                DeviceCMYK color spaces.
        
          lib/gs_ciecs2.ps      Implementation of the LangaugeLevel 2 CIEBased color
                                spaces: CIEBasedA and CIEBasedABC.
        
          lib/gs_ciecs3.ps      Implementation of the LanguageLevel 3 CIEBased color
                                spaces: CIEBasedDEF and CIEBasedDEFG
        
          lib/gs_devpxl.ps      Implementation of the DevicePixel color spaces
        
          lib/gs_indxd.ps       Implementation of the Indexed color space.
        
          lib/gs_sepr.ps        Implementaton of the Separation color space.
        
          lib/gs_devn.ps        Implementation of the DeviceN color space.
        
          lib/gs_patrn.ps       Implementation of the Pattern color space.
        
        
          lib/gs_img.ps         Implementation of the traditional (non-dictionary)
                                form of the image and imagemask operators, and the
                                colorimage operator (including the Next alphaimage
                                facility). The interpreter now provides only the
                                dictionary form of the image and imagemask operators,
                                including a variation that provides alpha-channel
                                support.
        
                                Also modified the handling of color spaces for
                                ImageType 2 images. This slightly changes the behavior
                                of these images. If PixelCopy is defined to be true
                                in the image dictionary but such a copy cannot be
                                supported, an error will be generated. This is in
                                agreement with Adobe's documentation, but differs
                                from the earlier behavior.
        
          The code for Indexed, Separation, and DeviceN color spaces
          incorporates code, courtesy of Dan, that will invoke the lookup or
          tint transform procedure in the appropriate context if this is
          appropriate (if there is a lookup procedure for Indexed color spaces
          or the alternate color space is in use for Separation and DeviceN
          color spaces). Currently this is not done recursively (if an Indexed
          color space has a DeviceN base color space, for example), but that
          has not proven necessary in practice. If necessary, it can be added.
        
        
          src/zcolor3.c         Code to implement the .setuseciecolor operator. This
                                operator is used only in the setpagedevice code, and
                                makes certain that the use_cie_color field in the
                                interpreter's graphic state mirrors the setting of
                                the UseCIEColor page device parameter.
        
        
        Files modified:
        
          lib/gs_dpnxt.ps       Added PostScript implementation of the alphaimage
                                operator. This uses the internal .alphaimage
                                operator, which is a variation of the image
                                operator that provide alpha-channel support.
        
          lib/gs_icc.ps         Rewritten to implement the ICCBased color space
                                in the new scheme. See the comments in
                                lib/gs_cspace.ps for information.
        
          lib/gs_init.ps        Modified to include gs_cspace.ps, gs_devcs.ps,
                                and gs_img.ps, and to remove img_util_dict and
                                .cspace_util_dict from userdict at the end of
                                initialization.
        
          lib/gs_lev2.ps        All explicit color spaces removed (with one
                                exception, and replaced by inclusion of gs_devpxl.ps,
                                gs_ciecs2.ps, gs_indxd.ps, gs_sepr.ps, and
                                gs_patrn.ps. The only remaining color space support
                                feature is moving the setcolorspace and setcolor
                                pseudo-operators, and the colorspacedict dictionary,
                                to level2dict. This must be done here, as it is not
                                known that level2dict exists when gs_cspace.ps is
                                first run.
        
                                Also removed all explicit image support. This is
                                now handled by gs_img.ps (see above).
        
          lib/gs_ll3.ps         Removed the old support for color space substitution;
                                this is now handled directly by the color space
                                code (see the comments in gs_cspace.ps for
                                information). Added inclusion of gs_ciecs3.ps and
                                gs_devn.ps.
        
          lib/gs_setpd.ps       Added support for the .getuseciecolor and
                                .setuseciecolor operators. This maintains a
                                "mirror" of the UseCIEColor parameter in the
                                graphic state, to allow fast access.
        
          src/gdevnfwd.c        In gx_forward_get_color_mapping_procs, added a check
                                for the case of a target device which has no
                                get_color_mapping_procs procedure. This led to a
                                segmentation violation crash for FTS file 296-01.ps
                                The fix may not be the correct one, as we are not
                                certain why a device would lack this method.
        
          src/gdevp14.c         Replaced a use of the shared field in the graphic state
                                with a color space allocated on the C-language stack.
        
          src/gdevpsdi.c        Replaced an instance of use of the gs_cspace_DeviceRGB
                                procedure.
        
          src/gscolor.c         Removed gs_currentgray and gs_currentrgbcolor. Modified
                                gs_setgray and gs_setrgbcolor to use gs_setcolorspace
                                and gs_setcolor. This eliminates use of the
                                gs_current_Device*_space routines.
        
          src/gscolor.h         Removed prototypes for gs_currentgray and
                                gs_currentrgbcolor.
        
          src/gscolor1.c        Removed gs_currentcmykcolor. Modified gs_setcmykcolor
                                to use gs_setgray and gs_setcolorspace.
        
          src/gscolor1.h        Removed prototype for gs_currentcmykcolor.
        
          src/gscolor2.c        Removed gs_currentcolorspace_index. Removed the color
                                index tracking used as part of the color space
                                substitution method.
        
          src/gscolor2.h        Removed prototype for gs_currentcolorspace_index.
        
          src/gscscie.c         Eliminated use of the gs_cspace_Device* routines.
        
          src/gscsepr.c         Fixed a pair of typos in revision 1.6 of the code.
                                In gs_cspace_set_sepr_proc and
                                gx_concretize_Separation, the code was still accessing
                                pcspace-&gt;params.device_n when it wanted to access
                                pcspace-&gt;params.separation. This caused a crash in
                                FTS file 245-01.ps.
        
          src/gscspace.c        Removed gs_cspace_Device* procedures.
        
          src/gscspace.h        Removed prototypes for gs_cspace_Device* procedures.
        
          src/gsimage.c         Removed use of the gs_cspace_DeviceGray procedure.
        
          src/gsiparam.h        Removed the gs_image_t_int_{gray, rgb, cmyk} macros.
        
          src/gsistate.c        Updated code to reflect removal of the shared field in
                                the imager state. As part of this, the
                                rc_free_imager_shared and gx_device_color_spaces_free
                                procedures were removed.
        
          src/gslib.c           Removed use of the gs_current_Device*_space and
                                gs_image_t_init_gray procedures.
        
          src/gspcolor.c        Removed reference to the orig_cspace_index field,
                                which is no longer part of the library's graphic
                                state.
        
          src/gsptype1.c        Eliminated use of the gs_cspace_DeviceGray procedure,
                                and insured that a color space is set as the current
                                color space before it is used.
        
          src/gsstate.c         Removed code that maintained the device_color_spaces
                                field (color space substitution), which is no longer
                                in the library's graphic state.
        
          src/gxclrast.c        Removed use of the gs_cspace_Device* procedures.
        
          src/gximage3x.c       Removed use of the gs_image_t_init_gray procedure.
        
          src/gximage2.c        Modified color space handling for ImageType 2 images.
                                Note that there was and still is a problem with the
                                handling of transformations in this code.
        
          src/gxistate.h        Removed the shared field of the imager state, all
                                associated structures and prototypes, and modified
                                the affected GC macros. The gx_device_color_spaces_t
                                structure was previously used in the graphic library's
                                state as well, but that use has been eliminated.
        
          src/gzstate.h         Removed the the device_color_spaces field, and modified
                                the requisite GC macros
        
          src/idparam.c         Modified dict_float_array_check_param to handle
                                packed (short or mixed) arrays.
        
          src/igstate.h         Added the use_cie_color field. This is a mirror for
                                the UseCIEColor parameter of the page device, used
                                because the currentpagedevice operator is potentially
                                expensive.
        
          src/iimage.h          Modified to restrict the interpreter to just the
                                dictionary form of the image and imagemask operator.
                                This removes the zimage_opaque_setup, zimage_data_setup,
                                and zimage_multiple prototypes, and moves the
                                image_params structure and the image1_setup
                                prototypes to this file (from iimage2.h).
        
          src/iimage2.h         Moved everything except the prototype for
                                process_non_source_image to iimage.h.
        
          src/iutil.c           Added process_float_array procedure, to allow packed
                                (short, mixed) arrays of numbers to be handled.
        
          src/iutil.h           Added prototype for the process_float_array procedure.
        
          src/zcolor.c          Removed:
                                  zcurrentgray, zcurrentrgbcolor,
                                  setgray, setrgbcolor
                                Moved (from zcolor2.c):
                                  zcurrentcolor, zcurrentcolorspace,
                                  zsetcolor, zsetcolorspace
                                Added:
                                  zgetuseciecolor   queries the use_cie_color field
                                                    in the interpreter state
                                  zsetdevcspace     sets a DeviceGray, DeviceRGB, or
                                                    DeviceCMYK color space
        
          src/zcolor1.c         Removed zcurrentcmykcolor, zsetcmykcolor, and
                                zcolorimage.
        
          src/zcolor2.c         Removed everything in prior version. Added
                                zusealternate, to test if an alternate color space
                                is being used (for a Separation, DeviceN, or ICCBased
                                color space), or if a base color space is in use
                                (for an Indexed or a Pattern color space that uses
                                a base space).
        
          src/zdpnext.c         Replace the alphaimage operator with .alphaimage,
                                which has the semantics of the dictionary form of
                                the image operator.
        
          src/zgstate.c         Modified the initgraphics operator to set the
                                colorspace.array field to a legitimate color space
                                (previously it was set to a null object). Also
                                inserted code to initialize the use_cie_color field
                                to false.
        
          src/zimage.c          Removed the traditional-form image and imagemask
                                operators (zimage and zimagemask), and moved the
                                dictionary form of these operators to this file
                                from zimage2.c. Also, added the has_alpha parameter
                                to the data_image_params and pixel_image_params
                                procedures, to support the .alphaimage operator.
        
          src/zimage2.c         Moved everything except the process_non_source_image
                                procedure to zimage.c.
        
          src/zimage3.c         Updated calls to data_image_params and
                                pixel_image_params to add has_alpha parameter.
        
          src/zmisc3.c          Removed .setsubstitutecolorspace operator.
        
          src/zpcolor.c         Modified .setpatternspace to handle a packed (short,
                                mixed) array operand.
        
          src/zshade.c          Modified build_mesh_shading to handle a packed (short,
                                mixed) DataSource array operand.
        
          src/ztrans.c          Modified calls to data_image_params and
                                pixel_image_params to add has_alpha operand.
        
          src/watclib.mak       Removed reference to the hsblib.dev, which no longer
                                exists and which, for some unknown reason, was directly
                                included in this makefile. Does anyone still use this
                                file?
        
          src/int.mak           Removed hsb.dev and the zimage2_l2 operators, added
                                zcolor3.c, updated various dependency lists.
        
          src/lib.mak           Removed hsblib.dev and gscssub.[ch], updated various
                                dependency lists. Note that this file has not yet
                                been modified to always compile with Level 3 support.
        

Sun May 12 03:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gscsepr.c [1.7] (+3 -3):
        Changed a couple of references to device_n.params to separation.params.
        

Thu May  9 08:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcmap.c [1.12] (+3 -3):
        Correction to the last commit
        

Thu May  9 07:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * vdtrace.c [1.2] (+1 -2), lib.mak [1.12] (+2 -2), gslib.c [1.3] (+15 -7):
        Changes required to get the GS lib to build.
        
        * zcssepr.c [1.4] (+22 -40), zcsdevn.c [1.7] (+6 -6), zcolor2.c [1.6] (+1 -28), 
        lib.mak [1.13] (+4 -4), gxistate.h [1.7] (+3 -1), gxcmap.h [1.9] (+5 -5), 
        gxcmap.c [1.11] (+59 -46), gxcht.c [1.14] (+2 -2), gxcdevn.h [1.4] (+2 -3), 
        gscspace.h [1.7] (+7 -2), gscsepr.h [1.4] (+20 -15), gscsepr.c [1.6] (+137 -57), 
        gscdevn.h [1.6] (+19 -14), gscdevn.c [1.8] (+61 -25), gdevpdfc.c [1.3] (+2 -2):
        1. Revised version of the Separation color space implementation.  The /None
        case now works.  The "normal" case is now implemented as part of the separation
        color space instead of using the DeviceN logic.
        2. The Separation and DeviceN color space handler for getting the alternate
        color space now return NULL if the alternate color space is not being used.
        (As pere request from ORIMP.)
        3. The DeviceN color space had a problem with an ICC alternate space. Corrected.
        

Thu Apr 25 06:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * zht2.c [1.5] (+2 -4):
        Removed unused variables.
        
        * gsbitops.h [1.3] (+17 -6):
        Added casts to reduce warning casting warnings.
        

Thu Apr 25 04:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxiscale.c [1.6] (+2 -2):
        The parameters to a call to remap_concrete_color were in the wrong order.
        

Tue Apr 23 16:00:00 2002 GMT        Raph Levine    raph@meerkat

        * gdevxcf.c [1.7] (+65 -22):
        Apply RGB-&gt;device and CMYK-&gt;device profiles only in DeviceN color model;
        in DeviceRGB and DeviceCMYK color models, the mapping is defined by
        the PostScript spec. Also map DeviceGray colorspace to CMYK.
        

Tue Apr 23 08:00:00 2002 GMT        Raph Levine    raph@meerkat

        * gdevxcf.c [1.6] (+117 -8), gdevdflt.c [1.9] (+9 -6):
        Makes xcfcmyk device agile in ProcessColorModel. Changes "expert
        system" logic slightly so that is_like_DeviceRGB is only called
        when filling in the default is needed.
        

Tue Apr 23 06:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * lib.mak [1.11] (+3 -2), int.mak [1.4] (+3 -2):
        These two files should have been included in the previous commit.
        
        * zfsample.c [1.2] (+22 -21), zcssepr.c [1.3] (+79 -94), 
        zcsdevn.c [1.6] (+34 -176), gxdevice.h [1.8] (+6 -1), gxcmap.h [1.8] (+7 -1), 
        gxcmap.c [1.10] (+68 -1), gscspace.h [1.5] (+6 -11), gscsepr.h [1.3] (+32 -40), 
        gscsepr.c [1.5] (+84 -176), gscdevn.h [1.5] (+9 -6), gscdevn.c [1.7] (+25 -19):
        Changed the separation color space to use common logic with the DeviceN
        color space.  This commit also brings the DeviceN code up to date.  This
        includes the function sampling logic in zfsample.c.  This code handles the
        /All case and the normal separation case.  The /None case is not handled
        correctly.  All components are erased (zeroed) when /None is selected.
        
        * gscspace.h [1.6] (+3 -1):
        I was over zealous in cleaning up this file.  Restored defintion of
        gx_indexed_map.
        

Tue Apr 23 04:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gdevdsp.c [1.8] (+235 -148), gdevdflt.c [1.8] (+34 -25), 
        devs.mak [1.10] (+2 -2):
        These changes are required to initialize the "display" device to work
        with the DeviceN code.  This involves setting up the correct color_info
        structure for the device and the DeviceN related procs.
        

Tue Apr 16 07:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gxdevcli.h [1.9] (+3 -12):
        removes duplicate dci_std_color() macro definition.
        

Tue Apr 16 05:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gdevdevn.c [1.8] (+2 -3):
        Some more corrections to the initialization of the spotrgb and spotcmyk
        device structures.  Apologies to Henry.  I misunderstood the results from
        the cvs merge.  Henry did not mangle the bpp, etc. in the previous commit.
        

Tue Apr 16 04:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxdither.h [1.4] (+10 -10):
        Added prototype for function gx_render_device_DeviceN.
        Removed some unused macro definitions.
        
        * lib.mak [1.10] (+2 -2), gxcmap.c [1.9] (+49 -31):
        1.  Added included of string_.h.  This resolves some undefined function
        prototypes.
        2.  Corrected handling of transfer functions and halftoning.  (Transfer
        functions were not being applied if halftoning was being done.)
        3.  Finished the half tone code for DeviceN color model devices.
        4.  Some misc code clean up to remove misc warning messages.
        

Tue Apr 16 03:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gsht1.c [1.5] (+2 -2):
        We were not allocating a half tone cache for the "gray" component.
        
        * gdevdevn.c [1.7] (+22 -15):
        1.  Convert the spotcmyk device back to a half toned (1 bit per pixel per
        component) device.  This had been changed by Henry is the last commit.
        2.  Corrected the gray color space to cmyk color model handler.  This was
        corrupting the cmykspot colors.
        3.  Corrected a couple of problems in the spotcmyk device.  (Garbage data
        in the last half of byte if a line had an odd number of pixels.  Bad bps
        and planes in the pcx header - the cmyk pcx output file is really a 4 bit
        device with a color mapping table.)
        

Tue Apr 16 00:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gstype42.c [1.4] (+4 -2):
        conditional compile (hack) to prevent freeing glyph data when library is
        built with pcl.  This is a long standing issue supported by a thousand
        lines of email and 0 lines of code.
        

Mon Apr 15 23:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gdevdflt.c [1.7] (+1 -2):
        remove a diagnostic message.
        

Mon Apr 15 22:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * zdfilter.c [1.3] (+1 -21), zdevice.c [1.3] (+2 -2), unix-gcc.mak [1.7] (+2 -2), 
        lib.mak [1.9] (+4 -4), gxdevice.h [1.7] (+7 -14), gxdevcli.h [1.8] (+142 -47), 
        gxcmap.h [1.7] (+8 -1), gxcmap.c [1.8] (+173 -12), gxclpath.h [1.4] (+2 -2), 
        gxcindex.h [1.6] (+1 -2), gxbitfmt.h [1.3] (+1 -4), gsutil.c [1.3] (+13 -5), 
        gstype42.c [1.3] (+4 -4), gsmalloc.c [1.3] (+11 -1), gshtx.c [1.8] (+4 -4), 
        gsdfilt.c [1.4] (+1 -83), gsalphac.c [1.4] (+2 -2), gs.mak [1.5] (+1 -2), 
        gdevxcf.c [1.5] (+2 -2), gdevpdf.c [1.6] (+1 -2), gdevnfwd.c [1.6] (+5 -5), 
        gdevmem.c [1.6] (+3 -5), gdevm1.c [1.4] (+3 -2), gdevdgbr.c [1.4] (+61 -38), 
        gdevdflt.c [1.6] (+150 -48), gdevdevn.c [1.6] (+4 -4), gdevcmap.c [1.7] (+132 -131):
        - general cleanup tasks detailed in orimp's message 2/11/02 and 2/17/02.
        - pcl color mapper support.
        - modification for pcl build.
        - color info "expert system".
        

Thu Apr 11 22:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * msvccmd.mak [1.3] (+4 -2):
        Create a separate WARNOPT parameter for specifying the warning message
        level.  This allows the message level to be specified from the command
        line.
        

Thu Apr 11 02:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcldev.h [1.5] (+2 -2):
        Correct problem in prototype for cmd_put_color_map.  Error created in
        the last commit.
        

Tue Apr  9 00:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxdevndi.c [1.7] (+11 -6):
        Fixed a debug printout which needed to be updated for a variable number of
        components.
        
        * zcolor2.c [1.5] (+2 -5), gxclrast.c [1.8] (+50 -27), gxclist.h [1.3] (+2 -2), 
        gxclimag.c [1.5] (+69 -26), gxcldev.h [1.4] (+3 -3), gxclbits.c [1.3] (+8 -5), 
        gxcht.c [1.13] (+1 -3), gxcdevn.h [1.3] (+4 -1), gscdevn.c [1.6] (+10 -1):
        Updates related to the placing of transfer maps into the clist.
        Also some minor clean ups missing from previous commits.
        

Tue Apr  2 08:00:00 2002 GMT        Raph Levine    raph@meerkat

        * gdevxcf.c [1.4] (+153 -43):
        Adds ICC profile paths to RGB-&gt;Color Model and CMYK-&gt;Color Model
        transforms in xcfcmyk device. Use ProfileRgb (3-&gt;N) and ProfileCmyk
        (4-&gt;N) device parameters to install ICC transforms.
        

Tue Apr  2 05:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxdither.h [1.3] (+2 -31), gxdcolor.c [1.7] (+2 -2), gxclrast.c [1.7] (+39 -30), 
        gxclpath.h [1.3] (+11 -5), gxclpath.c [1.3] (+41 -23), gxclimag.c [1.4] (+10 -19), 
        gxcht.c [1.12] (+19 -13), gsht.c [1.6] (+25 -19), gdevnfwd.c [1.5] (+11 -6):
        Changes to enable the use of the clist device (banding) with the DeviceN
        colorspaces and devices.  This is still missing the clist commands for
        transfer functions and the DeviceN component map.
        

Wed Mar 27 01:00:00 2002 GMT        Raph Levine    raph@meerkat

        * gdevxcf.c [1.3] (+131 -6), devs.mak [1.9] (+6 -3):
        Adds some ICC color profile ability to the xcf device, for testing
        purposes.
        

Tue Mar 26 21:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxdevndi.c [1.6] (+40 -5), gdevplnx.c [1.3] (+3 -3):
        Add definition of fc_color_quo and some other changes that were required
        as part of eliminating the gxdither.c module.
        

Tue Mar 26 05:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gshtx.h [1.5] (+1 -2), gshtx.c [1.7] (+9 -33):
        Removed more references to separation names.
        

Mon Mar 25 23:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * lib.mak [1.8] (+2 -7), gxdither.c [1.6] (+1 -1):
        Removed unused file: gxdither.c  Replaced by gxdevndi.c
        
        * gshtx.h [1.4] (+1 -3):
        Removed sepr_name parameter from function prototypes.  This change
        goes with an earlier change to gshtx.c.
        

Tue Mar 19 19:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gshtx.c [1.6] (+1 -13):
        Changes requested by henry.  The separation name has been removed
        from the calling sequence for gs_ht_set_threshold_comp and
        gs_ht_set_mask_comp.  (These routines are used by PCL.)
        

Mon Mar 18 07:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gdevpdfc.h [1.1] (+62 -0):
        this file was missed in the merge.
        

Mon Mar 18 06:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gdevpxat.h [1.3] (+3 -1), gdevmr1.c [1.3] (+6 -5), gdevdrop.c [1.3] (+18 -13), 
        gdevcmap.c [1.6] (+16 -16):
        operand changes and misc. fixes for compiling pcl.  I used pcl because
        it was not clear how even to compile the gslib target.  With
        implementations for gs_ht_set_mask_comp() and
        gs_ht_set_threshold_comp() it will be possible to build pcl and verify
        the changes to these files from pcl.
        

Mon Mar 18 05:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gdevpdfg.c [1.5] (+4 -3):
        pdf_update_transfer() was not returning a value resulting in the
        previously encountered pdf problems.  It now retuns 0 and prints a
        diagnostic message saying it is not implemented.  Setting the
        /DeviceGray color model does not work properly in pdfwrite.
        

Sat Mar 16 05:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * zusparam.c [1.3] (+26 -5), zcrd.c [1.3] (+3 -3), vms_x_fix.h [1.2] (+3 -3), 
        vdtrace.h [1.2] (+149 -150), unixtrad.mak [1.3] (+1 -1), 
        png_.h [1.3] (+6 -1), lib.mak [1.7] (+22 -8), gxiscale.c [1.5] (+2 -2), 
        gsistate.c [1.5] (+2 -1), gscolor1.c [1.5] (+2 -1), gdevvec.c [1.3] (+1 -2), 
        gdevpdfg.c [1.4] (+5 -4), gdevpdf.c [1.5] (+10 -16), dwreg.h [1.3] (+4 -1), 
        dwimg.h [1.3] (+3 -1), devs.mak [1.8] (+11 -5):
        compile fixes for pdfwrite and miscellaneous post merge problems
        fixed.  Running the interpreter with pdfwrite fails upon the first
        graphics painting operation returning an uninitialized error code, so
        this will need more work.
        

Fri Mar 15 23:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * zvmem2.c [1.2] (+11 -13), zvmem.c [1.2] (+17 -13), zusparam.c [1.2] (+11 -13), 
        zupath.c [1.2] (+11 -13), ztype.c [1.2] (+11 -13), ztrap.c [1.2] (+11 -13), 
        ztrans.c [1.2] (+11 -13), ztoken.c [1.2] (+11 -13), zsysvm.c [1.2] (+11 -13), 
        zstring.c [1.2] (+34 -13), zstack.c [1.2] (+11 -13), zshade.c [1.2] (+37 -36), 
        zrop.c [1.2] (+11 -13), zrelbit.c [1.2] (+11 -13), zpcolor.c [1.2] (+11 -13), 
        zpath1.c [1.2] (+11 -13), zpath.c [1.2] (+11 -13), zpaint.c [1.2] (+11 -13), 
        zpacked.c [1.2] (+11 -13), zmisc3.c [1.2] (+11 -13), zmisc2.c [1.2] (+11 -13), 
        zmisc1.c [1.2] (+11 -13), zmisc.c [1.2] (+11 -13), zmedia2.c [1.2] (+21 -19), 
        zmatrix.c [1.2] (+11 -13), zmath.c [1.2] (+11 -13), zlib.mak [1.2] (+11 -13), 
        ziodevsc.c [1.2] (+11 -16), ziodevs.c [1.2] (+11 -13), ziodev2.c [1.2] (+11 -13), 
        ziodev.c [1.2] (+13 -15), zimage3.c [1.2] (+11 -13), zimage2.c [1.2] (+11 -13), 
        zimage.c [1.2] (+11 -13), zicc.c [1.2] (+12 -13), zht2.c [1.4] (+11 -13), 
        zht1.c [1.3] (+11 -13), zht.c [1.3] (+11 -13), zhsb.c [1.2] (+11 -13), 
        zgstate.c [1.4] (+11 -13), zgeneric.c [1.2] (+11 -13), zfzlib.c [1.2] (+11 -13), 
        zfunc4.c [1.2] (+36 -25), zfunc3.c [1.2] (+14 -16), zfunc0.c [1.2] (+12 -14), 
        zfunc.c [1.2] (+39 -22), zfsample.c [1.1] (+544 -0), zfrsd.c [1.2] (+11 -13), 
        zfproc.c [1.2] (+11 -13), zfont42.c [1.2] (+11 -13), zfont32.c [1.2] (+11 -13), 
        zfont2.c [1.2] (+11 -13), zfont1.c [1.2] (+11 -13), zfont0.c [1.2] (+11 -13), 
        zfont.c [1.2] (+11 -13), zfmd5.c [1.2] (+11 -13), zfilterx.c [1.2] (+11 -13), 
        zfilter2.c [1.2] (+11 -13), zfilter.c [1.2] (+11 -13), zfileio.c [1.2] (+11 -13), 
        zfile.c [1.2] (+161 -32), zfdecode.c [1.2] (+11 -13), zfdcte.c [1.2] (+11 -13), 
        zfdctd.c [1.2] (+11 -13), zfcmap.c [1.3] (+11 -13), zfcid1.c [1.2] (+13 -17), 
        zfcid0.c [1.3] (+14 -15), zfcid.c [1.2] (+11 -13), zfbcp.c [1.2] (+11 -13), 
        zfarc4.c [1.2] (+11 -13), zfapi.c [1.2] (+721 -231), zdscpars.c [1.2] (+11 -13), 
        zdps1.c [1.2] (+11 -13), zdps.c [1.2] (+11 -13), zdpnext.c [1.3] (+12 -13), 
        zdouble.c [1.2] (+11 -13), zdosio.c [1.2] (+11 -13), zdict.c [1.2] (+11 -13), 
        zdfilter.c [1.2] (+11 -13), zdevice2.c [1.2] (+19 -15), 
        zdevice.c [1.2] (+16 -13), zdevcal.c [1.2] (+11 -13), zcssepr.c [1.2] (+11 -13), 
        zcspixel.c [1.2] (+11 -13), zcsindex.c [1.2] (+11 -13), 
        zcsdevn.c [1.5] (+11 -13), zcrd.c [1.2] (+11 -13), zcontrol.c [1.2] (+86 -13), 
        zcontext.c [1.2] (+11 -13), zcolor2.c [1.4] (+12 -13), zcolor1.c [1.3] (+11 -13), 
        zcolor.c [1.3] (+11 -13), zcie.c [1.2] (+12 -14), zcid.c [1.2] (+11 -13), 
        zcharx.c [1.2] (+11 -13), zcharout.c [1.2] (+11 -13), zchar42.c [1.2] (+40 -17), 
        zchar32.c [1.2] (+11 -13), zchar2.c [1.2] (+11 -13), zchar1.c [1.2] (+16 -18), 
        zchar.c [1.2] (+11 -13), zcfont.c [1.2] (+11 -13), zbseq.c [1.2] (+11 -13), 
        zbfont.c [1.2] (+11 -17), zarray.c [1.2] (+11 -13), zarith.c [1.2] (+11 -13), 
        x_.h [1.2] (+11 -13), wmin.mak [1.2] (+11 -13), winplat.mak [1.2] (+11 -13), 
        winlib.mak [1.4] (+12 -13), winint.mak [1.2] (+38 -21), 
        windows_.h [1.2] (+11 -13), wctail.mak [1.2] (+12 -13), 
        wccommon.mak [1.2] (+11 -13), watcw32.mak [1.2] (+18 -13), 
        watclib.mak [1.2] (+20 -13), watc.mak [1.2] (+11 -13), vmsmath.h [1.2] (+11 -13), 
        version.mak [1.2] (+11 -13), vdtrace.h [1.1] (+168 -0), 
        vdtrace.c [1.1] (+168 -0), unixtrad.mak [1.2] (+11 -13), 
        unixlink.mak [1.2] (+11 -13), unixinst.mak [1.2] (+13 -15), 
        unixhead.mak [1.2] (+11 -13), unixansi.mak [1.2] (+19 -13), 
        unix-gcc.mak [1.6] (+20 -14), unix-end.mak [1.2] (+11 -13), 
        unix-dll.mak [1.2] (+11 -13), unix-aux.mak [1.2] (+11 -13), 
        unistd_.h [1.2] (+11 -13), ugcclib.mak [1.2] (+19 -13), 
        time_.h [1.2] (+11 -13), szlibxx.h [1.2] (+11 -13), szlibx.h [1.2] (+11 -13), 
        szlibe.c [1.2] (+11 -13), szlibd.c [1.2] (+11 -13), szlibc.c [1.2] (+11 -13), 
        string_.h [1.2] (+11 -13), strimpl.h [1.2] (+11 -13), stream.h [1.2] (+11 -13), 
        stream.c [1.2] (+22 -24), store.h [1.2] (+11 -13), stdpre.h [1.2] (+36 -54), 
        stdio_.h [1.2] (+11 -13), std.h [1.2] (+21 -13), stat_.h [1.2] (+11 -13), 
        sstring.h [1.2] (+12 -14), sstring.c [1.2] (+11 -13), srlx.h [1.2] (+11 -13), 
        srle.c [1.2] (+11 -13), srld.c [1.2] (+11 -13), srdline.h [1.2] (+11 -13), 
        spsdf.h [1.2] (+11 -13), spsdf.c [1.2] (+11 -13), spprint.h [1.2] (+11 -13), 
        spprint.c [1.2] (+11 -13), spngpx.h [1.2] (+11 -13), spngp.c [1.2] (+11 -13), 
        spdiffx.h [1.2] (+11 -13), spdiff.c [1.2] (+11 -13), smtf.h [1.2] (+11 -13), 
        smtf.c [1.2] (+11 -13), smd5.h [1.2] (+11 -13), smd5.c [1.2] (+11 -13), 
        slzwx.h [1.2] (+11 -13), slzwd.c [1.2] (+11 -13), slzwce.c [1.2] (+11 -13), 
        slzwc.c [1.2] (+11 -13), sjpege.c [1.2] (+11 -13), sjpegd.c [1.2] (+11 -13), 
        sjpegc.c [1.2] (+11 -13), sjpeg.h [1.2] (+11 -13), sisparam.h [1.2] (+11 -13), 
        siscale.h [1.2] (+11 -13), siscale.c [1.2] (+11 -13), siinterp.h [1.2] (+11 -13), 
        siinterp.c [1.2] (+11 -13), shcgen.h [1.2] (+11 -13), shcgen.c [1.2] (+11 -13), 
        shc.h [1.2] (+11 -13), shc.c [1.2] (+11 -13), sfxstdio.c [1.2] (+11 -13), 
        sfxfd.c [1.2] (+11 -13), sfxboth.c [1.2] (+11 -13), sfilter2.c [1.2] (+11 -13), 
        sfilter1.c [1.2] (+11 -13), sfilter.h [1.2] (+11 -13), seexec.c [1.2] (+11 -13), 
        sdeparam.c [1.2] (+11 -13), sddparam.c [1.2] (+11 -13), 
        sdcte.c [1.2] (+25 -13), sdctd.c [1.2] (+11 -13), sdctc.c [1.2] (+11 -13), 
        sdct.h [1.2] (+11 -13), sdcparam.h [1.2] (+11 -13), sdcparam.c [1.2] (+11 -13), 
        scommon.h [1.2] (+13 -15), scfx.h [1.2] (+13 -15), scfparam.c [1.2] (+11 -13), 
        scfetab.c [1.2] (+11 -13), scfe.c [1.2] (+11 -13), scfdgen.c [1.2] (+12 -14), 
        scfd.c [1.2] (+11 -13), scf.h [1.2] (+11 -13), scantab.c [1.2] (+11 -13), 
        scanchar.h [1.2] (+11 -13), sbwbs.h [1.2] (+11 -13), sbwbs.c [1.2] (+11 -13), 
        sbtx.h [1.2] (+11 -13), sbhc.h [1.2] (+11 -13), sbhc.c [1.2] (+11 -13), 
        sbcp.h [1.2] (+11 -13), sbcp.c [1.2] (+11 -13), sarc4.h [1.2] (+11 -13), 
        sarc4.c [1.2] (+11 -13), sa85x.h [1.2] (+11 -13), sa85d.h [1.2] (+11 -13), 
        sa85d.c [1.2] (+11 -13), png_.h [1.2] (+11 -13), pipe_.h [1.2] (+11 -13), 
        pcwin.mak [1.2] (+11 -13), ostack.h [1.2] (+11 -13), os2.mak [1.2] (+22 -13), 
        opextern.h [1.2] (+11 -13), oper.h [1.2] (+11 -13), openvms.mmk [1.2] (+17 -14), 
        openvms.mak [1.2] (+28 -14), opdef.h [1.2] (+11 -13), opcheck.h [1.2] (+11 -13), 
        oparc.h [1.2] (+11 -13), msvctail.mak [1.2] (+11 -13), msvclib.mak [1.2] (+11 -13), 
        msvccmd.mak [1.2] (+20 -14), msvc32.mak [1.5] (+22 -15), 
        memory_.h [1.2] (+11 -13), md5.c [1.2] (+9 -3), math_.h [1.2] (+11 -13), 
        malloc_.h [1.2] (+11 -13), main.h [1.2] (+11 -13), macsystypes.h [1.2] (+11 -13), 
        macsysstat.h [1.2] (+13 -13), macosx.mak [1.1] (+450 -0), 
        macos-mcp.mak [1.2] (+22 -13), macos-fw.mak [1.1] (+168 -0), 
        macgenmcpxml.sh [1.2] (+5 -5), libpng.mak [1.2] (+11 -13), 
        lib.mak [1.6] (+24 -18), jpeg.mak [1.2] (+11 -13), jerror_.h [1.2] (+16 -13), 
        ivmspace.h [1.2] (+11 -13), ivmem2.h [1.2] (+11 -13), iutilasm.asm [1.2] (+11 -13), 
        iutil2.h [1.2] (+12 -14), iutil2.c [1.2] (+17 -14), iutil.h [1.2] (+11 -13), 
        iutil.c [1.3] (+11 -14), itoken.h [1.2] (+11 -13), istruct.h [1.2] (+11 -13), 
        istream.h [1.2] (+11 -13), istkparm.h [1.2] (+11 -13), istack.h [1.2] (+11 -13), 
        istack.c [1.2] (+11 -13), isstate.h [1.2] (+11 -13), isdata.h [1.2] (+11 -13), 
        iscannum.h [1.2] (+11 -13), iscannum.c [1.2] (+11 -13), 
        iscanbin.h [1.2] (+11 -13), iscanbin.c [1.2] (+63 -35), 
        iscan.h [1.2] (+11 -13), iscan.c [1.2] (+11 -13), isave.h [1.2] (+11 -13), 
        isave.c [1.2] (+57 -61), iref.h [1.2] (+11 -13), ireclaim.c [1.2] (+11 -13), 
        iplugin.h [1.2] (+11 -13), iplugin.c [1.2] (+11 -13), ipcolor.h [1.2] (+11 -13), 
        iparray.h [1.2] (+11 -13), iparam.h [1.2] (+11 -13), iparam.c [1.2] (+11 -13), 
        ipacked.h [1.2] (+11 -13), iostack.h [1.2] (+11 -13), iosdata.h [1.2] (+11 -13), 
        interp.h [1.2] (+11 -13), interp.c [1.2] (+11 -13), int.mak [1.3] (+34 -29), 
        inouparm.c [1.2] (+11 -13), inobtokn.c [1.2] (+11 -13), 
        inamestr.h [1.2] (+11 -13), inames.h [1.2] (+11 -13), inameidx.h [1.2] (+11 -13), 
        inamedef.h [1.2] (+11 -13), iname.h [1.2] (+11 -13), iname.c [1.2] (+11 -13), 
        iminst.h [1.2] (+11 -13), imemory.h [1.2] (+11 -13), imainarg.h [1.2] (+11 -13), 
        imainarg.c [1.2] (+40 -26), imain.h [1.2] (+11 -13), imain.c [1.2] (+17 -19), 
        ilocate.c [1.2] (+11 -13), ilevel.h [1.2] (+11 -13), ijs.mak [1.1] (+117 -0), 
        iinit.h [1.2] (+11 -13), iinit.c [1.2] (+11 -13), iimage2.h [1.2] (+11 -13), 
        iimage.h [1.2] (+11 -13), iht.h [1.2] (+11 -13), igstate.h [1.4] (+11 -13), 
        igcstr.h [1.2] (+11 -13), igcstr.c [1.2] (+11 -13), igcref.c [1.2] (+11 -13), 
        igc.h [1.2] (+11 -13), igc.c [1.2] (+11 -13), ifwpred.h [1.2] (+11 -13), 
        ifunc.h [1.2] (+20 -16), ifrpred.h [1.2] (+11 -13), ifont42.h [1.2] (+11 -13), 
        ifont2.h [1.2] (+11 -13), ifont1.h [1.2] (+11 -13), ifont.h [1.2] (+11 -13), 
        ifilter2.h [1.2] (+11 -13), ifilter.h [1.2] (+11 -13), ifcid.h [1.2] (+11 -13), 
        ifapi.h [1.2] (+53 -56), iestack.h [1.2] (+11 -13), iesdata.h [1.2] (+11 -13), 
        idstack.h [1.2] (+11 -13), idstack.c [1.2] (+11 -13), idsdata.h [1.2] (+11 -13), 
        idparam.h [1.2] (+11 -13), idparam.c [1.2] (+11 -13), idosave.h [1.2] (+11 -13), 
        idisp.h [1.2] (+18 -15), idisp.c [1.2] (+13 -14), idictdef.h [1.2] (+11 -13), 
        idict.h [1.2] (+11 -13), idict.c [1.2] (+11 -13), idebug.h [1.2] (+11 -13), 
        idebug.c [1.2] (+11 -13), iddstack.h [1.2] (+11 -13), iddict.h [1.2] (+11 -13), 
        icstate.h [1.2] (+13 -13), icsmap.h [1.2] (+11 -13), icremap.h [1.2] (+11 -13), 
        icontext.h [1.2] (+11 -13), icontext.c [1.2] (+14 -14), 
        iconf.h [1.2] (+11 -13), iconf.c [1.2] (+11 -13), icolor.h [1.2] (+11 -13), 
        icie.h [1.2] (+11 -13), icid.h [1.2] (+11 -13), icharout.h [1.2] (+11 -13), 
        ichar1.h [1.2] (+11 -13), ichar.h [1.2] (+11 -13), icfontab.c [1.2] (+11 -13), 
        icclib.mak [1.2] (+11 -13), iccinit0.c [1.2] (+11 -13), 
        iccfont.c [1.2] (+14 -13), ibnum.h [1.2] (+35 -20), ibnum.c [1.2] (+39 -30), 
        iastruct.h [1.2] (+11 -13), iastate.h [1.2] (+11 -13), iapi.h [1.2] (+29 -13), 
        iapi.c [1.2] (+24 -17), ialloc.h [1.2] (+11 -13), ialloc.c [1.2] (+11 -13), 
        gzstate.h [1.2] (+11 -13), gzpath.h [1.2] (+11 -13), gzline.h [1.2] (+11 -13), 
        gzht.h [1.4] (+14 -13), gzcpath.h [1.2] (+11 -13), gzacpath.h [1.2] (+11 -13), 
        gxxfont.h [1.2] (+11 -13), gxtype1.h [1.2] (+41 -31), gxtype1.c [1.2] (+14 -15), 
        gxttf.h [1.2] (+23 -13), gxtmap.h [1.2] (+11 -13), gxtext.h [1.2] (+11 -13), 
        gxsync.h [1.2] (+11 -13), gxsync.c [1.2] (+11 -13), gxstroke.c [1.2] (+11 -13), 
        gxstdio.h [1.2] (+11 -13), gxstate.h [1.3] (+11 -13), gxshade6.c [1.2] (+11 -13), 
        gxshade4.h [1.2] (+11 -13), gxshade4.c [1.2] (+11 -13), 
        gxshade1.c [1.2] (+11 -13), gxshade.h [1.2] (+11 -13), gxshade.c [1.2] (+11 -13), 
        gxsample.h [1.2] (+11 -13), gxsample.c [1.2] (+11 -13), 
        gxrplane.h [1.2] (+11 -13), gxropc.h [1.2] (+11 -13), gxpflat.c [1.2] (+11 -13), 
        gxpdash.c [1.2] (+11 -13), gxpcopy.c [1.2] (+11 -13), gxpcolor.h [1.2] (+11 -13), 
        gxpcmap.c [1.3] (+11 -13), gxpcache.h [1.2] (+11 -13), gxpath2.c [1.2] (+11 -13), 
        gxpath.h [1.2] (+11 -13), gxpath.c [1.2] (+11 -13), gxpaint.h [1.2] (+11 -13), 
        gxpaint.c [1.2] (+11 -13), gxpageq.h [1.2] (+11 -13), gxpageq.c [1.2] (+11 -13), 
        gxp1impl.h [1.2] (+11 -13), gxp1fill.c [1.2] (+11 -13), 
        gxop1.h [1.2] (+11 -13), gxobj.h [1.2] (+17 -15), gxmclip.h [1.2] (+11 -13), 
        gxmclip.c [1.2] (+11 -13), gxmatrix.h [1.2] (+11 -13), gxlum.h [1.2] (+11 -13), 
        gxline.h [1.2] (+11 -13), gxistate.h [1.6] (+11 -13), gxiscale.c [1.4] (+26 -18), 
        gxipixel.c [1.2] (+32 -28), gxiparam.h [1.2] (+11 -13), 
        gxiodev.h [1.2] (+11 -13), gxino12b.c [1.2] (+11 -13), gximono.c [1.2] (+21 -20), 
        gximage4.c [1.2] (+11 -13), gximage3.h [1.2] (+11 -13), 
        gximage3.c [1.2] (+11 -13), gximage2.c [1.2] (+11 -13), 
        gximage1.c [1.2] (+11 -13), gximage.h [1.2] (+18 -13), gximage.c [1.2] (+11 -13), 
        gximag3x.h [1.2] (+11 -13), gximag3x.c [1.2] (+22 -19), 
        gxifast.c [1.2] (+11 -13), gxidata.c [1.2] (+11 -13), gxicolor.c [1.2] (+11 -13), 
        gxiclass.h [1.2] (+11 -13), gxi12bit.c [1.2] (+11 -13), 
        gxhttype.h [1.2] (+11 -13), gxhttile.h [1.2] (+11 -13), 
        gxhtbit.c [1.2] (+11 -13), gxht.h [1.4] (+11 -13), gxht.c [1.2] (+25 -13), 
        gxhint3.c [1.2] (+11 -13), gxhint2.c [1.2] (+19 -17), gxhint1.c [1.2] (+11 -13), 
        gxgetbit.h [1.2] (+11 -13), gxfunc.h [1.2] (+11 -13), gxftype.h [1.2] (+11 -13), 
        gxfrac.h [1.2] (+11 -13), gxfont42.h [1.2] (+11 -13), gxfont1.h [1.2] (+11 -13), 
        gxfont0.h [1.2] (+11 -13), gxfont.h [1.2] (+21 -14), gxfmap.h [1.2] (+11 -13), 
        gxfixed.h [1.2] (+11 -13), gxfill.c [1.2] (+11 -13), gxfcmap.h [1.2] (+24 -14), 
        gxfcid.h [1.2] (+11 -13), gxfcache.h [1.2] (+12 -13), gxfarith.h [1.2] (+11 -13), 
        gxfapi.h [1.2] (+17 -15), gxfapi.c [1.2] (+28 -29), gxdither.h [1.2] (+11 -13), 
        gxdither.c [1.5] (+11 -13), gxdhtres.h [1.2] (+11 -13), 
        gxdht.h [1.5] (+11 -13), gxdevrop.h [1.2] (+11 -13), gxdevndi.h [1.3] (+11 -13), 
        gxdevndi.c [1.5] (+11 -13), gxdevmem.h [1.5] (+11 -13), 
        gxdevice.h [1.6] (+18 -17), gxdevcli.h [1.7] (+12 -13), 
        gxdevbuf.h [1.2] (+11 -13), gxdda.h [1.2] (+11 -13), gxdcolor.h [1.2] (+11 -13), 
        gxdcolor.c [1.6] (+11 -13), gxdcconv.h [1.2] (+11 -13), 
        gxdcconv.c [1.2] (+11 -13), gxcvalue.h [1.2] (+11 -13), 
        gxctable.h [1.2] (+11 -13), gxctable.c [1.2] (+11 -13), 
        gxcspace.h [1.4] (+11 -13), gxcpath.h [1.2] (+11 -13), gxcpath.c [1.2] (+11 -13), 
        gxcoord.h [1.2] (+11 -13), gxcomp.h [1.2] (+11 -13), gxcolor2.h [1.2] (+11 -13), 
        gxcmap.h [1.6] (+11 -13), gxcmap.c [1.7] (+11 -13), gxclzlib.c [1.2] (+11 -13), 
        gxclutil.c [1.3] (+11 -13), gxclrect.c [1.2] (+11 -13), 
        gxclread.c [1.2] (+11 -13), gxclrast.c [1.6] (+11 -13), 
        gxclpath.h [1.2] (+11 -13), gxclpath.c [1.2] (+11 -13), 
        gxclpage.h [1.2] (+11 -13), gxclpage.c [1.2] (+11 -13), 
        gxclmem.h [1.2] (+11 -13), gxclmem.c [1.2] (+11 -13), gxcllzw.c [1.2] (+11 -13), 
        gxclist.h [1.2] (+11 -13), gxclist.c [1.3] (+11 -13), gxclipsr.h [1.2] (+11 -13), 
        gxclipm.h [1.2] (+11 -13), gxclipm.c [1.3] (+11 -13), gxclip2.h [1.2] (+11 -13), 
        gxclip2.c [1.3] (+11 -13), gxclip.h [1.2] (+11 -13), gxclip.c [1.3] (+11 -13), 
        gxclio.h [1.2] (+11 -13), gxclimag.c [1.3] (+11 -13), gxclfile.c [1.2] (+11 -13), 
        gxcldev.h [1.3] (+11 -13), gxclbits.c [1.2] (+11 -13), gxcindex.h [1.5] (+11 -13), 
        gxcie.h [1.2] (+37 -16), gxcid.h [1.2] (+11 -13), gxcht.c [1.11] (+11 -13), 
        gxchrout.h [1.2] (+11 -13), gxchrout.c [1.2] (+11 -13), 
        gxchar.h [1.2] (+16 -16), gxchar.c [1.2] (+63 -57), gxcdevn.h [1.2] (+11 -13), 
        gxccman.c [1.2] (+11 -13), gxccache.c [1.2] (+11 -13), gxblend.h [1.2] (+11 -13), 
        gxblend.c [1.2] (+11 -13), gxbitops.h [1.2] (+11 -13), gxbitmap.h [1.2] (+33 -17), 
        gxbitfmt.h [1.2] (+11 -13), gxbcache.h [1.2] (+11 -13), 
        gxbcache.c [1.2] (+11 -13), gxband.h [1.2] (+11 -13), gxarith.h [1.2] (+11 -13), 
        gxalpha.h [1.2] (+11 -13), gxalloc.h [1.2] (+11 -13), gxacpath.c [1.3] (+11 -13), 
        gx.h [1.2] (+11 -13), gsxfont.h [1.2] (+11 -13), gswin.rc [1.2] (+11 -13), 
        gsutil.h [1.2] (+12 -13), gsutil.c [1.2] (+15 -15), gsuid.h [1.2] (+11 -13), 
        gstypes.h [1.2] (+11 -13), gstype42.c [1.2] (+25 -36), gstype2.c [1.2] (+33 -25), 
        gstype1.h [1.2] (+11 -13), gstype1.c [1.2] (+24 -24), gstrap.h [1.2] (+11 -13), 
        gstrap.c [1.2] (+11 -13), gstrans.h [1.2] (+11 -13), gstrans.c [1.2] (+11 -13), 
        gstparam.h [1.2] (+11 -13), gstext.h [1.2] (+11 -13), gstext.c [1.2] (+11 -13), 
        gsstype.h [1.2] (+11 -13), gsstruct.h [1.2] (+11 -13), gsstate.h [1.2] (+11 -13), 
        gsstate.c [1.2] (+15 -14), gsshade.h [1.2] (+11 -13), gsshade.c [1.2] (+11 -13), 
        gsroptab.c [1.2] (+11 -13), gsropt.h [1.2] (+11 -13), gsropc.h [1.2] (+11 -13), 
        gsropc.c [1.2] (+11 -13), gsrop.h [1.2] (+11 -13), gsrop.c [1.2] (+11 -13), 
        gsrefct.h [1.2] (+11 -13), gsrect.h [1.2] (+11 -13), gsptype2.h [1.2] (+11 -13), 
        gsptype2.c [1.2] (+11 -13), gsptype1.h [1.2] (+11 -13), 
        gsptype1.c [1.2] (+11 -13), gspmdrv.rc [1.2] (+11 -13), 
        gspmdrv.h [1.2] (+11 -13), gspmdrv.c [1.2] (+11 -13), gspenum.h [1.2] (+11 -13), 
        gspcolor.h [1.2] (+11 -13), gspcolor.c [1.2] (+11 -13), 
        gspath2.h [1.2] (+11 -13), gspath1.c [1.2] (+11 -13), gspath.h [1.2] (+11 -13), 
        gspath.c [1.2] (+12 -14), gsparamx.h [1.2] (+11 -13), gsparamx.c [1.2] (+11 -13), 
        gsparams.h [1.2] (+11 -13), gsparams.c [1.2] (+11 -13), 
        gsparam2.c [1.2] (+11 -13), gsparam.h [1.2] (+11 -13), gsparam.c [1.2] (+11 -13), 
        gspaint.h [1.2] (+11 -13), gspaint.c [1.2] (+11 -13), gsos2.rc [1.2] (+11 -13), 
        gsnotify.h [1.2] (+11 -13), gsnotify.c [1.2] (+11 -13), 
        gsnorop.c [1.2] (+11 -13), gsnogc.h [1.2] (+11 -13), gsnogc.c [1.2] (+11 -13), 
        gsmisc.c [1.3] (+11 -13), gsmemret.h [1.2] (+11 -13), gsmemret.c [1.2] (+11 -13), 
        gsmemraw.h [1.2] (+35 -13), gsmemory.h [1.2] (+18 -13), 
        gsmemory.c [1.2] (+11 -13), gsmemlok.h [1.2] (+11 -13), 
        gsmemlok.c [1.2] (+11 -13), gsmdebug.h [1.2] (+11 -13), 
        gsmatrix.h [1.2] (+11 -13), gsmatrix.c [1.2] (+11 -13), 
        gsmalloc.h [1.2] (+11 -13), gsmalloc.c [1.2] (+21 -17), 
        gslparam.h [1.2] (+11 -13), gsline.h [1.2] (+11 -13), gsline.c [1.2] (+11 -13), 
        gslib.h [1.2] (+11 -13), gslib.c [1.2] (+11 -13), gsjmorec.h [1.2] (+11 -13), 
        gsjconf.h [1.2] (+11 -13), gsistate.c [1.4] (+11 -15), gsiparm4.h [1.2] (+11 -13), 
        gsiparm3.h [1.2] (+11 -13), gsiparm2.h [1.2] (+11 -13), 
        gsiparam.h [1.2] (+11 -13), gsipar3x.h [1.2] (+16 -14), 
        gsiodevs.c [1.2] (+11 -13), gsiodev.c [1.2] (+11 -13), gsio.h [1.2] (+11 -13), 
        gsinit.c [1.2] (+11 -13), gsimpath.c [1.2] (+11 -13), gsimage.h [1.2] (+11 -13), 
        gsimage.c [1.2] (+11 -13), gsicc.h [1.2] (+11 -13), gsicc.c [1.2] (+11 -13), 
        gshtx.h [1.3] (+11 -13), gshtx.c [1.5] (+11 -13), gshtscr.c [1.2] (+11 -13), 
        gsht1.h [1.2] (+11 -13), gsht1.c [1.4] (+11 -13), gsht.h [1.2] (+11 -13), 
        gsht.c [1.5] (+11 -13), gshsb.h [1.2] (+11 -13), gshsb.c [1.2] (+11 -13), 
        gsgdata.h [1.2] (+11 -13), gsgdata.c [1.2] (+11 -13), gsgc.h [1.2] (+11 -13), 
        gsfuncv.h [1.2] (+11 -13), gsfuncv.c [1.2] (+11 -13), gsfunc4.h [1.2] (+11 -13), 
        gsfunc4.c [1.2] (+11 -13), gsfunc3.h [1.2] (+11 -13), gsfunc3.c [1.2] (+11 -13), 
        gsfunc0.h [1.2] (+11 -13), gsfunc0.c [1.2] (+11 -13), gsfunc.h [1.2] (+11 -13), 
        gsfunc.c [1.2] (+11 -13), gsfont0.c [1.2] (+11 -13), gsfont.h [1.2] (+11 -13), 
        gsfont.c [1.2] (+11 -16), gsfname.h [1.2] (+11 -13), gsfname.c [1.2] (+11 -13), 
        gsflip.h [1.2] (+11 -13), gsflip.c [1.2] (+11 -13), gsfemu.c [1.2] (+11 -13), 
        gsfcmap.h [1.2] (+11 -13), gsfcmap.c [1.2] (+12 -14), gsfcid.c [1.2] (+11 -13), 
        gsexit.h [1.2] (+11 -13), gserver.c [1.2] (+18 -18), gserrors.h [1.2] (+11 -13), 
        gserror.h [1.2] (+11 -15), gsdsrc.h [1.2] (+11 -13), gsdsrc.c [1.2] (+11 -13), 
        gsdps1.c [1.2] (+11 -13), gsdps.h [1.2] (+11 -13), gsdps.c [1.2] (+11 -13), 
        gsdpnext.h [1.2] (+11 -13), gsdparam.c [1.4] (+27 -15), 
        gsdllwin.h [1.2] (+11 -13), gsdllos2.h [1.2] (+11 -13), 
        gsdll32.rc [1.2] (+11 -13), gsdll32.def [1.2] (+1 -0), gsdll2.rc [1.2] (+11 -13), 
        gsdll.h [1.2] (+13 -16), gsdll.c [1.2] (+11 -13), gsdfilt.h [1.2] (+16 -13), 
        gsdfilt.c [1.3] (+11 -13), gsdevmem.c [1.2] (+11 -13), gsdevice.h [1.2] (+11 -13), 
        gsdevice.c [1.2] (+11 -15), gsdcolor.h [1.5] (+11 -13), 
        gscssub.h [1.2] (+11 -13), gscssub.c [1.2] (+11 -13), gscspace.h [1.4] (+11 -13), 
        gscspace.c [1.2] (+11 -13), gscsepr.h [1.2] (+11 -13), gscsepr.c [1.4] (+11 -13), 
        gscsel.h [1.2] (+11 -13), gscscie.c [1.2] (+11 -13), gscrypt1.h [1.2] (+11 -13), 
        gscrypt1.c [1.2] (+11 -13), gscrdp.h [1.2] (+11 -13), gscrdp.c [1.2] (+11 -13), 
        gscrd.h [1.2] (+11 -13), gscrd.c [1.2] (+15 -17), gscpm.h [1.2] (+11 -13), 
        gscpixel.h [1.2] (+11 -13), gscpixel.c [1.4] (+11 -13), 
        gscparam.c [1.2] (+11 -13), gscoord.h [1.2] (+11 -13), gscoord.c [1.2] (+11 -13), 
        gscompt.h [1.2] (+11 -13), gscolor3.h [1.2] (+11 -13), gscolor3.c [1.2] (+11 -13), 
        gscolor2.h [1.2] (+11 -13), gscolor2.c [1.2] (+11 -13), 
        gscolor1.h [1.2] (+11 -13), gscolor1.c [1.4] (+11 -14), 
        gscolor.h [1.2] (+11 -13), gscolor.c [1.3] (+11 -13), gsclipsr.h [1.2] (+11 -13), 
        gsclipsr.c [1.2] (+11 -13), gscindex.h [1.2] (+11 -13), 
        gsciemap.c [1.2] (+201 -88), gscie.h [1.2] (+59 -26), gscie.c [1.2] (+302 -77), 
        gschar0.c [1.2] (+11 -13), gschar.h [1.2] (+11 -13), gschar.c [1.2] (+11 -13), 
        gscdevn.h [1.4] (+11 -13), gscdevn.c [1.5] (+11 -13), gscdefs.h [1.2] (+11 -13), 
        gscdef.c [1.2] (+11 -13), gsccolor.h [1.4] (+11 -13), gsccode.h [1.2] (+11 -13), 
        gsbittab.h [1.2] (+11 -13), gsbittab.c [1.2] (+11 -13), 
        gsbitops.h [1.2] (+11 -13), gsbitops.c [1.2] (+11 -13), 
        gsbitmap.h [1.2] (+11 -13), gsbitcom.c [1.2] (+11 -13), 
        gsargs.h [1.2] (+11 -13), gsargs.c [1.2] (+11 -13), gsalphac.h [1.2] (+11 -13), 
        gsalphac.c [1.3] (+11 -13), gsalpha.h [1.2] (+11 -13), gsalpha.c [1.2] (+11 -13), 
        gsalloc.h [1.2] (+11 -13), gsalloc.c [1.2] (+131 -39), gs16spl.rc [1.2] (+11 -13), 
        gs16spl.c [1.2] (+11 -13), gs.mak [1.4] (+23 -18), gs.c [1.2] (+11 -13), 
        gpsync.h [1.2] (+11 -13), gpmisc.h [1.2] (+11 -13), gpmisc.c [1.2] (+11 -13), 
        gpgetenv.h [1.2] (+11 -13), gpcheck.h [1.2] (+11 -13), gp_wsync.c [1.2] (+11 -13), 
        gp_win32.c [1.2] (+11 -13), gp_wgetv.c [1.2] (+11 -13), 
        gp_vms.c [1.2] (+55 -17), gp_unix.c [1.2] (+11 -13), gp_unifs.c [1.2] (+11 -13), 
        gp_unifn.c [1.2] (+43 -17), gp_sysv.c [1.2] (+11 -13), gp_strdl.c [1.2] (+11 -13), 
        gp_stdin.c [1.2] (+11 -13), gp_stdia.c [1.2] (+11 -13), 
        gp_psync.c [1.2] (+11 -13), gp_os9.c [1.2] (+11 -13), gp_os2.c [1.2] (+44 -18), 
        gp_ntfs.c [1.2] (+39 -16), gp_nsync.c [1.2] (+11 -13), gp_mswin.h [1.2] (+11 -13), 
        gp_mswin.c [1.2] (+11 -13), gp_msprn.c [1.2] (+11 -13), 
        gp_mspol.c [1.2] (+11 -13), gp_mslib.c [1.2] (+11 -13), 
        gp_msio.c [1.2] (+11 -13), gp_mshdl.c [1.2] (+11 -13), gp_msdos.c [1.2] (+11 -13), 
        gp_msdll.c [1.2] (+11 -13), gp_mktmp.c [1.2] (+11 -13), 
        gp_macio.c [1.2] (+32 -5), gp_mac.h [1.2] (+12 -13), gp_mac.c [1.2] (+10 -12), 
        gp_iwatc.c [1.2] (+11 -13), gp_getnv.c [1.2] (+11 -13), 
        gp_dvx.c [1.2] (+11 -13), gp_dosfs.c [1.2] (+44 -18), gp_dosfe.c [1.2] (+12 -14), 
        gp.h [1.2] (+19 -16), ghost.h [1.2] (+11 -13), geninit.c [1.2] (+11 -13), 
        genht.c [1.2] (+11 -13), gendev.c [1.2] (+11 -13), genconf.c [1.2] (+11 -13), 
        genarch.c [1.2] (+57 -28), gdevxxf.c [1.2] (+11 -13), gdevxres.c [1.2] (+11 -13), 
        gdevxini.c [1.4] (+11 -13), gdevxcmp.h [1.2] (+11 -13), 
        gdevxcmp.c [1.3] (+11 -13), gdevxcf.c [1.2] (+11 -13), gdevxalt.c [1.3] (+57 -31), 
        gdevx.h [1.2] (+11 -13), gdevx.c [1.2] (+168 -157), gdevwprn.c [1.2] (+11 -13), 
        gdevwpr2.c [1.2] (+11 -13), gdevwdib.c [1.2] (+12 -14), 
        gdevwddb.c [1.2] (+11 -13), gdevvglb.c [1.2] (+11 -13), 
        gdevvec.h [1.2] (+11 -13), gdevvec.c [1.2] (+16 -16), gdevupd.c [1.3] (+12 -14), 
        gdevtrac.c [1.2] (+11 -13), gdevtknk.c [1.3] (+11 -13), 
        gdevtifs.h [1.2] (+11 -13), gdevtifs.c [1.2] (+11 -13), 
        gdevtfnx.c [1.2] (+11 -13), gdevtfax.h [1.2] (+11 -13), 
        gdevtfax.c [1.2] (+11 -13), gdevsvga.h [1.2] (+11 -13), 
        gdevsvga.c [1.2] (+11 -13), gdevsunr.c [1.2] (+11 -13), 
        gdevsun.c [1.2] (+11 -13), gdevstc4.c [1.2] (+11 -13), gdevstc3.c [1.2] (+11 -13), 
        gdevstc2.c [1.2] (+11 -13), gdevstc1.c [1.2] (+11 -13), 
        gdevstc.h [1.2] (+11 -13), gdevstc.c [1.3] (+11 -13), gdevsppr.c [1.2] (+11 -13), 
        gdevsnfb.c [1.2] (+11 -13), gdevsj48.c [1.2] (+11 -13), 
        gdevsco.c [1.2] (+11 -13), gdevs3ga.c [1.2] (+11 -13), gdevrops.c [1.3] (+11 -13), 
        gdevpxut.h [1.2] (+11 -13), gdevpxut.c [1.2] (+11 -13), 
        gdevpxop.h [1.2] (+11 -13), gdevpxen.h [1.2] (+11 -13), 
        gdevpxat.h [1.2] (+11 -13), gdevpx.c [1.2] (+11 -13), gdevpsu.h [1.2] (+11 -13), 
        gdevpsu.c [1.2] (+13 -15), gdevpsim.c [1.2] (+11 -13), gdevpsfx.c [1.2] (+45 -36), 
        gdevpsfu.c [1.2] (+11 -13), gdevpsft.c [1.2] (+112 -42), 
        gdevpsfm.c [1.2] (+23 -20), gdevpsf2.c [1.2] (+11 -13), 
        gdevpsf1.c [1.2] (+11 -13), gdevpsf.h [1.2] (+11 -13), gdevpsdu.c [1.2] (+13 -18), 
        gdevpsds.h [1.2] (+11 -13), gdevpsds.c [1.2] (+11 -13), 
        gdevpsdp.c [1.2] (+12 -14), gdevpsdi.c [1.2] (+11 -17), 
        gdevpsdf.h [1.2] (+11 -13), gdevps.c [1.2] (+17 -14), gdevprna.h [1.2] (+11 -13), 
        gdevprna.c [1.2] (+11 -13), gdevprn.h [1.3] (+11 -13), gdevprn.c [1.4] (+18 -14), 
        gdevppla.h [1.2] (+11 -13), gdevppla.c [1.2] (+11 -13), 
        gdevpnga.c [1.2] (+11 -13), gdevpng.c [1.2] (+11 -13), gdevpm.h [1.2] (+11 -13), 
        gdevpm.c [1.2] (+11 -13), gdevplnx.h [1.2] (+11 -13), gdevplnx.c [1.2] (+11 -13), 
        gdevpjet.c [1.2] (+11 -13), gdevpipe.c [1.2] (+11 -13), 
        gdevphex.c [1.2] (+20 -20), gdevpe.c [1.2] (+11 -13), gdevpdfx.h [1.2] (+20 -16), 
        gdevpdfw.c [1.2] (+11 -13), gdevpdfv.c [1.2] (+11 -13), 
        gdevpdfu.c [1.2] (+27 -26), gdevpdft.c [1.2] (+12 -14), 
        gdevpdfs.c [1.2] (+130 -101), gdevpdfr.c [1.2] (+30 -17), 
        gdevpdfp.c [1.2] (+55 -22), gdevpdfo.h [1.2] (+24 -23), 
        gdevpdfo.c [1.2] (+14 -14), gdevpdfm.c [1.2] (+11 -13), 
        gdevpdfk.c [1.1] (+714 -0), gdevpdfj.c [1.2] (+15 -16), 
        gdevpdfi.c [1.2] (+134 -15), gdevpdfg.h [1.2] (+11 -13), 
        gdevpdfg.c [1.3] (+11 -13), gdevpdff.h [1.2] (+40 -23), 
        gdevpdff.c [1.2] (+70 -45), gdevpdfe.c [1.2] (+84 -58), 
        gdevpdfd.c [1.2] (+11 -13), gdevpdfc.c [1.2] (+382 -394), 
        gdevpdfb.c [1.2] (+11 -13), gdevpdf.c [1.4] (+83 -33), gdevpcx.c [1.2] (+11 -13), 
        gdevpcl.h [1.2] (+11 -13), gdevpcl.c [1.3] (+11 -13), gdevpcfb.h [1.2] (+11 -13), 
        gdevpcfb.c [1.2] (+11 -13), gdevpccm.h [1.2] (+11 -13), 
        gdevpccm.c [1.3] (+11 -13), gdevpbm.c [1.6] (+11 -13), gdevp2up.c [1.2] (+11 -13), 
        gdevp14.h [1.2] (+11 -13), gdevp14.c [1.2] (+26 -134), gdevos2p.c [1.2] (+11 -13), 
        gdevokii.c [1.2] (+11 -13), gdevo182.c [1.2] (+11 -13), 
        gdevnfwd.c [1.4] (+11 -13), gdevn533.c [1.2] (+11 -13), 
        gdevmsxf.c [1.2] (+11 -13), gdevmswn.h [1.2] (+11 -13), 
        gdevmswn.c [1.2] (+11 -13), gdevmrun.h [1.2] (+11 -13), 
        gdevmrun.c [1.2] (+11 -13), gdevmrop.h [1.2] (+11 -13), 
        gdevmr8n.c [1.2] (+11 -13), gdevmr2n.c [1.2] (+11 -13), 
        gdevmr1.c [1.2] (+11 -13), gdevmpla.h [1.2] (+11 -13), gdevmpla.c [1.2] (+11 -13), 
        gdevmiff.c [1.2] (+11 -13), gdevmgr.h [1.2] (+11 -13), gdevmgr.c [1.2] (+11 -13), 
        gdevmem.h [1.4] (+11 -13), gdevmem.c [1.5] (+11 -13), gdevmeds.h [1.2] (+11 -13), 
        gdevmeds.c [1.2] (+11 -13), gdevmacxf.c [1.2] (+12 -13), 
        gdevmacttf.h [1.2] (+6 -0), gdevmacpictop.h [1.2] (+7 -0), 
        gdevmac.h [1.2] (+11 -12), gdevmac.c [1.2] (+9 -1), gdevm8.c [1.2] (+11 -13), 
        gdevm64.c [1.4] (+11 -13), gdevm56.c [1.4] (+11 -13), gdevm48.c [1.5] (+11 -13), 
        gdevm40.c [1.5] (+11 -13), gdevm4.c [1.2] (+11 -13), gdevm32.c [1.2] (+11 -13), 
        gdevm24.c [1.2] (+11 -13), gdevm2.c [1.2] (+11 -13), gdevm16.c [1.3] (+11 -13), 
        gdevm1.c [1.3] (+11 -13), gdevlxm.c [1.2] (+11 -13), gdevlp8k.c [1.2] (+11 -13), 
        gdevlj56.c [1.2] (+11 -13), gdevlbp8.c [1.2] (+11 -13), 
        gdevl31s.c [1.2] (+11 -13), gdevl256.c [1.2] (+11 -13), 
        gdevjpeg.c [1.2] (+11 -13), gdevimgn.c [1.2] (+11 -13), 
        gdevijs.c [1.1] (+1079 -0), gdevht.h [1.2] (+11 -13), gdevht.c [1.4] (+11 -13), 
        gdevhpij.h [1.2] (+1 -0), gdevhpij.c [1.2] (+8 -7), gdevhl7x.c [1.2] (+16 -18), 
        gdevhit.c [1.2] (+11 -13), gdevherc.c [1.2] (+11 -13), gdevfax.h [1.2] (+11 -13), 
        gdevfax.c [1.2] (+11 -13), gdevevga.c [1.2] (+11 -13), gdevescp.c [1.2] (+11 -13), 
        gdevepsn.c [1.2] (+11 -13), gdevepsc.c [1.3] (+11 -13), 
        gdevemap.c [1.2] (+11 -13), gdevegaa.asm [1.2] (+11 -13), 
        gdevdsp2.h [1.2] (+16 -19), gdevdsp.h [1.2] (+17 -18), gdevdsp.c [1.7] (+13 -15), 
        gdevdrop.c [1.2] (+11 -13), gdevdm24.c [1.2] (+11 -13), 
        gdevdjtc.c [1.2] (+11 -13), gdevdgbr.c [1.3] (+11 -13), 
        gdevdflt.c [1.5] (+11 -13), gdevdfax.c [1.2] (+11 -13), 
        gdevdevn.c [1.5] (+11 -13), gdevddrw.c [1.2] (+11 -13), 
        gdevdcrd.h [1.2] (+11 -13), gdevdcrd.c [1.2] (+11 -13), 
        gdevdbit.c [1.3] (+11 -13), gdevcslw.c [1.2] (+11 -13), 
        gdevcp50.c [1.2] (+11 -13), gdevcmap.h [1.2] (+11 -13), 
        gdevcmap.c [1.5] (+11 -13), gdevcljc.c [1.2] (+11 -13), 
        gdevclj.c [1.2] (+11 -13), gdevcif.c [1.2] (+11 -13), gdevcgmx.h [1.2] (+11 -13), 
        gdevcgml.h [1.2] (+11 -13), gdevcgml.c [1.2] (+11 -13), 
        gdevcgm.c [1.2] (+17 -13), gdevcfax.c [1.2] (+11 -13), gdevcdj.c [1.3] (+22 -23), 
        gdevccr.c [1.2] (+11 -13), gdevbmpc.c [1.3] (+11 -13), gdevbmpa.c [1.2] (+11 -13), 
        gdevbmp.h [1.2] (+11 -13), gdevbmp.c [1.2] (+11 -13), gdevbjcl.h [1.2] (+14 -16), 
        gdevbjcl.c [1.2] (+11 -13), gdevbjc.h [1.2] (+11 -13), gdevbj10.c [1.2] (+11 -13), 
        gdevbit.c [1.3] (+11 -13), gdevbbox.h [1.2] (+11 -13), gdevbbox.c [1.3] (+16 -147), 
        gdevalph.c [1.2] (+11 -13), gdevadmp.c [1.2] (+11 -13), 
        gdevabuf.c [1.3] (+11 -13), gdev8bcm.h [1.2] (+11 -13), 
        gdev8bcm.c [1.2] (+11 -13), gdev8510.c [1.2] (+11 -13), 
        gdev4081.c [1.2] (+11 -13), gdev3b1.c [1.2] (+11 -13), gdev3852.c [1.2] (+11 -13), 
        gdebug.h [1.2] (+11 -13), gconf.h [1.2] (+11 -13), gconf.c [1.2] (+11 -13), 
        files.h [1.2] (+11 -13), fcntl_.h [1.2] (+11 -13), fapiufst.c [1.2] (+401 -262), 
        estack.h [1.2] (+73 -33), errors.h [1.2] (+11 -13), errno_.h [1.2] (+11 -13), 
        echogs.c [1.2] (+11 -13), dxmainc.c [1.2] (+11 -14), dxmain.c [1.2] (+11 -13), 
        dwuninst.rc [1.2] (+11 -13), dwuninst.h [1.2] (+17 -13), 
        dwuninst.cpp [1.2] (+11 -13), dwtrace.h [1.1] (+23 -0), 
        dwtrace.c [1.1] (+338 -0), dwtext.h [1.2] (+17 -13), dwtext.c [1.2] (+11 -13), 
        dwsetup.rc [1.2] (+11 -13), dwsetup.h [1.2] (+16 -13), dwsetup.cpp [1.2] (+11 -13), 
        dwreg.h [1.2] (+13 -13), dwreg.c [1.2] (+11 -13), dwnodll.c [1.2] (+11 -12), 
        dwmainc.c [1.2] (+23 -13), dwmain.rc [1.2] (+11 -13), dwmain.h [1.2] (+16 -13), 
        dwmain.c [1.2] (+23 -13), dwinst.h [1.2] (+16 -13), dwinst.cpp [1.2] (+11 -13), 
        dwimg.h [1.2] (+13 -13), dwimg.c [1.2] (+21 -17), dwdll.h [1.2] (+12 -13), 
        dwdll.c [1.2] (+19 -13), dvx-tail.mak [1.2] (+11 -13), dvx-head.mak [1.2] (+11 -13), 
        dvx-gcc.mak [1.2] (+25 -13), dstack.h [1.2] (+11 -13), dscparse.h [1.2] (+16 -13), 
        dscparse.c [1.2] (+12 -14), dpmain.c [1.2] (+11 -13), dos_.h [1.2] (+11 -13), 
        dirent_.h [1.2] (+11 -13), devs.mak [1.7] (+31 -17), ctype_.h [1.2] (+11 -13), 
        contrib.mak [1.2] (+11 -13), cfonts.mak [1.2] (+11 -13), 
        ccgs [1.2] (+1 -1), ccfont.h [1.2] (+11 -13), btoken.h [1.2] (+11 -13), 
        bfont.h [1.2] (+11 -14), bench.c [1.2] (+11 -13), bcwin32.mak [1.2] (+18 -13), 
        all-arch.mak [1.2] (+11 -13), .cvsignore [1.1] (+1 -0):
        merges GS head.  This will not compile because pdf changes have not
        been added.  Please wait until the pdf changes are added before
        updating local trees.
        

Sat Mar  2 05:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcht.c [1.10] (+9 -5):
        This is an optimization which reduces the number of encode_color calls
        required when halftoning 5 or more components.
        

Thu Feb 28 00:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcindex.h [1.4] (+12 -10):
        The value of gx_no_color_index was being forced to be a 'long' value
        instead of matching the size of gx_color_index.  Change it to use gx_color_index
        as its type.  (May create a problem on Irix 5.2.)
        

Wed Feb 27 08:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcht.c [1.9] (+46 -48):
        Now the halftoning will work with almost any number of components.
        

Wed Feb 27 02:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcht.c [1.8] (+6 -5):
        THis fix corrects the halftone hander which is used to handle more than four
        components.  It ws not correctly handling the mixture of a fully saturated
        component and some halftoned components.  (Worked with zero value components.)
        

Thu Feb 21 07:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcht.c [1.7] (+13 -6):
        This corrects a problem with some magenta coloring around the muzzle of
        the tiger.eps file when using the pcxcmyk device.
        
        Note:  There is still some stuff to check.  This fix primarily uses
        special code for 1 bit cmyk colors (same as previous versions of GS).
        The non 1 bit routines should produce the same result do not.
        

Thu Feb 21 04:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcht.c [1.6] (+16 -38):
        Corrected problems in set_ht_colors_le_4 which was preventing it from
        compiling.  This is the halftoner for non single bit 4 or less components.
        

Tue Feb 19 05:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * unix-gcc.mak [1.5] (+3 -8), gdevm48.c [1.4] (+2 -2):
        The pixel size was incorrectly set to 3 instead of six (jan).  Adds
        CPPFLAG define for the long long so it works properly with raph's xcf
        device.
        

Tue Feb 19 05:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxcht.c [1.5] (+13 -14):
        Corrects a problem with an unknown error being returned in 'fill' when
        drawing tiger.ps using the pcxcmyk device.  Some of the color halfoning
        code is disabled because it is not compatible with the devicen device
        color mapping routines.  This fix corrects some of these problems.
        
        
        Note:  There are still more problems in this module related to the DeviceN
        implementation.  There are many places that that assume 3 or 4 colors
        only.
        
        * gdevm40.c [1.4] (+2 -2):
        Matching change to the change in gdevm48.c.  Changed a hard coded value
        of 3 for the pixel size to PIXEL_SIZE.  The 3 was a holdover from code
        copied from gdevm24.c.  Note: gdevm56.c and gdevm64.c are already
        correct.
        

Fri Feb 15 06:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxdevcli.h [1.6] (+1 -13):
        Removed unnecessary and incorrect dci_deviceN macros that had been
        previously inserted.  As per request for Jan. S.
        

Tue Feb 12 18:00:00 2002 GMT        Raph Levine    raph@meerkat

        * gdevxcf.c [1.1] (+1047 -0), devs.mak [1.6] (+12 -1):
        Adds an "xcf" device, which generates Gimp XCF file format, with
        additional channels for DeviceN separations.
        

Tue Feb 12 07:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxdevndi.c [1.4] (+83 -25), gxdcolor.c [1.5] (+7 -40), 
        gxcmap.c [1.6] (+23 -41), gxclrast.c [1.5] (+3 -1), gsdcolor.h [1.4] (+3 -21), 
        gdevdsp.c [1.6] (+2 -1):
        This commit enables halftoning.  Note:  The module gsdevndi.c contains
        the interface for setting up a halftone.
        
        Also corrects a problem with purple tigers caused by changes in gdevdsp.c
        in the last commit.
        

Sat Feb  2 22:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxdht.h [1.4] (+1 -6), gxdevndi.c [1.3] (+2 -2), gxcht.c [1.4] (+10 -10), 
        gsht.c [1.4] (+36 -21), gdevdsp.c [1.5] (+1 -0), devs.mak [1.5] (+2 -2):
        This commit creates a halftone array in the imager state which contains
        one halftone (and transfer function) for each device colorant.
        

Thu Jan 24 06:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * unix-gcc.mak [1.4] (+3 -3), gdevtknk.c [1.2] (+6 -2), 
        gdevstc.c [1.2] (+29 -17), gdev4693.c [1.2] (+5 -3):
        more color operand fixes from the MSVC build as reported by Dan.  This
        snapshot compiles with msvc ver 6.0.
        

Thu Jan 24 01:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * unix-gcc.mak [1.3] (+2 -2), gxdevice.h [1.5] (+2 -1), 
        gdevepsc.c [1.2] (+11 -11), gdevdsp.c [1.4] (+36 -26):
        missed color encoding operand changes.  These devices were not
        dependencies in the unix gcc build.  Adds epson device (back) to gcc
        makefile.  It is unclear why the epson devices were removed.
        

Wed Jan 23 21:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * zfcmap.c [1.2] (+5 -2), zfcid0.c [1.2] (+8 -2), zdpnext.c [1.2] (+26 -16), 
        unix-gcc.mak [1.2] (+10 -4), msvc32.mak [1.4] (+2 -2), gxdevice.h [1.4] (+13 -7), 
        gxdevcli.h [1.5] (+77 -74), gxcmap.h [1.5] (+4 -36), gxcmap.c [1.5] (+63 -253), 
        gxcht.c [1.3] (+10 -9), gsdfilt.c [1.2] (+6 -2), gsalphac.c [1.2] (+3 -4), 
        gdevxcmp.c [1.2] (+5 -3), gdevxalt.c [1.2] (+25 -21), gdevupd.c [1.2] (+25 -17), 
        gdevpcl.c [1.2] (+4 -3), gdevpccm.c [1.2] (+10 -7), gdevpbm.c [1.5] (+13 -15), 
        gdevnfwd.c [1.3] (+9 -12), gdevmem.c [1.4] (+10 -10), gdevm16.c [1.2] (+5 -6), 
        gdevm1.c [1.2] (+5 -10), gdevdgbr.c [1.2] (+2 -2), gdevdflt.c [1.4] (+135 -33), 
        gdevdevn.c [1.4] (+6 -5), gdevdbit.c [1.2] (+2 -3), gdevcdj.c [1.2] (+35 -34), 
        gdevbmpc.c [1.2] (+5 -3), gdevbit.c [1.2] (+14 -16), gdevabuf.c [1.2] (+8 -5), 
        devs.mak [1.4] (+2 -2):
        devs.mak - adds missing dependencies for devicen device.
        gdevabuf.c: - color encoding operand changes.
        gdevbit.c - color encoding operand changes.
        gdevbmp.c - color encoding operand changes.
        gdevcdj.c - color encoding operand changes.
        gdevdbit.c - color encoding operand changes.
        gdevdevn.c - replaces obsolete encoding flags with linear and seperable boolean.
        gdevdflt.c - Initialization with new color mapping defaults and color info
                     structure initialization (orimp spec.)
        
          TODO:
           initialization of component shift, mask, and bits should be moved.
           gx_default_DevCMY_get_color_mapping_procs() and
           gx_default_DevCMY_get_color_comp_index not implemented - currently
           prints a debugging warning.
        
        gdevdgbr.c - color encoding operand changes.
        gdevm1.c  - color encoding operand changes.
        gdevm16.c - color encoding operand changes.
        gdevmem.c - color encoding operand changes.
        gdevnfwd.c - color encoding operand changes.
        gdevpbm.c - color encoding operand changes.
        gdevpccm.c - color encoding operand changes.
        gdevpcl.c - color encoding operand changes.
        gdevupd.c - color encoding operand changes.
        gdevxalt.c - color encoding operand changes.
        gdevcmap.c - color encoding operand changes.
        gsalphac.c - color encoding operand changes.
        gsdfilt.c - color encoding operand changes.
        gxcht.c - color encoding operand changes.
                - removes #ifdef SLOW_CODE nonsense.
                - incomplete needs work.
        
        gxcmap.c - adds gx_default_encode_color() and
                   gx_default_decode_color() from the ORIMP spec. and removes
                   debug mapping procedures.
                 - Many of the color mapping procedures redefined to use the
                   default encode and decode.  Several procedures removed
                   entirely because they are obsolete with other interface
                   changes.
                 - color encoding operand changes.
                 - code cleanup... unused variables removed, etc.
        
        gxcmap.h - removes color mapping debug procedures.
                 - adds prototype for the default encode procedure.
                 - removes default gray, cmyk and rgb encode prototypes.
        
        gdevcli.h - color info modifications from the orimp spec.
                  - removes obsolete encoding flags.
                  - modifies the swarm of macros to support linear and
                  - separable and deprecate encoding flags and initialiazion
                    for component bits shift and mask.
                  - color encoding operand changes.
        
        gxdevice.h - removed obsolete encode and decoding procedure
                     prototypes.  Remaps default rgb_color and color_rgb to new default
                     encode and decode procedures.
        
        msvc32.mak and unix-gcc.mak
                   - removes pdfwrite device for color mapping doesn't work
                     with new color mapping, device not scheduled for first
                     devicen release.  unix-gcc.mak now has the long long hack, like msvc32.mak
                   - -O0 for debug *NOT* -O.
                   - removes -Wtraditional, can't find real warnings in the
                     sea of messages.
                   - adds devicen devices to unix-gcc.mak
        zpdnext.c  - color encoding mapping changes.
        zfcid0.c &amp; zfcmap.c
                   - #ifdefs out profile and debugging code which should not be in
                     this module as it depends on the pdfwrite device.
        

Tue Jan 22 08:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gshtx.c [1.4] (+1 -2):
        Correct a line missed in the previous commit.
        

Tue Jan 22 07:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * zht2.c [1.3] (+91 -57), zgstate.c [1.3] (+2 -2), lib.mak [1.5] (+2 -2), 
        igstate.h [1.3] (+1 -2), gzht.h [1.3] (+28 -3), gxistate.h [1.5] (+9 -6), 
        gxht.h [1.3] (+3 -2), gxdht.h [1.3] (+3 -2), gxclrast.c [1.4] (+2 -3), 
        gshtx.c [1.3] (+3 -4), gsht1.c [1.3] (+9 -20), gsht.c [1.3] (+139 -86), 
        gscolor1.c [1.3] (+13 -3):
        This is a first pass at implementing the transfer functions in the DeviceN
        code.  This version still has the 'color_indices' array.  This should be
        removed shortly.
        

Fri Jan 11 09:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gsmisc.c [1.2] (+2 -2):
        ilog2() had a misplaced parenthesis.  Results that were multiples of
        4, (like ilog2(16) and ilog2(256)) returned 0.  This should get fixed
        in the main gs tree as well.
        

Tue Jan  8 00:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gxistate.h [1.4] (+9 -6), gsistate.c [1.3] (+7 -1):
        
        Correct GC enumeration and relocation for the trans_comp and effectivei
        transfer elements of the graphics state.
        

Fri Jan  4 21:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * gscsepnm.h [1.2] (+1 -1):
        Removed gscsepnm.h.  This file is no longer used.  It was used to describe
        separation names for the standard colors (G, RGB, and CMYK).  The DeviceN
        effort now allows for any color name.
        

Fri Jan  4 08:00:00 2002 GMT        August Daniel Coby    dan@meerkat

        * zht2.c [1.2] (+94 -63), zht1.c [1.2] (+2 -2), zht.c [1.2] (+32 -17), 
        zgstate.c [1.2] (+26 -2), zcsdevn.c [1.4] (+10 -23), zcolor1.c [1.2] (+17 -17), 
        zcolor.c [1.2] (+10 -8), lib.mak [1.4] (+5 -6), iutil.c [1.2] (+2 -1), 
        int.mak [1.2] (+3 -3), igstate.h [1.2] (+5 -7), gzht.h [1.2] (+2 -2), 
        gxstate.h [1.2] (+7 -1), gxistate.h [1.3] (+17 -15), gxht.h [1.2] (+3 -3), 
        gxdither.c [1.4] (+3 -1), gxdht.h [1.2] (+10 -10), gxdevmem.h [1.4] (+5 -1), 
        gxdevice.h [1.3] (+3 -3), gxdevcli.h [1.4] (+17 -7), gxdcolor.c [1.4] (+2 -5), 
        gxcmap.h [1.4] (+6 -6), gxcmap.c [1.4] (+94 -60), gxclrast.c [1.3] (+12 -8), 
        gxclimag.c [1.2] (+7 -1), gxcht.c [1.2] (+12 -1), gsistate.c [1.2] (+26 -23), 
        gshtx.h [1.2] (+11 -11), gshtx.c [1.2] (+13 -1), gsht1.c [1.2] (+21 -11), 
        gsht.c [1.2] (+100 -63), gscolor1.c [1.2] (+4 -4), gscolor.c [1.2] (+15 -12), 
        gscdevn.c [1.4] (+3 -3), gdevpdfg.c [1.2] (+7 -1), gdevpbm.c [1.4] (+2 -2), 
        gdevm64.c [1.3] (+7 -7), gdevm56.c [1.3] (+8 -8), gdevm48.c [1.3] (+5 -5), 
        gdevm40.c [1.3] (+8 -8), gdevht.c [1.3] (+2 -2), gdevdevn.c [1.3] (+2 -2), 
        gdevcmap.c [1.4] (+14 -3):
        1.  Various fixes for the first update based upon comments from Orimp.
        2.  First pass at getting the transfer functions (and some of the half
            tones) based upon the colorant names.  Note:  This still does not
            work but we want to get a first pass into CVS.
        

Sat Dec  8 01:00:00 2001 GMT        August Daniel Coby    dan@meerkat

        * gspcmodl.h [1.2] (+1 -1), gspcmodl.c [1.2] (+1 -1):
        
        These modules are no longer required after the conversion to compliance
        with the Orimp specification.  The code that was in these modules was
        either made obsolete or moved to other modules.
        

Fri Nov 30 00:00:00 2001 GMT        August Daniel Coby    dan@meerkat

        * zcsdevn.c [1.3] (+2 -19), zcolor2.c [1.3] (+4 -1), winlib.mak [1.3] (+1 -1), 
        msvc32.mak [1.3] (+1 -1), lib.mak [1.3] (+7 -16), gxpcmap.c [1.2] (+10 -1), 
        gxistate.h [1.2] (+13 -0), gxiscale.c [1.3] (+2 -2), gxdither.c [1.3] (+7 -1), 
        gxdevndi.h [1.2] (+43 -43), gxdevndi.c [1.2] (+148 -144), 
        gxdevmem.h [1.3] (+1 -1), gxdevice.h [1.2] (+11 -0), gxdevcli.h [1.3] (+265 -54), 
        gxdcolor.c [1.3] (+39 -19), gxcspace.h [1.3] (+2 -2), gxcmap.h [1.3] (+159 -12), 
        gxcmap.c [1.3] (+465 -519), gxclutil.c [1.2] (+152 -91), 
        gxclrast.c [1.2] (+80 -58), gxclist.c [1.2] (+10 -1), gxclipm.c [1.2] (+10 -1), 
        gxclip2.c [1.2] (+10 -1), gxclip.c [1.2] (+10 -1), gxcldev.h [1.2] (+9 -15), 
        gxcindex.h [1.3] (+1 -1), gxacpath.c [1.2] (+10 -1), gsdparam.c [1.3] (+13 -15), 
        gsdcolor.h [1.3] (+12 -7), gscspace.h [1.3] (+1 -9), gscsepr.c [1.3] (+2 -2), 
        gscpixel.c [1.3] (+1 -1), gscdevn.h [1.3] (+2 -2), gscdevn.c [1.3] (+22 -35), 
        gsccolor.h [1.3] (+1 -1), gs.mak [1.3] (+1 -1), gdevxini.c [1.3] (+5 -5), 
        gdevrops.c [1.2] (+10 -1), gdevprn.h [1.2] (+16 -0), gdevprn.c [1.3] (+5 -5), 
        gdevpdf.c [1.3] (+6 -6), gdevpbm.c [1.3] (+3 -3), gdevnfwd.c [1.2] (+60 -2), 
        gdevmem.h [1.3] (+1 -1), gdevmem.c [1.3] (+1 -1), gdevm64.c [1.2] (+430 -430), 
        gdevm56.c [1.2] (+527 -527), gdevm48.c [1.2] (+472 -472), 
        gdevm40.c [1.2] (+503 -503), gdevht.c [1.2] (+10 -1), gdevdsp.c [1.3] (+8 -7), 
        gdevdflt.c [1.3] (+33 -7), gdevdevn.c [1.2] (+1302 -1174), 
        gdevcmap.c [1.3] (+3 -2), gdevbbox.c [1.2] (+14 -2), devs.mak [1.3] (+3 -3):
        Check in of first pass at DeviceN color complaint with Orimp spec.
        

Thu Nov  1 03:00:00 2001 GMT        Henry Stiles    henrys@meerkat

        * zcsdevn.c [1.2] (+40 -3), zcolor2.c [1.2] (+6 -61), winlib.mak [1.2] (+7 -1), 
        msvc32.mak [1.2] (+8 -1), lib.mak [1.2] (+41 -9), gxiscale.c [1.2] (+2 -2), 
        gxdither.c [1.2] (+6 -4), gxdevndi.h [1.1] (+43 -0), gxdevndi.c [1.1] (+144 -0), 
        gxdevmem.h [1.2] (+22 -2), gxdevcli.h [1.2] (+46 -1), gxdcolor.c [1.2] (+16 -1), 
        gxcspace.h [1.2] (+3 -3), gxcmap.h [1.2] (+19 -1), gxcmap.c [1.2] (+338 -40), 
        gxcindex.h [1.2] (+7 -2), gspcmodl.h [1.1] (+160 -0), gspcmodl.c [1.1] (+333 -0), 
        gsdparam.c [1.2] (+20 -16), gsdcolor.h [1.2] (+5 -1), gscspace.h [1.2] (+10 -1), 
        gscsepr.c [1.2] (+2 -2), gscpixel.c [1.2] (+2 -2), gscdevn.h [1.2] (+8 -1), 
        gscdevn.c [1.2] (+141 -47), gsccolor.h [1.2] (+2 -2), gs.mak [1.2] (+6 -3), 
        gdevxini.c [1.2] (+5 -1), gdevprn.c [1.2] (+5 -1), gdevpdf.c [1.2] (+12 -2), 
        gdevpbm.c [1.2] (+3 -3), gdevmem.h [1.2] (+13 -1), gdevmem.c [1.2] (+16 -8), 
        gdevm64.c [1.1] (+430 -0), gdevm56.c [1.1] (+527 -0), gdevm48.c [1.1] (+472 -0), 
        gdevm40.c [1.1] (+503 -0), gdevdsp.c [1.2] (+10 -1), gdevdflt.c [1.2] (+9 -1), 
        gdevdevn.c [1.1] (+1174 -0), gdevcmap.c [1.2] (+2 -2), devs.mak [1.2] (+20 -3):
        merge of devicen development branch - author Dan Coby
        

Wed Oct 31 23:00:00 2001 GMT        Henry Stiles    henrys@meerkat

        * zvmem2.c [1.1] (+156 -0), zvmem.c [1.1] (+400 -0), zusparam.c [1.1] (+653 -0), 
        zupath.c [1.1] (+677 -0), ztype.c [1.1] (+523 -0), ztrap.c [1.1] (+67 -0), 
        ztrans.c [1.1] (+427 -0), ztoken.c [1.1] (+375 -0), zsysvm.c [1.1] (+160 -0), 
        zstring.c [1.1] (+191 -0), zstack.c [1.1] (+301 -0), zshade.c [1.1] (+611 -0), 
        zrop.c [1.1] (+115 -0), zrelbit.c [1.1] (+360 -0), zpcolor.c [1.1] (+260 -0), 
        zpath1.c [1.1] (+281 -0), zpath.c [1.1] (+179 -0), zpaint.c [1.1] (+87 -0), 
        zpacked.c [1.1] (+258 -0), zmisc3.c [1.1] (+148 -0), zmisc2.c [1.1] (+286 -0), 
        zmisc1.c [1.1] (+173 -0), zmisc.c [1.1] (+365 -0), zmedia2.c [1.1] (+468 -0), 
        zmatrix.c [1.1] (+363 -0), zmath.c [1.1] (+281 -0), zlib.mak [1.1] (+151 -0), 
        ziodevsc.c [1.1] (+308 -0), ziodevs.c [1.1] (+257 -0), ziodev2.c [1.1] (+130 -0), 
        ziodev.c [1.1] (+301 -0), zimage3.c [1.1] (+137 -0), zimage2.c [1.1] (+174 -0), 
        zimage.c [1.1] (+521 -0), zicc.c [1.1] (+165 -0), zht2.c [1.1] (+431 -0), 
        zht1.c [1.1] (+151 -0), zht.c [1.1] (+262 -0), zhsb.c [1.1] (+64 -0), 
        zgstate.c [1.1] (+545 -0), zgeneric.c [1.1] (+612 -0), zfzlib.c [1.1] (+106 -0), 
        zfunc4.c [1.1] (+298 -0), zfunc3.c [1.1] (+116 -0), zfunc0.c [1.1] (+97 -0), 
        zfunc.c [1.1] (+263 -0), zfrsd.c [1.1] (+257 -0), zfproc.c [1.1] (+408 -0), 
        zfont42.c [1.1] (+343 -0), zfont32.c [1.1] (+73 -0), zfont2.c [1.1] (+119 -0), 
        zfont1.c [1.1] (+359 -0), zfont0.c [1.1] (+341 -0), zfont.c [1.1] (+552 -0), 
        zfmd5.c [1.1] (+46 -0), zfilterx.c [1.1] (+329 -0), zfilter2.c [1.1] (+161 -0), 
        zfilter.c [1.1] (+435 -0), zfileio.c [1.1] (+1010 -0), zfile.c [1.1] (+1108 -0), 
        zfdecode.c [1.1] (+354 -0), zfdcte.c [1.1] (+144 -0), zfdctd.c [1.1] (+101 -0), 
        zfcmap.c [1.1] (+496 -0), zfcid1.c [1.1] (+262 -0), zfcid0.c [1.1] (+548 -0), 
        zfcid.c [1.1] (+80 -0), zfbcp.c [1.1] (+93 -0), zfarc4.c [1.1] (+93 -0), 
        zfapi.c [1.1] (+992 -0), zdscpars.c [1.1] (+486 -0), zdps1.c [1.1] (+484 -0), 
        zdps.c [1.1] (+280 -0), zdpnext.c [1.1] (+479 -0), zdouble.c [1.1] (+539 -0), 
        zdosio.c [1.1] (+110 -0), zdict.c [1.1] (+504 -0), zdfilter.c [1.1] (+97 -0), 
        zdevice2.c [1.1] (+372 -0), zdevice.c [1.1] (+447 -0), zdevcal.c [1.1] (+73 -0), 
        zcssepr.c [1.1] (+236 -0), zcspixel.c [1.1] (+58 -0), zcsindex.c [1.1] (+203 -0), 
        zcsdevn.c [1.1] (+306 -0), zcrd.c [1.1] (+454 -0), zcontrol.c [1.1] (+955 -0), 
        zcontext.c [1.1] (+1302 -0), zcolor2.c [1.1] (+315 -0), 
        zcolor1.c [1.1] (+218 -0), zcolor.c [1.1] (+262 -0), zcie.c [1.1] (+691 -0), 
        zcid.c [1.1] (+52 -0), zcharx.c [1.1] (+166 -0), zcharout.c [1.1] (+385 -0), 
        zchar42.c [1.1] (+175 -0), zchar32.c [1.1] (+213 -0), zchar2.c [1.1] (+43 -0), 
        zchar1.c [1.1] (+1058 -0), zchar.c [1.1] (+793 -0), zcfont.c [1.1] (+155 -0), 
        zbseq.c [1.1] (+153 -0), zbfont.c [1.1] (+674 -0), zarray.c [1.1] (+129 -0), 
        zarith.c [1.1] (+415 -0), x_.h [1.1] (+175 -0), wmin.mak [1.1] (+61 -0), 
        winplat.mak [1.1] (+51 -0), winlib.mak [1.1] (+191 -0), 
        winint.mak [1.1] (+280 -0), windows_.h [1.1] (+50 -0), wctail.mak [1.1] (+94 -0), 
        wccommon.mak [1.1] (+232 -0), watcw32.mak [1.1] (+501 -0), 
        watclib.mak [1.1] (+174 -0), watc.mak [1.1] (+331 -0), vmsmath.h [1.1] (+43 -0), 
        vms_x_fix.h [1.1] (+889 -0), version.mak [1.1] (+31 -0), 
        unixtrad.mak [1.1] (+395 -0), unixlink.mak [1.1] (+77 -0), 
        unixinst.mak [1.1] (+151 -0), unixhead.mak [1.1] (+87 -0), 
        unixansi.mak [1.1] (+393 -0), unix-gcc.mak [1.1] (+458 -0), 
        unix-end.mak [1.1] (+80 -0), unix-dll.mak [1.1] (+133 -0), 
        unix-aux.mak [1.1] (+95 -0), unistd_.h [1.1] (+48 -0), ugcclib.mak [1.1] (+157 -0), 
        turboc.cfg [1.1] (+5 -0), time_.h [1.1] (+95 -0), szlibxx.h [1.1] (+67 -0), 
        szlibx.h [1.1] (+58 -0), szlibe.c [1.1] (+101 -0), szlibd.c [1.1] (+105 -0), 
        szlibc.c [1.1] (+131 -0), string_.h [1.1] (+45 -0), strimpl.h [1.1] (+168 -0), 
        stream.h [1.1] (+406 -0), stream.c [1.1] (+1214 -0), store.h [1.1] (+264 -0), 
        stdpre.h [1.1] (+470 -0), stdio_.h [1.1] (+73 -0), std.h [1.1] (+319 -0), 
        stat_.h [1.1] (+98 -0), sstring.h [1.1] (+76 -0), sstring.c [1.1] (+458 -0), 
        srlx.h [1.1] (+72 -0), srle.c [1.1] (+197 -0), srld.c [1.1] (+127 -0), 
        srdline.h [1.1] (+50 -0), spsdf.h [1.1] (+87 -0), spsdf.c [1.1] (+268 -0), 
        spprint.h [1.1] (+83 -0), spprint.c [1.1] (+201 -0), spngpx.h [1.1] (+58 -0), 
        spngp.c [1.1] (+386 -0), spdiffx.h [1.1] (+56 -0), spdiff.c [1.1] (+479 -0), 
        smtf.h [1.1] (+44 -0), smtf.c [1.1] (+178 -0), smd5.h [1.1] (+42 -0), 
        smd5.c [1.1] (+65 -0), slzwx.h [1.1] (+79 -0), slzwd.c [1.1] (+406 -0), 
        slzwce.c [1.1] (+161 -0), slzwc.c [1.1] (+44 -0), sjpege.c [1.1] (+118 -0), 
        sjpegd.c [1.1] (+89 -0), sjpegc.c [1.1] (+243 -0), sjpeg.h [1.1] (+75 -0), 
        sisparam.h [1.1] (+75 -0), siscale.h [1.1] (+30 -0), siscale.c [1.1] (+632 -0), 
        siinterp.h [1.1] (+30 -0), siinterp.c [1.1] (+261 -0), shcgen.h [1.1] (+55 -0), 
        shcgen.c [1.1] (+485 -0), shc.h [1.1] (+258 -0), shc.c [1.1] (+68 -0), 
        sfxstdio.c [1.1] (+304 -0), sfxfd.c [1.1] (+384 -0), sfxboth.c [1.1] (+25 -0), 
        sfilter2.c [1.1] (+265 -0), sfilter1.c [1.1] (+310 -0), 
        sfilter.h [1.1] (+108 -0), seexec.c [1.1] (+213 -0), sdeparam.c [1.1] (+314 -0), 
        sddparam.c [1.1] (+72 -0), sdcte.c [1.1] (+207 -0), sdctd.c [1.1] (+292 -0), 
        sdctc.c [1.1] (+47 -0), sdct.h [1.1] (+148 -0), sdcparam.h [1.1] (+51 -0), 
        sdcparam.c [1.1] (+620 -0), scommon.h [1.1] (+170 -0), scfx.h [1.1] (+128 -0), 
        scfparam.c [1.1] (+93 -0), scfetab.c [1.1] (+165 -0), scfe.c [1.1] (+530 -0), 
        scfdtab.c [1.1] (+939 -0), scfdgen.c [1.1] (+225 -0), scfd.c [1.1] (+824 -0), 
        scf.h [1.1] (+210 -0), scantab.c [1.1] (+106 -0), scanchar.h [1.1] (+70 -0), 
        sbwbs.h [1.1] (+73 -0), sbwbs.c [1.1] (+549 -0), sbtx.h [1.1] (+40 -0), 
        sbhc.h [1.1] (+93 -0), sbhc.c [1.1] (+286 -0), sbcp.h [1.1] (+48 -0), 
        sbcp.c [1.1] (+253 -0), sarc4.h [1.1] (+49 -0), sarc4.c [1.1] (+117 -0), 
        sa85x.h [1.1] (+43 -0), sa85d.h [1.1] (+42 -0), sa85d.c [1.1] (+164 -0), 
        rm_one.com [1.1] (+9 -0), rm_all.com [1.1] (+15 -0), rm.cmd [1.1] (+10 -0), 
        rm.bat [1.1] (+10 -0), png_.h [1.1] (+26 -0), pipe_.h [1.1] (+44 -0), 
        pcwin.mak [1.1] (+102 -0), ostack.h [1.1] (+89 -0), os2.mak [1.1] (+699 -0), 
        opextern.h [1.1] (+151 -0), oper.h [1.1] (+109 -0), openvms.mmk [1.1] (+530 -0), 
        openvms.mak [1.1] (+521 -0), opdef.h [1.1] (+145 -0), opcheck.h [1.1] (+81 -0), 
        oparc.h [1.1] (+34 -0), mv.cmd [1.1] (+2 -0), mv.bat [1.1] (+2 -0), 
        msvctail.mak [1.1] (+73 -0), msvclib.mak [1.1] (+499 -0), 
        msvccmd.mak [1.1] (+192 -0), msvc32.mak [1.1] (+623 -0), 
        memory_.h [1.1] (+111 -0), md5.h [1.1] (+94 -0), md5.c [1.1] (+410 -0), 
        math_.h [1.1] (+86 -0), malloc_.h [1.1] (+57 -0), main.h [1.1] (+108 -0), 
        macsystypes.h [1.1] (+42 -0), macsysstat.h [1.1] (+33 -0), 
        macos-mcp.mak [1.1] (+408 -0), macgenmcpxml.sh [1.1] (+395 -0), 
        libpng.mak [1.1] (+137 -0), lib.mak [1.1] (+2430 -0), jpeg.mak [1.1] (+391 -0), 
        jerror_.h [1.1] (+26 -0), ivmspace.h [1.1] (+105 -0), ivmem2.h [1.1] (+29 -0), 
        iutilasm.asm [1.1] (+697 -0), iutil2.h [1.1] (+50 -0), iutil2.c [1.1] (+148 -0), 
        iutil.h [1.1] (+153 -0), iutil.c [1.1] (+868 -0), itoken.h [1.1] (+49 -0), 
        istruct.h [1.1] (+92 -0), istream.h [1.1] (+39 -0), istkparm.h [1.1] (+44 -0), 
        istack.h [1.1] (+198 -0), istack.c [1.1] (+645 -0), isstate.h [1.1] (+41 -0), 
        isdata.h [1.1] (+102 -0), iscannum.h [1.1] (+33 -0), iscannum.c [1.1] (+394 -0), 
        iscanbin.h [1.1] (+37 -0), iscanbin.c [1.1] (+794 -0), iscan.h [1.1] (+171 -0), 
        iscan.c [1.1] (+1168 -0), isave.h [1.1] (+118 -0), isave.c [1.1] (+1120 -0), 
        iref.h [1.1] (+489 -0), ireclaim.c [1.1] (+188 -0), iplugin.h [1.1] (+74 -0), 
        iplugin.c [1.1] (+102 -0), ipcolor.h [1.1] (+42 -0), iparray.h [1.1] (+38 -0), 
        iparam.h [1.1] (+114 -0), iparam.c [1.1] (+1131 -0), ipacked.h [1.1] (+136 -0), 
        iostack.h [1.1] (+32 -0), iosdata.h [1.1] (+40 -0), interp.h [1.1] (+94 -0), 
        interp.c [1.1] (+1774 -0), int.mak [1.1] (+1864 -0), instcopy [1.1] (+44 -0), 
        inouparm.c [1.1] (+28 -0), inobtokn.c [1.1] (+32 -0), inamestr.h [1.1] (+98 -0), 
        inames.h [1.1] (+114 -0), inameidx.h [1.1] (+85 -0), inamedef.h [1.1] (+172 -0), 
        iname.h [1.1] (+97 -0), iname.c [1.1] (+651 -0), iminst.h [1.1] (+109 -0), 
        imemory.h [1.1] (+103 -0), imainarg.h [1.1] (+46 -0), imainarg.c [1.1] (+974 -0), 
        imain.h [1.1] (+270 -0), imain.c [1.1] (+946 -0), ilocate.c [1.1] (+511 -0), 
        ilevel.h [1.1] (+31 -0), iinit.h [1.1] (+40 -0), iinit.c [1.1] (+517 -0), 
        iimage2.h [1.1] (+55 -0), iimage.h [1.1] (+45 -0), iht.h [1.1] (+31 -0), 
        igstate.h [1.1] (+204 -0), igcstr.h [1.1] (+37 -0), igcstr.c [1.1] (+424 -0), 
        igcref.c [1.1] (+733 -0), igc.h [1.1] (+95 -0), igc.c [1.1] (+1336 -0), 
        ifwpred.h [1.1] (+30 -0), ifunc.h [1.1] (+67 -0), ifrpred.h [1.1] (+30 -0), 
        ifont42.h [1.1] (+55 -0), ifont2.h [1.1] (+39 -0), ifont1.h [1.1] (+70 -0), 
        ifont.h [1.1] (+120 -0), ifilter2.h [1.1] (+31 -0), ifilter.h [1.1] (+95 -0), 
        ifcid.h [1.1] (+33 -0), ifapi.h [1.1] (+168 -0), iestack.h [1.1] (+41 -0), 
        iesdata.h [1.1] (+55 -0), idstack.h [1.1] (+65 -0), idstack.c [1.1] (+257 -0), 
        idsdata.h [1.1] (+86 -0), idparam.h [1.1] (+112 -0), idparam.c [1.1] (+398 -0), 
        idosave.h [1.1] (+42 -0), idisp.h [1.1] (+28 -0), idisp.c [1.1] (+106 -0), 
        idictdef.h [1.1] (+122 -0), idict.h [1.1] (+273 -0), idict.c [1.1] (+866 -0), 
        idebug.h [1.1] (+43 -0), idebug.c [1.1] (+319 -0), iddstack.h [1.1] (+40 -0), 
        iddict.h [1.1] (+48 -0), icstate.h [1.1] (+72 -0), icsmap.h [1.1] (+46 -0), 
        icremap.h [1.1] (+45 -0), icontext.h [1.1] (+55 -0), icontext.c [1.1] (+294 -0), 
        iconf.h [1.1] (+34 -0), iconf.c [1.1] (+98 -0), icolor.h [1.1] (+55 -0), 
        icie.h [1.1] (+93 -0), icid.h [1.1] (+28 -0), icharout.h [1.1] (+73 -0), 
        ichar1.h [1.1] (+47 -0), ichar.h [1.1] (+77 -0), icfontab.c [1.1] (+53 -0), 
        icclib.mak [1.1] (+79 -0), iccinit0.c [1.1] (+25 -0), iccfont.c [1.1] (+375 -0), 
        ibnum.h [1.1] (+66 -0), ibnum.c [1.1] (+216 -0), iastruct.h [1.1] (+28 -0), 
        iastate.h [1.1] (+30 -0), iapi.h [1.1] (+308 -0), iapi.c [1.1] (+232 -0), 
        ialloc.h [1.1] (+126 -0), ialloc.c [1.1] (+357 -0), gzstate.h [1.1] (+157 -0), 
        gzpath.h [1.1] (+385 -0), gzline.h [1.1] (+39 -0), gzht.h [1.1] (+212 -0), 
        gzcpath.h [1.1] (+99 -0), gzacpath.h [1.1] (+55 -0), gxxfont.h [1.1] (+174 -0), 
        gxtype1.h [1.1] (+356 -0), gxtype1.c [1.1] (+691 -0), gxttf.h [1.1] (+161 -0), 
        gxtmap.h [1.1] (+52 -0), gxtext.h [1.1] (+307 -0), gxsync.h [1.1] (+75 -0), 
        gxsync.c [1.1] (+139 -0), gxstroke.c [1.1] (+1376 -0), gxstdio.h [1.1] (+41 -0), 
        gxstate.h [1.1] (+80 -0), gxshade6.c [1.1] (+616 -0), gxshade4.h [1.1] (+64 -0), 
        gxshade4.c [1.1] (+421 -0), gxshade1.c [1.1] (+781 -0), 
        gxshade.h [1.1] (+206 -0), gxshade.c [1.1] (+336 -0), gxsample.h [1.1] (+75 -0), 
        gxsample.c [1.1] (+238 -0), gxrplane.h [1.1] (+51 -0), gxropc.h [1.1] (+47 -0), 
        gxpflat.c [1.1] (+449 -0), gxpdash.c [1.1] (+183 -0), gxpcopy.c [1.1] (+895 -0), 
        gxpcolor.h [1.1] (+215 -0), gxpcmap.c [1.1] (+688 -0), gxpcache.h [1.1] (+55 -0), 
        gxpath2.c [1.1] (+519 -0), gxpath.h [1.1] (+326 -0), gxpath.c [1.1] (+834 -0), 
        gxpaint.h [1.1] (+125 -0), gxpaint.c [1.1] (+87 -0), gxpageq.h [1.1] (+275 -0), 
        gxpageq.c [1.1] (+361 -0), gxp1impl.h [1.1] (+43 -0), gxp1fill.c [1.1] (+395 -0), 
        gxop1.h [1.1] (+75 -0), gxobj.h [1.1] (+170 -0), gxmclip.h [1.1] (+105 -0), 
        gxmclip.c [1.1] (+105 -0), gxmatrix.h [1.1] (+87 -0), gxlum.h [1.1] (+31 -0), 
        gxline.h [1.1] (+80 -0), gxistate.h [1.1] (+288 -0), gxiscale.c [1.1] (+332 -0), 
        gxipixel.c [1.1] (+812 -0), gxiparam.h [1.1] (+259 -0), 
        gxiodev.h [1.1] (+185 -0), gxino12b.c [1.1] (+25 -0), gximono.c [1.1] (+611 -0), 
        gximage4.c [1.1] (+160 -0), gximage3.h [1.1] (+80 -0), gximage3.c [1.1] (+739 -0), 
        gximage2.c [1.1] (+317 -0), gximage1.c [1.1] (+208 -0), 
        gximage.h [1.1] (+303 -0), gximage.c [1.1] (+520 -0), gximag3x.h [1.1] (+81 -0), 
        gximag3x.c [1.1] (+860 -0), gxifast.c [1.1] (+756 -0), gxidata.c [1.1] (+441 -0), 
        gxicolor.c [1.1] (+449 -0), gxiclass.h [1.1] (+67 -0), gxi12bit.c [1.1] (+372 -0), 
        gxhttype.h [1.1] (+43 -0), gxhttile.h [1.1] (+48 -0), gxhtbit.c [1.1] (+276 -0), 
        gxht.h [1.1] (+233 -0), gxht.c [1.1] (+530 -0), gxhint3.c [1.1] (+556 -0), 
        gxhint2.c [1.1] (+410 -0), gxhint1.c [1.1] (+269 -0), gxgetbit.h [1.1] (+95 -0), 
        gxfunc.h [1.1] (+57 -0), gxftype.h [1.1] (+51 -0), gxfrac.h [1.1] (+98 -0), 
        gxfont42.h [1.1] (+93 -0), gxfont1.h [1.1] (+159 -0), gxfont0.h [1.1] (+80 -0), 
        gxfont.h [1.1] (+425 -0), gxfmap.h [1.1] (+109 -0), gxfixed.h [1.1] (+260 -0), 
        gxfill.c [1.1] (+2011 -0), gxfcmap.h [1.1] (+165 -0), gxfcid.h [1.1] (+163 -0), 
        gxfcache.h [1.1] (+269 -0), gxfarith.h [1.1] (+145 -0), 
        gxfapi.h [1.1] (+27 -0), gxfapi.c [1.1] (+83 -0), gxdither.h [1.1] (+78 -0), 
        gxdither.c [1.1] (+578 -0), gxdhtres.h [1.1] (+49 -0), gxdht.h [1.1] (+315 -0), 
        gxdevrop.h [1.1] (+29 -0), gxdevmem.h [1.1] (+243 -0), gxdevice.h [1.1] (+536 -0), 
        gxdevcli.h [1.1] (+1053 -0), gxdevbuf.h [1.1] (+119 -0), 
        gxdda.h [1.1] (+153 -0), gxdcolor.h [1.1] (+185 -0), gxdcolor.c [1.1] (+392 -0), 
        gxdcconv.h [1.1] (+37 -0), gxdcconv.c [1.1] (+161 -0), gxcvalue.h [1.1] (+42 -0), 
        gxctable.h [1.1] (+64 -0), gxctable.c [1.1] (+147 -0), gxcspace.h [1.1] (+253 -0), 
        gxcpath.h [1.1] (+144 -0), gxcpath.c [1.1] (+929 -0), gxcoord.h [1.1] (+39 -0), 
        gxcomp.h [1.1] (+107 -0), gxcolor2.h [1.1] (+92 -0), gxcmap.h [1.1] (+117 -0), 
        gxcmap.c [1.1] (+946 -0), gxclzlib.c [1.1] (+53 -0), gxclutil.c [1.1] (+654 -0), 
        gxclrect.c [1.1] (+702 -0), gxclread.c [1.1] (+527 -0), 
        gxclrast.c [1.1] (+2581 -0), gxclpath.h [1.1] (+236 -0), 
        gxclpath.c [1.1] (+1385 -0), gxclpage.h [1.1] (+58 -0), 
        gxclpage.c [1.1] (+121 -0), gxclmem.h [1.1] (+149 -0), gxclmem.c [1.1] (+1129 -0), 
        gxcllzw.c [1.1] (+50 -0), gxclist.h [1.1] (+349 -0), gxclist.c [1.1] (+788 -0), 
        gxclipsr.h [1.1] (+54 -0), gxclipm.h [1.1] (+30 -0), gxclipm.c [1.1] (+366 -0), 
        gxclip2.h [1.1] (+54 -0), gxclip2.c [1.1] (+301 -0), gxclip.h [1.1] (+72 -0), 
        gxclip.c [1.1] (+581 -0), gxclio.h [1.1] (+98 -0), gxclimag.c [1.1] (+1360 -0), 
        gxclfile.c [1.1] (+165 -0), gxcldev.h [1.1] (+727 -0), gxclbits.c [1.1] (+746 -0), 
        gxcindex.h [1.1] (+131 -0), gxcie.h [1.1] (+120 -0), gxcid.h [1.1] (+52 -0), 
        gxcht.c [1.1] (+1047 -0), gxchrout.h [1.1] (+38 -0), gxchrout.c [1.1] (+62 -0), 
        gxchar.h [1.1] (+129 -0), gxchar.c [1.1] (+1319 -0), gxcdevn.h [1.1] (+51 -0), 
        gxccman.c [1.1] (+800 -0), gxccache.c [1.1] (+452 -0), gxblend.h [1.1] (+259 -0), 
        gxblend.c [1.1] (+1041 -0), gxbitops.h [1.1] (+136 -0), 
        gxbitmap.h [1.1] (+136 -0), gxbitfmt.h [1.1] (+207 -0), 
        gxbcache.h [1.1] (+124 -0), gxbcache.c [1.1] (+147 -0), 
        gxband.h [1.1] (+92 -0), gxarith.h [1.1] (+89 -0), gxalpha.h [1.1] (+68 -0), 
        gxalloc.h [1.1] (+473 -0), gxacpath.c [1.1] (+523 -0), gx.h [1.1] (+46 -0), 
        gsxfont.h [1.1] (+39 -0), gswin386.rc [1.1] (+4 -0), gswin32.rc [1.1] (+36 -0), 
        gswin.rc [1.1] (+29 -0), gsutil.h [1.1] (+65 -0), gsutil.c [1.1] (+278 -0), 
        gsuid.h [1.1] (+72 -0), gstypes.h [1.1] (+115 -0), gstype42.c [1.1] (+913 -0), 
        gstype2.c [1.1] (+806 -0), gstype1.h [1.1] (+259 -0), gstype1.c [1.1] (+585 -0), 
        gstrap.h [1.1] (+76 -0), gstrap.c [1.1] (+109 -0), gstrans.h [1.1] (+72 -0), 
        gstrans.c [1.1] (+348 -0), gstparam.h [1.1] (+109 -0), gstext.icx [1.1] (+127 -0), 
        gstext.h [1.1] (+309 -0), gstext.c [1.1] (+582 -0), gsstype.h [1.1] (+115 -0), 
        gsstruct.h [1.1] (+1004 -0), gsstate.h [1.1] (+77 -0), gsstate.c [1.1] (+930 -0), 
        gsshade.h [1.1] (+263 -0), gsshade.c [1.1] (+541 -0), gsroptab.c [1.1] (+365 -0), 
        gsropt.h [1.1] (+224 -0), gsropc.h [1.1] (+54 -0), gsropc.c [1.1] (+304 -0), 
        gsrop.h [1.1] (+40 -0), gsrop.c [1.1] (+92 -0), gsrefct.h [1.1] (+190 -0), 
        gsrect.h [1.1] (+96 -0), gsptype2.h [1.1] (+95 -0), gsptype2.c [1.1] (+212 -0), 
        gsptype1.h [1.1] (+147 -0), gsptype1.c [1.1] (+840 -0), 
        gspmdrv.rc [1.1] (+40 -0), gspmdrv.icx [1.1] (+233 -0), 
        gspmdrv.h [1.1] (+34 -0), gspmdrv.def [1.1] (+3 -0), gspmdrv.c [1.1] (+1249 -0), 
        gspenum.h [1.1] (+34 -0), gspcolor.h [1.1] (+123 -0), gspcolor.c [1.1] (+319 -0), 
        gspath2.h [1.1] (+35 -0), gspath1.c [1.1] (+583 -0), gspath.h [1.1] (+99 -0), 
        gspath.c [1.1] (+499 -0), gsparamx.h [1.1] (+44 -0), gsparamx.c [1.1] (+191 -0), 
        gsparams.h [1.1] (+71 -0), gsparams.c [1.1] (+413 -0), gsparam2.c [1.1] (+380 -0), 
        gsparam.h [1.1] (+550 -0), gsparam.c [1.1] (+461 -0), gspaint.h [1.1] (+36 -0), 
        gspaint.c [1.1] (+389 -0), gsos2.rc [1.1] (+22 -0), gsos2.icx [1.1] (+233 -0), 
        gsos2.def [1.1] (+3 -0), gsnotify.h [1.1] (+93 -0), gsnotify.c [1.1] (+127 -0), 
        gsnorop.c [1.1] (+127 -0), gsnogc.h [1.1] (+30 -0), gsnogc.c [1.1] (+360 -0), 
        gsmisc.c [1.1] (+1216 -0), gsmemret.h [1.1] (+72 -0), gsmemret.c [1.1] (+360 -0), 
        gsmemraw.h [1.1] (+200 -0), gsmemory.h [1.1] (+308 -0), 
        gsmemory.c [1.1] (+343 -0), gsmemlok.h [1.1] (+57 -0), gsmemlok.c [1.1] (+394 -0), 
        gsmdebug.h [1.1] (+49 -0), gsmatrix.h [1.1] (+84 -0), gsmatrix.c [1.1] (+595 -0), 
        gsmalloc.h [1.1] (+81 -0), gsmalloc.c [1.1] (+507 -0), gslparam.h [1.1] (+46 -0), 
        gsline.h [1.1] (+69 -0), gsline.c [1.1] (+368 -0), gslib.h [1.1] (+39 -0), 
        gslib.c [1.1] (+1126 -0), gsjmorec.h [1.1] (+54 -0), gsjconf.h [1.1] (+75 -0), 
        gsistate.c [1.1] (+285 -0), gsiparm4.h [1.1] (+58 -0), gsiparm3.h [1.1] (+60 -0), 
        gsiparm2.h [1.1] (+62 -0), gsiparam.h [1.1] (+317 -0), gsipar3x.h [1.1] (+70 -0), 
        gsiodevs.c [1.1] (+94 -0), gsiodev.c [1.1] (+358 -0), gsio.h [1.1] (+73 -0), 
        gsinit.c [1.1] (+74 -0), gsimpath.c [1.1] (+186 -0), gsimage.h [1.1] (+197 -0), 
        gsimage.c [1.1] (+548 -0), gsicc.h [1.1] (+176 -0), gsicc.c [1.1] (+687 -0), 
        gshtx.h [1.1] (+152 -0), gshtx.c [1.1] (+612 -0), gshtscr.c [1.1] (+595 -0), 
        gsht1.h [1.1] (+54 -0), gsht1.c [1.1] (+579 -0), gsht.h [1.1] (+72 -0), 
        gsht.c [1.1] (+716 -0), gshsb.h [1.1] (+28 -0), gshsb.c [1.1] (+165 -0), 
        gsgraph.icx [1.1] (+127 -0), gsgdata.h [1.1] (+130 -0), 
        gsgdata.c [1.1] (+135 -0), gsgc.h [1.1] (+105 -0), gsfuncv.h [1.1] (+64 -0), 
        gsfuncv.c [1.1] (+91 -0), gsfunc4.h [1.1] (+87 -0), gsfunc4.c [1.1] (+781 -0), 
        gsfunc3.h [1.1] (+108 -0), gsfunc3.c [1.1] (+517 -0), gsfunc0.h [1.1] (+59 -0), 
        gsfunc0.c [1.1] (+593 -0), gsfunc.h [1.1] (+200 -0), gsfunc.c [1.1] (+109 -0), 
        gsfont0.c [1.1] (+128 -0), gsfont.h [1.1] (+80 -0), gsfont.c [1.1] (+880 -0), 
        gsfname.h [1.1] (+60 -0), gsfname.c [1.1] (+114 -0), gsflip.h [1.1] (+38 -0), 
        gsflip.c [1.1] (+402 -0), gsfemu.c [1.1] (+850 -0), gsfcmap.h [1.1] (+46 -0), 
        gsfcmap.c [1.1] (+576 -0), gsfcid.c [1.1] (+149 -0), gsexit.h [1.1] (+31 -0), 
        gserver.c [1.1] (+317 -0), gserrors.h [1.1] (+50 -0), gserror.h [1.1] (+34 -0), 
        gsdsrc.h [1.1] (+129 -0), gsdsrc.c [1.1] (+113 -0), gsdps1.c [1.1] (+236 -0), 
        gsdps.h [1.1] (+34 -0), gsdps.c [1.1] (+114 -0), gsdpnext.h [1.1] (+28 -0), 
        gsdparam.c [1.1] (+859 -0), gsdllwin.h [1.1] (+46 -0), gsdllos2.h [1.1] (+33 -0), 
        gsdll32w.lnk [1.1] (+11 -0), gsdll32.rc [1.1] (+54 -0), 
        gsdll32.def [1.1] (+31 -0), gsdll2.rc [1.1] (+22 -0), gsdll2.def [1.1] (+26 -0), 
        gsdll.h [1.1] (+105 -0), gsdll.c [1.1] (+190 -0), gsdfilt.h [1.1] (+91 -0), 
        gsdfilt.c [1.1] (+192 -0), gsdevmem.c [1.1] (+232 -0), gsdevice.h [1.1] (+124 -0), 
        gsdevice.c [1.1] (+833 -0), gsdcolor.h [1.1] (+343 -0), 
        gscssub.h [1.1] (+73 -0), gscssub.c [1.1] (+122 -0), gscspace.h [1.1] (+496 -0), 
        gscspace.c [1.1] (+299 -0), gscsepr.h [1.1] (+93 -0), gscsepr.c [1.1] (+450 -0), 
        gscsepnm.h [1.1] (+48 -0), gscsel.h [1.1] (+38 -0), gscscie.c [1.1] (+352 -0), 
        gscrypt1.h [1.1] (+50 -0), gscrypt1.c [1.1] (+60 -0), gscrdp.h [1.1] (+110 -0), 
        gscrdp.c [1.1] (+638 -0), gscrd.h [1.1] (+93 -0), gscrd.c [1.1] (+368 -0), 
        gscpm.h [1.1] (+40 -0), gscpixel.h [1.1] (+29 -0), gscpixel.c [1.1] (+104 -0), 
        gscparam.c [1.1] (+596 -0), gscoord.h [1.1] (+49 -0), gscoord.c [1.1] (+540 -0), 
        gscompt.h [1.1] (+53 -0), gscolor3.h [1.1] (+35 -0), gscolor3.c [1.1] (+92 -0), 
        gscolor2.h [1.1] (+57 -0), gscolor2.c [1.1] (+528 -0), gscolor1.h [1.1] (+41 -0), 
        gscolor1.c [1.1] (+263 -0), gscolor.h [1.1] (+39 -0), gscolor.c [1.1] (+376 -0), 
        gsclipsr.h [1.1] (+28 -0), gsclipsr.c [1.1] (+102 -0), gscindex.h [1.1] (+79 -0), 
        gsciemap.c [1.1] (+484 -0), gscie.h [1.1] (+750 -0), gscie.c [1.1] (+1281 -0), 
        gschar0.c [1.1] (+413 -0), gschar.h [1.1] (+125 -0), gschar.c [1.1] (+367 -0), 
        gscdevn.h [1.1] (+68 -0), gscdevn.c [1.1] (+362 -0), gscdefs.h [1.1] (+87 -0), 
        gscdef.c [1.1] (+89 -0), gsccolor.h [1.1] (+62 -0), gsccode.h [1.1] (+121 -0), 
        gsbittab.h [1.1] (+84 -0), gsbittab.c [1.1] (+136 -0), gsbitops.h [1.1] (+250 -0), 
        gsbitops.c [1.1] (+606 -0), gsbitmap.h [1.1] (+199 -0), 
        gsbitcom.c [1.1] (+302 -0), gsargs.h [1.1] (+83 -0), gsargs.c [1.1] (+226 -0), 
        gsalphac.h [1.1] (+65 -0), gsalphac.c [1.1] (+828 -0), gsalpha.h [1.1] (+35 -0), 
        gsalpha.c [1.1] (+42 -0), gsalloc.h [1.1] (+81 -0), gsalloc.c [1.1] (+1995 -0), 
        gs16spl.rc [1.1] (+42 -0), gs16spl.def [1.1] (+7 -0), gs16spl.c [1.1] (+220 -0), 
        gs.mak [1.1] (+409 -0), gs.c [1.1] (+92 -0), gpsync.h [1.1] (+75 -0), 
        gpmisc.h [1.1] (+43 -0), gpmisc.c [1.1] (+95 -0), gpgetenv.h [1.1] (+44 -0), 
        gpcheck.h [1.1] (+58 -0), gp_wsync.c [1.1] (+208 -0), gp_win32.c [1.1] (+120 -0), 
        gp_wgetv.c [1.1] (+133 -0), gp_vms.c [1.1] (+449 -0), gp_unix.c [1.1] (+160 -0), 
        gp_unifs.c [1.1] (+455 -0), gp_unifn.c [1.1] (+55 -0), gp_sysv.c [1.1] (+68 -0), 
        gp_strdl.c [1.1] (+45 -0), gp_stdin.c [1.1] (+39 -0), gp_stdia.c [1.1] (+35 -0), 
        gp_psync.c [1.1] (+231 -0), gp_os9.c [1.1] (+153 -0), gp_os2.c [1.1] (+777 -0), 
        gp_ntfs.c [1.1] (+236 -0), gp_nsync.c [1.1] (+112 -0), gp_mswin.h [1.1] (+57 -0), 
        gp_mswin.c [1.1] (+595 -0), gp_msprn.c [1.1] (+217 -0), 
        gp_mspol.c [1.1] (+47 -0), gp_mslib.c [1.1] (+38 -0), gp_msio.c [1.1] (+230 -0), 
        gp_mshdl.c [1.1] (+122 -0), gp_msdos.c [1.1] (+130 -0), 
        gp_msdll.c [1.1] (+52 -0), gp_mktmp.c [1.1] (+49 -0), gp_macio.c [1.1] (+609 -0), 
        gp_mac.h [1.1] (+29 -0), gp_mac.c [1.1] (+384 -0), gp_iwatc.c [1.1] (+158 -0), 
        gp_getnv.c [1.1] (+54 -0), gp_dvx.c [1.1] (+113 -0), gp_dosfs.c [1.1] (+103 -0), 
        gp_dosfe.c [1.1] (+151 -0), gp.h [1.1] (+258 -0), ghost.h [1.1] (+28 -0), 
        geninit.c [1.1] (+452 -0), genht.c [1.1] (+374 -0), gendev.c [1.1] (+363 -0), 
        genconf.c [1.1] (+1011 -0), genarch.c [1.1] (+277 -0), gdevxxf.c [1.1] (+473 -0), 
        gdevxres.c [1.1] (+139 -0), gdevxini.c [1.1] (+1008 -0), 
        gdevxcmp.h [1.1] (+148 -0), gdevxcmp.c [1.1] (+888 -0), 
        gdevxalt.c [1.1] (+956 -0), gdevx.h [1.1] (+277 -0), gdevx.c [1.1] (+1258 -0), 
        gdevwprn.c [1.1] (+676 -0), gdevwpr2.c [1.1] (+1532 -0), 
        gdevwdib.c [1.1] (+744 -0), gdevwddb.c [1.1] (+633 -0), 
        gdevvglb.c [1.1] (+375 -0), gdevvec.h [1.1] (+384 -0), gdevvec.c [1.1] (+1195 -0), 
        gdevupd.c [1.1] (+7622 -0), gdevtrac.c [1.1] (+663 -0), 
        gdevtknk.c [1.1] (+253 -0), gdevtifs.h [1.1] (+228 -0), 
        gdevtifs.c [1.1] (+324 -0), gdevtfnx.c [1.1] (+189 -0), 
        gdevtfax.h [1.1] (+28 -0), gdevtfax.c [1.1] (+361 -0), gdevsvga.h [1.1] (+95 -0), 
        gdevsvga.c [1.1] (+1046 -0), gdevsunr.c [1.1] (+103 -0), 
        gdevsun.c [1.1] (+685 -0), gdevstc4.c [1.1] (+301 -0), gdevstc3.c [1.1] (+107 -0), 
        gdevstc2.c [1.1] (+427 -0), gdevstc1.c [1.1] (+127 -0), 
        gdevstc.h [1.1] (+252 -0), gdevstc.c [1.1] (+3553 -0), gdevsppr.c [1.1] (+189 -0), 
        gdevsnfb.c [1.1] (+117 -0), gdevsj48.c [1.1] (+292 -0), 
        gdevsgi.h [1.1] (+71 -0), gdevsgi.c [1.1] (+220 -0), gdevsco.c [1.1] (+289 -0), 
        gdevs3ga.c [1.1] (+247 -0), gdevrops.c [1.1] (+195 -0), 
        gdevpxut.h [1.1] (+83 -0), gdevpxut.c [1.1] (+269 -0), gdevpxop.h [1.1] (+108 -0), 
        gdevpxen.h [1.1] (+263 -0), gdevpxat.h [1.1] (+144 -0), 
        gdevpx.c [1.1] (+1587 -0), gdevpsu.h [1.1] (+74 -0), gdevpsu.c [1.1] (+297 -0), 
        gdevpsim.c [1.1] (+413 -0), gdevpsfx.c [1.1] (+821 -0), 
        gdevpsfu.c [1.1] (+363 -0), gdevpsft.c [1.1] (+978 -0), 
        gdevpsfm.c [1.1] (+275 -0), gdevpsf2.c [1.1] (+1730 -0), 
        gdevpsf1.c [1.1] (+518 -0), gdevpsf.h [1.1] (+285 -0), gdevpsdu.c [1.1] (+416 -0), 
        gdevpsds.h [1.1] (+152 -0), gdevpsds.c [1.1] (+759 -0), 
        gdevpsdp.c [1.1] (+852 -0), gdevpsdi.c [1.1] (+415 -0), 
        gdevpsdf.h [1.1] (+386 -0), gdevps.c [1.1] (+1511 -0), gdevprna.h [1.1] (+182 -0), 
        gdevprna.c [1.1] (+797 -0), gdevprn.h [1.1] (+666 -0), gdevprn.c [1.1] (+1241 -0), 
        gdevppla.h [1.1] (+51 -0), gdevppla.c [1.1] (+133 -0), gdevpnga.c [1.1] (+1136 -0), 
        gdevpng.c [1.1] (+280 -0), gdevpm.h [1.1] (+40 -0), gdevpm.c [1.1] (+1214 -0), 
        gdevplnx.h [1.1] (+75 -0), gdevplnx.c [1.1] (+1103 -0), 
        gdevpjet.c [1.1] (+251 -0), gdevpipe.c [1.1] (+74 -0), gdevphex.c [1.1] (+3391 -0), 
        gdevpe.c [1.1] (+366 -0), gdevpdfx.h [1.1] (+830 -0), gdevpdfw.c [1.1] (+858 -0), 
        gdevpdfv.c [1.1] (+794 -0), gdevpdfu.c [1.1] (+1095 -0), 
        gdevpdft.c [1.1] (+486 -0), gdevpdfs.c [1.1] (+1576 -0), 
        gdevpdfr.c [1.1] (+425 -0), gdevpdfp.c [1.1] (+484 -0), 
        gdevpdfo.h [1.1] (+310 -0), gdevpdfo.c [1.1] (+1219 -0), 
        gdevpdfm.c [1.1] (+1828 -0), gdevpdfj.c [1.1] (+400 -0), 
        gdevpdfi.c [1.1] (+655 -0), gdevpdfg.h [1.1] (+225 -0), 
        gdevpdfg.c [1.1] (+1078 -0), gdevpdff.h [1.1] (+472 -0), 
        gdevpdff.c [1.1] (+1400 -0), gdevpdfe.c [1.1] (+373 -0), 
        gdevpdfd.c [1.1] (+413 -0), gdevpdfc.c [1.1] (+814 -0), 
        gdevpdfb.c [1.1] (+606 -0), gdevpdf.c [1.1] (+994 -0), gdevpcx.c [1.1] (+462 -0), 
        gdevpcl.h [1.1] (+67 -0), gdevpcl.c [1.1] (+431 -0), gdevpcfb.h [1.1] (+203 -0), 
        gdevpcfb.c [1.1] (+933 -0), gdevpccm.h [1.1] (+39 -0), gdevpccm.c [1.1] (+182 -0), 
        gdevpbm.c [1.1] (+999 -0), gdevp2up.c [1.1] (+148 -0), gdevp14.h [1.1] (+28 -0), 
        gdevp14.c [1.1] (+1218 -0), gdevos2p.c [1.1] (+704 -0), 
        gdevokii.c [1.1] (+327 -0), gdevo182.c [1.1] (+311 -0), 
        gdevnfwd.c [1.1] (+779 -0), gdevn533.c [1.1] (+210 -0), 
        gdevmsxf.c [1.1] (+468 -0), gdevmswn.h [1.1] (+113 -0), 
        gdevmswn.c [1.1] (+487 -0), gdevmrun.h [1.1] (+62 -0), gdevmrun.c [1.1] (+657 -0), 
        gdevmrop.h [1.1] (+85 -0), gdevmr8n.c [1.1] (+376 -0), gdevmr2n.c [1.1] (+180 -0), 
        gdevmr1.c [1.1] (+288 -0), gdevmpla.h [1.1] (+48 -0), gdevmpla.c [1.1] (+584 -0), 
        gdevmiff.c [1.1] (+86 -0), gdevmgr.h [1.1] (+121 -0), gdevmgr.c [1.1] (+432 -0), 
        gdevmem.h [1.1] (+243 -0), gdevmem.c [1.1] (+581 -0), gdevmeds.h [1.1] (+30 -0), 
        gdevmeds.c [1.1] (+96 -0), gdevmacxf.c [1.1] (+478 -0), 
        gdevmacttf.h [1.1] (+46 -0), gdevmacpictop.h [1.1] (+665 -0), 
        gdevmac.h [1.1] (+184 -0), gdevmac.c [1.1] (+832 -0), gdevm8.c [1.1] (+238 -0), 
        gdevm4.c [1.1] (+311 -0), gdevm32.c [1.1] (+296 -0), gdevm24.c [1.1] (+601 -0), 
        gdevm2.c [1.1] (+253 -0), gdevm16.c [1.1] (+178 -0), gdevm1.c [1.1] (+745 -0), 
        gdevlxm.c [1.1] (+423 -0), gdevlp8k.c [1.1] (+412 -0), gdevlj56.c [1.1] (+213 -0), 
        gdevlbp8.c [1.1] (+213 -0), gdevl31s.c [1.1] (+283 -0), 
        gdevl256.c [1.1] (+309 -0), gdevjpeg.c [1.1] (+283 -0), 
        gdevimgn.c [1.1] (+571 -0), gdevifno.c [1.1] (+787 -0), 
        gdevht.h [1.1] (+46 -0), gdevht.c [1.1] (+400 -0), gdevhpij.h [1.1] (+178 -0), 
        gdevhpij.c [1.1] (+627 -0), gdevhl7x.c [1.1] (+1073 -0), 
        gdevhit.c [1.1] (+92 -0), gdevherc.c [1.1] (+482 -0), gdevfax.h [1.1] (+66 -0), 
        gdevfax.c [1.1] (+281 -0), gdevevga.c [1.1] (+118 -0), gdevescp.c [1.1] (+415 -0), 
        gdevepsn.c [1.1] (+500 -0), gdevepsc.c [1.1] (+458 -0), 
        gdevemap.c [1.1] (+61 -0), gdevegaa.asm [1.1] (+278 -0), 
        gdevdsp2.h [1.1] (+48 -0), gdevdsp.h [1.1] (+203 -0), gdevdsp.c [1.1] (+1203 -0), 
        gdevdrop.c [1.1] (+726 -0), gdevdm24.c [1.1] (+289 -0), 
        gdevdljm.h [1.1] (+162 -0), gdevdljm.c [1.1] (+312 -0), 
        gdevdjtc.c [1.1] (+276 -0), gdevdjet.c [1.1] (+425 -0), 
        gdevdgbr.c [1.1] (+798 -0), gdevdflt.c [1.1] (+261 -0), 
        gdevdfax.c [1.1] (+108 -0), gdevddrw.c [1.1] (+654 -0), 
        gdevdcrd.h [1.1] (+29 -0), gdevdcrd.c [1.1] (+178 -0), gdevdbit.c [1.1] (+710 -0), 
        gdevcslw.c [1.1] (+149 -0), gdevcp50.c [1.1] (+224 -0), 
        gdevcmap.h [1.1] (+71 -0), gdevcmap.c [1.1] (+313 -0), gdevcljc.c [1.1] (+103 -0), 
        gdevclj.c [1.1] (+680 -0), gdevcif.c [1.1] (+101 -0), gdevcgmx.h [1.1] (+188 -0), 
        gdevcgml.h [1.1] (+384 -0), gdevcgml.c [1.1] (+1158 -0), 
        gdevcgm.c [1.1] (+496 -0), gdevcfax.c [1.1] (+235 -0), gdevcdj.c [1.1] (+3810 -0), 
        gdevccr.c [1.1] (+294 -0), gdevbmpc.c [1.1] (+234 -0), gdevbmpa.c [1.1] (+716 -0), 
        gdevbmp.h [1.1] (+39 -0), gdevbmp.c [1.1] (+219 -0), gdevbjcl.h [1.1] (+401 -0), 
        gdevbjcl.c [1.1] (+252 -0), gdevbjc.h [1.1] (+288 -0), gdevbj10.c [1.1] (+412 -0), 
        gdevbit.c [1.1] (+371 -0), gdevbbox.h [1.1] (+146 -0), gdevbbox.c [1.1] (+1324 -0), 
        gdevatx.c [1.1] (+274 -0), gdevalph.c [1.1] (+609 -0), gdevadmp.c [1.1] (+410 -0), 
        gdevabuf.c [1.1] (+393 -0), gdev8bcm.h [1.1] (+73 -0), gdev8bcm.c [1.1] (+82 -0), 
        gdev8510.c [1.1] (+144 -0), gdev4693.c [1.1] (+169 -0), 
        gdev4081.c [1.1] (+95 -0), gdev3b1.c [1.1] (+799 -0), gdev3852.c [1.1] (+190 -0), 
        gdebug.h [1.1] (+127 -0), gconf.h [1.1] (+37 -0), gconf.c [1.1] (+159 -0), 
        files.h [1.1] (+173 -0), fcntl_.h [1.1] (+62 -0), fapiufst.c [1.1] (+947 -0), 
        estack.h [1.1] (+132 -0), errors.h [1.1] (+164 -0), errno_.h [1.1] (+36 -0), 
        echogs.c [1.1] (+346 -0), dxmainc.c [1.1] (+117 -0), dxmain.c [1.1] (+827 -0), 
        dwuninst.rc [1.1] (+40 -0), dwuninst.h [1.1] (+33 -0), dwuninst.def [1.1] (+5 -0), 
        dwuninst.cpp [1.1] (+860 -0), dwtext.h [1.1] (+144 -0), 
        dwtext.c [1.1] (+1113 -0), dwsetup.rc [1.1] (+148 -0), dwsetup.h [1.1] (+50 -0), 
        dwsetup.def [1.1] (+5 -0), dwsetup.cpp [1.1] (+1064 -0), 
        dwreg.h [1.1] (+23 -0), dwreg.c [1.1] (+109 -0), dwnodll.c [1.1] (+49 -0), 
        dwmainc.c [1.1] (+408 -0), dwmain32.def [1.1] (+7 -0), dwmain16.def [1.1] (+7 -0), 
        dwmain.rc [1.1] (+37 -0), dwmain.h [1.1] (+26 -0), dwmain.c [1.1] (+495 -0), 
        dwinst.h [1.1] (+113 -0), dwinst.cpp [1.1] (+939 -0), dwimg.h [1.1] (+75 -0), 
        dwimg.c [1.1] (+1401 -0), dwdll.h [1.1] (+55 -0), dwdll.c [1.1] (+192 -0), 
        dw32c.def [1.1] (+6 -0), dvx-tail.mak [1.1] (+101 -0), dvx-head.mak [1.1] (+76 -0), 
        dvx-gcc.mak [1.1] (+343 -0), dstack.h [1.1] (+301 -0), dscparse.h [1.1] (+455 -0), 
        dscparse.c [1.1] (+3240 -0), dpmain.c [1.1] (+1075 -0), 
        dos_.h [1.1] (+82 -0), dirent_.h [1.1] (+57 -0), devs.mak [1.1] (+1325 -0), 
        ctype_.h [1.1] (+31 -0), cp.cmd [1.1] (+3 -0), cp.bat [1.1] (+15 -0), 
        copy_one.com [1.1] (+14 -0), contrib.mak [1.1] (+880 -0), 
        cfonts.mak [1.1] (+491 -0), ccgs [1.1] (+24 -0), ccfont.h [1.1] (+104 -0), 
        catmake [1.1] (+15 -0), btoken.h [1.1] (+47 -0), bfont.h [1.1] (+84 -0), 
        bench.c [1.1] (+443 -0), bcwin32.mak [1.1] (+617 -0), bcc32.cfg [1.1] (+5 -0), 
        append_l.com [1.1] (+19 -0), ansi2knr.c [1.1] (+739 -0), 
        all-arch.mak [1.1] (+947 -0):
        Initial checkin gs 7.10
        
</pre><h2><a name="7.30-DeviceN_Library"></a>DeviceN Library (meerkat)</h2><pre>

Sun Aug 18 08:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gs_init.ps [1.8] (+14 -3):
        Modified File: (jan)
        
          lib/gs_init.ps    Modified .sethireshalftone to ignore components
                            not present in a device when determining if gamma
                            correction is required due to (imputed) dot-gain.
                            This corrects a problem with certain three-color
                            devices whose nonexistant gray component was
                            inappropriately causing gamma correction to be
                            applied.
        
        * pdf_main.ps [1.5] (+53 -2), pdf_draw.ps [1.4] (+3 -7), 
        gs_icc.ps [1.6] (+7 -3), gs_cspace.ps [1.4] (+27 -1):
        Modified Files: (jan)
        
          lib/gs_cspace.ps
            Added _setcolorspace_nosub, a variation of the setcolorspace operation that
            avoids color space substitution. This is required for ICCBased color spaces,
            as they may be used to substitute for a device-specific color space, but
            use that same device-specific color space as an alternative space. If the
            alternative space was used (or even if it wasn't, in the prior code), an
            infinite loop would result (the eventual error is execstackoverflow).
        
          lib/gs_icc.ps
            Modified the cs_install routine for ICCBased color spaces to use the new
            _setcolorspace_nosub procedure.
        
          lib/pdf_draw.ps
            Removed the color substitution scheme used by resolvecolorspace. This has
            been superseded by the PostScript-based scheme.
        
          lib/pdf_main.ps
            Implemented color space substitution using PostScript's method. This works
            for all color spaces and, with the above noted modifications to
            gs_cspace.ps and gs_icc.ps, avoids infinite-loop problems. The
            earlier code did not implement color space substitution for
            DeviceCMYK (the code was just missing) and in rare cases could
            suffer from infinite loops.
        
          src/zcolor.c
            Correct a typo: the .setdevcspace operator was included twice in the
            zcolor_op_defs array.
        

Wed Aug 14 04:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * pdf_main.ps [1.4] (+5 -5), pdf_base.ps [1.4] (+15 -2), 
        gs_statd.ps [1.4] (+22 -22), gs_init.ps [1.7] (+2 -2):
        backward forward merge.
        

Tue Jul 16 18:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gs_sepr.ps [1.3] (+2 -2), gs_patrn.ps [1.3] (+2 -2), gs_indxd.ps [1.3] (+2 -2), 
        gs_icc.ps [1.5] (+2 -2), gs_devn.ps [1.3] (+2 -2), gs_cspace.ps [1.3] (+21 -7):
        The following should be prominently posted in full view of all
        software engineers:
        
          ***Do not use caches to hold unreplaceable data***
        
        Failure to follow that rule of good programming is the heart of the
        problem with FTS panel 245-04 (file 245-01.ps).
        
        The immediate cause of the problem is the optimization put in the
        setcolorspace code to avoid repeatedly setting the same color space.
        The steps that lead to the error are the following:
        
          1. The job sets a CIEBasedABC color space as the current color
             space. The white and black point information from the color
             space dictionary is combined with the white and black point
             information in the color rendering dictionary to sample the
             TransformPQR procedures in that dictionary. The resulting
             data is placed in the joint CIE cache. All of this activity
             ends with an execution of the internal operator cie_tpqr_finish
             (zcrd.c). This operator has two side-effects:
        
                 The TransformPQR data structure in the cie_render structure
                 of the current state is set to TransformPQR_from_cache, which
                 indicates that the PQR phase of the CIE color mapping (the
                 white point point adjustment) is to be done via the joint CIE
                 cache.
        
                 The gs_cie_cs_complete procedure is invoked with the "init"
                 argument set to false, indicating that no further
                 initialization is required for the joint CIE caches. This
                 causes the status flag in those caches to be set to
                 CIE_JC_STATUS_INITED, indicating that the caches are ready
                 to use.
        
          2. The job calls gsave. Since the joint CIE caches can be shared by
             multiple graphic states, the cache reference count is incremented.
        
          3. The job sets a pattern color space, whose base color space is the
             current (CIEBasedABC) color space.
        
             The PostScript interpreter in Ghostscript uses the convention that
             a base or alternative color space will always be set as the current
             color space immediately before the enclosing color space is set.
             The cs_install procedure for the pattern color space
             (lib/gs_patrn.ps) invokes setcolorspace on the base space. Because
             this is already the current color space, nothing happens.
        
          4. Immediately afterwards, the cs_install procedure invokes the
             .setpatternspace operator on the enclosing pattern color space.
             Through a couple of layers, this will invoke the "install_cspace"
             method for pattern color spaces, the gx_install_Pattern
             (gspcolor.c). This will in turn invoke the "install_cspace" method
             for the base color space, in this case gx_install_CIE.
        
          5. Through a few additional layers, gx_install_CIE will also call
             gs_cie_cs_complete (see (1) above), but this time the "init"
             variable will be set to true, indicating that additional
             initialization is required.
        
             gs_cie_cs_complete will invoke gx_currentciecaches, whose purpose
             is to make sure that new copies of the joint CIE cache is created
             when necessary. Since the reference count on the existing cache is
             larger than 1 (see (2) above), a unique copy of the cache is created
             and is marked as invalid.
        
          6. Subsequently, when drawing is attempted in the base color (the
             pattern has PaintType 2), the code will note that the cache is
             not yet valid and invoke cie_joint_caches_init (gscie.c). This
             routine can do nothing, however, because the TransformPQR structure
             for the cie_render structure in the graphic state is set to
             TransformPQR_from_cache, indicating that the only data available
             for the TransformPQR procedure is in the (now invalidated) cache.
        
             As a fall-back, the CIE color is mapped to RGB by setting all
             components to 0, which yields the black output.
        
        The proper fix for this problem is re-designing both the CIE color space
        and the color rendering structures so that they retain enough information
        to regenerate the joint CIE cache when necessary. Since that is a big
        change, the attached modifications take the more modest approach of adding
        a "forcesetcolorspace" operator, which will set a color space even if it
        is identical to the current color space.
        
        Also included in the set of changes is a minor modification to gs_rectfill
        (gsdps1.c) that suppresses direct access to the device's fill_rectangle
        procedure if both overprint and overprint mode are true. Since
        overprintmode must be applied prior to halftoning, the code must be forced
        through one of the higher-level methods which include the pre-halftoned
        device color information.
        
        Modified files:
        
          lib/gs_cspace.ps
            Added the _setcolorspace procedure, which accepts both a boolean and
            a color space dictionary. If the boolean is true, the color space
            will not be set if it is the same as the current color space (via a
            conservative evaluation).
        
            The setcolorspace pseudo-operator now invokes _setcolorspace with the
            boolean operand set to true. A new operator, forcesetcolorspace,
            invokes _setcolorspace with boolean set to false.
        
          lib/gs_devn.ps
          lib/gs_icc.ps
          lib/gs_indxd.ps
          lib/gs_patrn.ps
          lib/gs_sepr.ps
            Replaced setcolorspace with forcesetcolorspace when setting a base or
            alternative color space. This is necessary due to some problems in the
            handling of the the joint CIE cache in the graphic library.
        
          src/gsdps1.c
            Modify gs_rectfill to suppress direct access of a device's
            fill_rectangle method if both overprint and overprint mode are set
            to true. This is required to make sure the overprint compositor has
            access to pre-halftoned device color information with which to
            implement overprint mode.
        

Tue Jul 16 04:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * wrfont.ps [1.3] (+16 -13), viewpcx.ps [1.3] (+3 -3), viewpbm.ps [1.3] (+2 -2), 
        viewcmyk.ps [1.3] (+2 -2), unix-lpr.sh [1.2] (+4 -4), traceimg.ps [1.3] (+2 -2), 
        stcany_h.upp [1.2] (+3 -0), stcany.upp [1.2] (+3 -0), stc_l.upp [1.2] (+3 -0), 
        stc_h.upp [1.2] (+3 -0), stc800pl.upp [1.2] (+3 -0), stc800p.upp [1.2] (+3 -0), 
        stc800ih.upp [1.2] (+3 -0), stc640p.upp [1.2] (+3 -0), stc600pl.upp [1.2] (+3 -0), 
        stc600p.upp [1.2] (+3 -0), stc600ih.upp [1.2] (+3 -0), stc500ph.upp [1.2] (+3 -0), 
        stc500p.upp [1.2] (+3 -0), stc300bm.upp [1.2] (+3 -0), stc300bl.upp [1.2] (+3 -0), 
        stc300.upp [1.2] (+3 -0), stc2s_h.upp [1.2] (+3 -0), stc2_h.upp [1.2] (+3 -0), 
        stc200_h.upp [1.2] (+3 -0), stc2.upp [1.2] (+3 -0), stc1520h.upp [1.2] (+3 -0), 
        stc.upp [1.2] (+3 -0), st640plg.upp [1.2] (+3 -0), st640pl.upp [1.2] (+3 -0), 
        st640pg.upp [1.2] (+3 -0), st640p.upp [1.2] (+3 -0), st640ihg.upp [1.2] (+3 -0), 
        st640ih.upp [1.2] (+3 -0), rollconv.ps [1.2] (+2 -2), ps2epsi.ps [1.3] (+41 -55), 
        ps2epsi.cmd [1.2] (+4 -1), ps2epsi.bat [1.2] (+4 -1), ps2ascii.ps [1.3] (+6 -6), 
        prfont.ps [1.2] (+13 -11), pdfopt.ps [1.3] (+3 -3), pdf_sec.ps [1.3] (+2 -2), 
        pdf_ops.ps [1.3] (+24 -8), pdf_main.ps [1.3] (+27 -14), 
        pdf_font.ps [1.3] (+275 -49), pdf_draw.ps [1.3] (+55 -39), 
        pdf_base.ps [1.3] (+50 -16), pdf2dsc.ps [1.3] (+3 -2), packfile.ps [1.3] (+2 -2), 
        gslp.ps [1.3] (+4 -4), gs_typ32.ps [1.3] (+2 -2), gs_ttf.ps [1.3] (+28 -21), 
        gs_trap.ps [1.3] (+2 -2), gs_statd.ps [1.3] (+4 -1), gs_setpd.ps [1.6] (+8 -1), 
        gs_res.ps [1.3] (+12 -29), gs_pdfwr.ps [1.3] (+1 -8), gs_ll3.ps [1.5] (+2 -2), 
        gs_lev2.ps [1.4] (+10 -26), gs_init.ps [1.6] (+28 -21), 
        gs_fonts.ps [1.3] (+2 -2), gs_fapi.ps [1.3] (+4 -3), gs_diskn.ps [1.1] (+214 -0), 
        gs_cmap.ps [1.3] (+72 -7), gs_cidfn.ps [1.3] (+4 -3), gs_cff.ps [1.3] (+54 -44), 
        gs_btokn.ps [1.3] (+25 -24), font2pcl.ps [1.3] (+7 -7), 
        fixmswrd.pl [1.2] (+1 -3), cidfmap [1.2] (+2 -2), bdftops.ps [1.3] (+7 -7), 
        FAPIfontmap [1.2] (+2 -2), FAPIcidfmap [1.2] (+2 -2):
        backward merge of 7.22 to the devicen branch.
        

Tue Jun 25 18:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gs_ll3.ps [1.4] (+5 -1):
        Modified Files:
        
          lib/gs_ll3.ps
            Added code to create the setoverprintmode and currentoverprintmode
            operators.
        
          src/gconf.c
            Add the gx_compositor_list array, to list the set of compositor
            types compiled into the system. Also provided the gs_find_compositor
            procedure, to locate a compositor method vector based on its
            type identifier.
        
          src/gdevdgbr.c
            Fixed several bugs in gx_get_bits_copy, for cases in which the
            transfer of output data involves a skew (bit shift) but no color
            conversion (a case that is apparently used only by the overprint
            facility). This case uses the copy_mono method for the 1-bit
            memory device. The invocation of this method had two problems:
        
              1. The temporary device created for the transfer had uninitialized
                 width and height fields. Because copy_mono will invoke the
                 fit_copy macro, these fields must be set to reasonable values.
        
              2. The width passed to copy_mono must be bit-width, as the
                 method for a depth == 1 device is used. Previously, the
                 pixel width was used.
        
          src/gdevx.c
            Fixed a problem in x_copy_image. If the image passed to this routine
            contains more than one pixel, the colors_and and colors_or fields were
            not updated. Because these fields are only used for optimization, and
            properly updating them in this situation is potentially expensive,
            they are now just set to safe values (colors_and = 0;
            colors_or = (x_pixel)(-1)).
        
          src/genconf.c
            Added to "-comp" option to support construction of a list of
            compositors compiled into the system.
        
          src/gs.mak
            Added the SETCOMP and ADDCOMP macros, to provide access to the
            -comp option of genconf.c.
        
          src/gsalphac.c
            Exported the gs_composite_alpha_type structure, and added a compositor
            type identifier to this structure. Also modified the de-serialization
            (read) method for this size so that the data string provided be large
            enough but not necessarily exactly the right size, and to return the
            number of bytes actually read (or an error code).
        
          src/gscdefs.h
            Added a prototye for gs_find_compositor (see gconf.c above).
        
          src/gscolor.c
            Modified gx_set_device_color_1 to turn off overprint (and overprint
            mode).
        
          src/gsovc.c:
            1. Modified the de-serialization method (read) to return the number of
               bytes actually read (or an error code).
            2. Renamed gs_overprint_type to be gs_composite_overprint_type, so as
               to conform to the new convention for compositor names.
            3. For the overprint devices, set the get_xfont_procs, get_xfont_device,
               and text_begin methods to use the corresponding default methods,
               rather than the forwarding methods. Device-supported fonts are
               incompatible with overprint, as the required low-level calls may
               not be made. While the text_begin method is not itself a rendering
               method, it does record an imaging device, and this device must
               be the overprint device rather than the target device. If the
               forwarding text_begin method is used, the recorded imaging device
               would be the target device.
            4. Modified update_overprint_params to avoid use of the overprint
               devices for cases in which overprint is true, but all color
               components are to be drawn. Though the output is not changed, use
               of the non-overprint device improves performance in this case.
            5. Modified the default overprint compositor creation method
               (c_overprint_create_default_compositor) to ignore overprint
               requests if the current color model has only a single component.
               Overprinting can never have an effect in this situation, and
               avoiding these cases also avoids difficulties with mask caching
               devices (such as are used with the character cache).
        
          src/gsstate.c
            Modified gs_state_update_overprint to update the color model mapping
            procedures and unset the device color. Though updating the overprint
            status will never change the color model, the overprint devices
            require a special set of forwarding color model mapping procedures.
        
          src/gxclimag.c
            Implemented the clist_create_compositor procedure (the create_compositor
            method for the command list device).
        
          src/gxclpath.c
            Replaced the cmd_opv_put_params code (0xdf) with cmd_opv_extend. This
            code indicates that the subsequent byte should be read and interpreted
            as a command from the gx_cmd_ext_op enumeration. Currently, this
            enumeration has two elements, cmd_opv_ext_put_params (the put_params
            method) and cmd_opv_ext_create_compositor (the create_compositor
            method).
        
          src/gxclrast.c
            1. Made the code parsing changes required by the new cmp_opv_extend
               code (see gxclpath.h above).
            2. Added the read_create_compositor procedure, to interpret the
               cmd_opv_ext_create_compositor command.
        
          src/gxclutil.c
            Modified cmd_put_params for the new cmp_opv_extend/cmd_opv_ext_put_params
            coding techinque.
        
          src/gxcmap.c
            Modified gx_set_cmap_procs to handle devices that have no
            get_color_mapping_procs method (such as mask caching devices).
        
          src/gxcomp.h
            Added the comp_id field to the gs_composite_type_t structure. Also
            added macros for the alpha and overprint compositors (the only two
            compositors in the current system).
        
          src/gxoprect.c
            Fixed typo in pack_scanline_lt8: the source data pointer was not
            being advanced.
        
          src/gxoprect.h
            Fixed typo in RCS identifier comment.
        
          src/lib.mak
            1. Updated several dependency lists.
            2. Added code to generate the list of compiled compositors.
        

Tue Jun  4 05:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gs_setpd.ps [1.5] (+5 -2), gs_init.ps [1.5] (+8 -3):
        code set from ORIMP to enable overprint and overprint mode.
        
        New Files:
        
          src/gxoprect.c
          src/gxoprect.h
            These files provide the low-level code for the fill_rectangle method
            of the overprint compositor device. There are three such procedures,
            which are used in different circumstances:
        
              gx_overprint_generic_fill_rectangle is always applicable, but is
                very slow as it must decode and re-encode the color for each pixel.
        
              gx_overprint_sep_fill_rectangle_1 is applicable to separable and
                linear color encodings whose depth is a divisor of
                8 * sizeof(mono_fill_chunk) = 32. This is always the
                case if depth &lt;= 8. The code used in this case is, once past a
                large amount of setup, about as fast as can be achieved while
                using get_bits_rectangle.
        
              gx_overprint_sep_fill_rectangle_2 is applicable to all other
                separable and linear color encodings (all of which will have
                depth % 8 = 0). This uses a byte-wise method which is in principle
                slower than what could be achieved with a chunk-wise method, but
                is much easier to code in the general case (i.e.: for multiple
                possible depths). It will likely be faster in practice.
        
        Modified Files:
        
          lib/gs_init.ps
          lib/gs_setpd.ps
            Modified erasepage (and several other bits of code that erase the
            page) to turn off overprint before filling the page. This is necessary
            to preserve the meaning of erasepage.
        
          src/gsbitops.c
          src/gsbitops.h
            Added the bits_fill_rectangle_masked procedure, a generalization of
            the bits_fill_rectangle procedure that allows for a component mask.
            Also generalized bits_fill_rectangle (and bits_fill_rectangle_masked)
            to support depth &gt; 8, so long as
            (8 * sizeof(mono_fill_chunk)) % depth = 0.
        
            Currently, bits_fill_rectangle_masked is used only by the overprint
            compositor device, but it can also be used by devices that can
            directly implement overprint (such as the memory device).
        
          src/gscdevn.c
            Modified check_DeviceN_component_names to initialize the
            component_map.sep_type field of the imager state to SEP_OTHER.
            Previously this field was not set for DeviceN color spaces, which
            confused some of the overprint code.
        
          src/gsovrc.c
            Implemented the real overprint_fill_rectangle procedures. As part of
            this work, added the local procedure swap_color_index, that swaps
            bytes in a color index as required to work with byte-oriented bitmaps
            on little-endian devices (only if depth &gt; 8).
        
            Also fixed a parity bug in the creation of the retain_mask.
        
          src/gsovrc.h
            Fixed typo (/* $Id$Id:$ */).
        
          src/gxdcconv.c
            Modified color_rgb_to_cmyk to work if the imager state pointer
            operand is a null pointer. Note that in this case full undercolor
            removal and black generation will be performed, which is consistent
            with other such conversions in the code that do not have access to
            the imager state, but differs from the mapping used if the imager
            state is available but has no blackgeneration or undercolor removal
            map.
        
          src/lib.mak
            Added the gxoprect.$(OBJ) target and included this as a dependency
            in LIB4s. Also updated some other dependency lists.
        
        
        Additional file modified (not for overprint but needed for release):
        
          src/gdevdflt.c
            Added code to select a reasonable default value for the decode_color
            method, as this method is used extensively by the generic overprint
            implementation routines. The modifications are just a first pass to
            allow us to test the overprint code; they are not intended as a
            final solution.
        

Wed May 29 06:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gs_setpd.ps [1.4] (+21 -4), gs_sepr.ps [1.2] (+2 -1), 
        gs_patrn.ps [1.2] (+3 -1), gs_init.ps [1.4] (+4 -3), gs_indxd.ps [1.2] (+3 -2), 
        gs_icc.ps [1.4] (+5 -4), gs_devpxl.ps [1.2] (+2 -1), gs_devn.ps [1.2] (+2 -1), 
        gs_devcs.ps [1.2] (+4 -1), gs_cspace.ps [1.2] (+87 -37), 
        gs_ciecs3.ps [1.2] (+3 -1), gs_ciecs2.ps [1.2] (+3 -1):
        checkin for three separate code set releases from ORIMP, release
        notes follow in reverse chronological order.
        
        Notes:
        
         Modified files:
        
          gsstate.c
            Added code to ignore an error return from the create_compositor call
            in gs_state_update_overprint if the call was made to turn off
            overprint. This avoids errors for device configurations that do not
            (yet) support the create_compositor call, when running files that do
            not require overprint support.
        
          gsovrc.h
            Fixed a typo in a commment.
        
          gxclrast.c
            Fixed a re-entrancy problem in read_set_color_space that was introduced
            by the previous modification to this file.
        
          gsimage.c
            Added a comment concerning re-entrancy, and slightly modified another
            comment.
        
          gscspace.c
            Added some comments concerning re-entrancy.
        
        Notes:
        
        Modified Files:
        
          src/gsovrc.c
            Added full compositor device "plumbing". The overprint compositor
            now does all of the required device creation and setup work. The
            only piece still missing are implementations of the low-level
            rendering routines that actually implement overprint.
        
          src/gsptype1.c
          src/gsptype2.c
          src/gxcht.c
          src/gxdcolor.c
          src/gxdcolor.h
          src/gxht.c
          src/gxpcolor.h
            Added the method get_nonzero_comps to the gx_device_color_type_t
            structure (the gx_device_color methods). This method is used by
            the overprint code to determine which color component intensities
            have non-zero value, which must be known to implement overprint
            mode.
        
          src/gsovrc.h
          src/gscspace.c
            Changed the drawn_comps field of the gs_overprint_params_t
            structure from a byte array to a gx_color_index. This is a bit
            ugly, as the value is a bit map rather than an encoded color,
            but allows much simpler processing. (As in device colors, a
            gx_color_index is used because it is known to be large enough.
        
          src/lib.mak
            Updated dependency list for gsovrc.$(OBJ).
        
        Notes:
        
        New Files:
        
          src/gsovrc.c
            Implementation of the overprint compositor. For the moment, this is
            just a stub. This file will grow considerably in the next two releases.
        
        
          src/gsovrc.h
            Interface to the overprint compositor. This is in essentially final
            form, even though only a stub implementation of the compositor is
            available. This file also includes a lengthy comment describing when
            the compositor must be updated.
        
        
        Modified Files:
        
          lib/gs_ciecs2.ps
          lib/gs_ciecs3.ps
          lib/gs_cspace.ps
          lib/gs_devcs.ps
          lib/gs_devn.ps
          lib/gs_devpxl.ps
          lib/gs_icc.ps
          lib/gs_indxd.ps
          lib/gs_patrn.ps
          lib/gs_sepr.ps
            Incorporated an optimization of setcolorspace from the casper head.
            The optimization avoids setting the color space if it is the same as
            the current color space. gs_icc.ps also contains a fix for a bug
            in the handling of DataSources that are streams (rather than strings;
            Dan discovered and analyzed this bug).
        
            Note that this is a fairly complex optimization, and there were many
            problems with the head code that needed to be resolved. Among these
            were:
        
              1. An invocation of setcolorspace should always set the default
                 color for the operand color space, even if that color space is
                 identical to the current color space.
        
              2. If UseCIEColor is true, setcolorspace must be executed if
                 the operand color space involves device-specific color spaces.
                 This is because the Default{Gray,RGB,CMYK} instances of the
                 ColorSpace resource category may have changed.
        
              3. When UseCIEColor is changed from true to false in setpagedevcie,
                 the implicit initgraphics invocation must perform a setcolorspace
                 operation, even if the current color space is DeviceGray. This
                 is necessary to ensure that the un-substituted DeviceGray color
                 space is set as the current color space.
        
        
          lib/gs_init.ps
            In /showpage, replace the sequence "erasepage ... initgraphics" with
            "initgraphics 1 setcolor .fillpage 0 setcolor". This has the desired
            effect, and avoids two unnecessay invocations of setcolorspace.
        
        
          lib/gs_setpd.ps
            1. Modified the currentpagedevice pseudo-operator for cases in which
               the stored page device must be copied. Previously, the new copy
               was allocated in the current VM mode, which could cause
               invalidaccess errors if currentpagedevice was invoked while in
               global VM mode and composite objects stored in the page device
               dictionary were in local VM (this problem is present in the PS3
               FTS). The new code will allocate the copy in the save VM as the
               original dictionary.
        
            2. In setpagedevice, added code to set current color space to
               something other than DeviceGray if modification of the page device
               will set UseCIEColor to false. This is necessary for the
               setcolorspace optimization to function properly (see above).
        
            3. In the .postinstall pseudo-operator, replaced "erasepage initgraphics"
               with "initgraphics 1 setcolor .fillpage 0 setcolor". This avoids
               two unnecessary invocations of setcolorspace.
        
        
          src/gdevp14.c
            Added the pdf14_create_compositor method. This method will check if
            the compositor to be created is the overprint compositor. If so,
            the request to create the compositor will simply be ignored, as
            the gs_pdf14_device and its associated marking device must implement
            overprint directly.
        
        
          src/gscdevn.c
            1. Removed the equality check method.
        
            2. Added the set_overprint method for DeviceN color spaces.
        
        
          src/gscolor2.c
            1. Removed the equality check method.
        
            2. Added the set_overprint method for Indexed color spaces.
        
        
          src/gscpixel.c
            1. Removed the equality check method.
        
            2. Added the set_overprint method for DevicePixel color spaces.
        
        
          src/gscscie.c
            1. Removed the equality check method.
        
            2. Added the set_overprint method for CIEBased color spaces.
        
        
          src/gscsepr.c
            1. Removed the equality check method.
        
            2. Added the set_overprint method for Separation color spaces.
        
            3. Moved the gs_{set|current}overprint[mode] procedures to gsstate.c.
        
        
          src/gscsepr.h
            Moved prototypes for the gs_{set|current}overprint[mode] procedures
            to gsstate.h.
        
        
          src/gscspace.c
            1. Removed the color space equality check methods for the device-
               specific color spaces.
        
            2. Added the basic set_overprint procedures, to provide color-space
               specific setting of the overprint compositor.
        
            3. Modified the gs_cspace_{build|init}_Device{Gray|RGB|CMYK}
               procedures to use the same identifier for all instances of
               the parameterless color spaces (i.e.: all DeviceGray instances
               will have the same id, as will all DeviceRGB instances, but the
               id for any DeviceGray will differ from the id for a DeviceRGB
               instance). This enables an optimization in the gs_setcolorspace
               routine that had been lost in the previous code modification.
        
        
          src/gscspace.h
            Removed prototype for the gs_color_space_equal procedure.
        
        
          src/gsicc.c
            1. Removed the equality check method.
        
            2. Added the set_overprint method for ICCBased color spaces.
        
        
          src/gslib.c
            Modified test9 to explicitly reset the current color space; this
            is no longer done by gs_initgraphics.
        
        
          src/gspcolor.c
            Added set_overprint method for pattern color spaces, removed the
            equality check method.
        
        
          src/gsstate.c
            1. Added code to update the overprint compositor when the current
               color space, current device, overprint, or overprint mode
               settings change. Included in this change is code in gs_grestore_only
               that updates the overprint compositor as part of the grestore
               operation when this is required.
        
            2. Moved the gs_{set|current}overprint[mode] procedures to this file
               from gscsepr.c. This is more convenient for the new code, and
               gscsepr.c was never a particularly appropriate place for these
               routines.
        
            3. Modified gs_initgraphics to not reset the current color space or
               current color. For PostScript this must now be done in the
               PostScript code to properly handle color space substitution.
               Other clients that use this procedure (the XL interpreter is the
               only one (aside from gslib.c)) can easily reset these parameters
               as well.
        
        
          src/gsstate.h
            Moved prototypes for the gs_{set|current}overprint[mode] procedures
            here from gscsepr.h.
        
        
          src/gxccache.c
            Modified gx_image_cached_char to just return if the current color
            is a pure gx_no_color_index (transparent).
        
        
          src/gxcspace.h
            1. Removed the equality check method.
        
            2. Added the set_overprint method.
        
        
          src/gxipixel.c
            Modified the gx_image_enum_begin to allow the Decode array for
            imagemasks to have any two distinct numbers, rather than just 0 and
            1. This matches the behavior of all Adobe systems (though not the
            documentation), and avoids some spurious failures when running the
            FTS.
        
        
          src/gxpcmap.c
            Modified pattern_accum_copy_mono to just return if both the foreground
            and background colors are gx_no_color_index (transparent). If this is
            not done, the mask device's copy_mono procedure may generate an
            error when invoked (this is true for mem_mono_copy_mono).
        
        
          src/iutil.c
            Modified obj_eq to consider two 0-length arrays to be equal,
            irrespective of their type and their pointers (the latter aren't
            meaningful if the array length is 0). This matches the PostScript
            documentation and the behavior of Adobe systems. It also fixes
            some spurious failures in the FTS.
        
        
          src/lib.mak
            Added an entry for gsovrc (the overprint compositor), and updated
            various dependency lists.
        
        
          src/zfdcte.c
            Modified the DCTEncode procedure (zDCTE) to allocate the
            jpeg_compress_data and subsidiary memory structures in current VM.
            Previously these structures were allocated in gs_default_memory,
            which does not support garbage collection. Since the structures
            were subject to garbage collection and relocation, chaos could
            and, in the case of FTS file 119-28.ps, did ensue.
        
            Note that these structure must be allocated immovable, which
            requires a considerable amount of overhead when using VM. A better
            approach would be to allocate them in gs_default_memory, and use
            a more sophisticated structure descriptor for the stream_DCT_state
            structure (st_DCT_state).
        
        
          src/zgstate.c
            Slightly simplified zinitgraphics, and updated a comment in this
            procedure.
        
        
          src/zmisc.c
            Modified realtime operator to set a zero point at boot time. This
            avoids an annoying delay in running FTS panel 211-01 (206-01.ps).
        
        
          zpcolor.c
            Modified the pattern_paint_prepare procedure to use gs_setdevice_no_int
            rather than gx_set_device_only. It is not clear why the latter
            procedure was ever used in this location, and it is now important to
            use the former procedure so the overprint compositor may be properly
            updated.
        

Mon May 13 21:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * gs_setpd.ps [1.3] (+15 -1), gs_sepr.ps [1.1] (+264 -0), 
        gs_patrn.ps [1.1] (+297 -0), gs_ll3.ps [1.3] (+5 -98), gs_lev2.ps [1.3] (+20 -189), 
        gs_init.ps [1.3] (+25 -2), gs_indxd.ps [1.1] (+203 -0), 
        gs_img.ps [1.1] (+645 -0), gs_icc.ps [1.3] (+207 -79), gs_dpnxt.ps [1.3] (+23 -1), 
        gs_devpxl.ps [1.1] (+77 -0), gs_devn.ps [1.1] (+177 -0), 
        gs_devcs.ps [1.1] (+204 -0), gs_cspace.ps [1.1] (+871 -0), 
        gs_ciecs3.ps [1.1] (+121 -0), gs_ciecs2.ps [1.1] (+145 -0):
        Overprint implementation (Jan Stoeckenius)
        
        This is a preliminary code release for the overprint capability. The
        release does not contain the overprint facility itself; it consists
        entirely of modifications so that color space changes will occur in a
        predictable fashion.
        
        Files removed:
        
          src/gshsb.c
          src/gshsb.h
          src/gscssub.c
          src/gscssub.h
          src/zhsb.c
        
        
        Files added:
        
          lib/gs_cspace.ps      PostScript portion of the basic color space handling;
                                see the extensive comment at the head of the file
                                for information. Note that color space substitution
                                and the hue-saturation-brightness (HSB) color space
                                are now fully implemented in the PostScript code;
                                the interpreter and the graphic library are no longer
                                involved in or even aware of these features.
        
          lib/gs_devcs.ps       Implementation of the DeviceGray, DeviceRGB, and
                                DeviceCMYK color spaces.
        
          lib/gs_ciecs2.ps      Implementation of the LangaugeLevel 2 CIEBased color
                                spaces: CIEBasedA and CIEBasedABC.
        
          lib/gs_ciecs3.ps      Implementation of the LanguageLevel 3 CIEBased color
                                spaces: CIEBasedDEF and CIEBasedDEFG
        
          lib/gs_devpxl.ps      Implementation of the DevicePixel color spaces
        
          lib/gs_indxd.ps       Implementation of the Indexed color space.
        
          lib/gs_sepr.ps        Implementaton of the Separation color space.
        
          lib/gs_devn.ps        Implementation of the DeviceN color space.
        
          lib/gs_patrn.ps       Implementation of the Pattern color space.
        
        
          lib/gs_img.ps         Implementation of the traditional (non-dictionary)
                                form of the image and imagemask operators, and the
                                colorimage operator (including the Next alphaimage
                                facility). The interpreter now provides only the
                                dictionary form of the image and imagemask operators,
                                including a variation that provides alpha-channel
                                support.
        
                                Also modified the handling of color spaces for
                                ImageType 2 images. This slightly changes the behavior
                                of these images. If PixelCopy is defined to be true
                                in the image dictionary but such a copy cannot be
                                supported, an error will be generated. This is in
                                agreement with Adobe's documentation, but differs
                                from the earlier behavior.
        
          The code for Indexed, Separation, and DeviceN color spaces
          incorporates code, courtesy of Dan, that will invoke the lookup or
          tint transform procedure in the appropriate context if this is
          appropriate (if there is a lookup procedure for Indexed color spaces
          or the alternate color space is in use for Separation and DeviceN
          color spaces). Currently this is not done recursively (if an Indexed
          color space has a DeviceN base color space, for example), but that
          has not proven necessary in practice. If necessary, it can be added.
        
        
          src/zcolor3.c         Code to implement the .setuseciecolor operator. This
                                operator is used only in the setpagedevice code, and
                                makes certain that the use_cie_color field in the
                                interpreter's graphic state mirrors the setting of
                                the UseCIEColor page device parameter.
        
        
        Files modified:
        
          lib/gs_dpnxt.ps       Added PostScript implementation of the alphaimage
                                operator. This uses the internal .alphaimage
                                operator, which is a variation of the image
                                operator that provide alpha-channel support.
        
          lib/gs_icc.ps         Rewritten to implement the ICCBased color space
                                in the new scheme. See the comments in
                                lib/gs_cspace.ps for information.
        
          lib/gs_init.ps        Modified to include gs_cspace.ps, gs_devcs.ps,
                                and gs_img.ps, and to remove img_util_dict and
                                .cspace_util_dict from userdict at the end of
                                initialization.
        
          lib/gs_lev2.ps        All explicit color spaces removed (with one
                                exception, and replaced by inclusion of gs_devpxl.ps,
                                gs_ciecs2.ps, gs_indxd.ps, gs_sepr.ps, and
                                gs_patrn.ps. The only remaining color space support
                                feature is moving the setcolorspace and setcolor
                                pseudo-operators, and the colorspacedict dictionary,
                                to level2dict. This must be done here, as it is not
                                known that level2dict exists when gs_cspace.ps is
                                first run.
        
                                Also removed all explicit image support. This is
                                now handled by gs_img.ps (see above).
        
          lib/gs_ll3.ps         Removed the old support for color space substitution;
                                this is now handled directly by the color space
                                code (see the comments in gs_cspace.ps for
                                information). Added inclusion of gs_ciecs3.ps and
                                gs_devn.ps.
        
          lib/gs_setpd.ps       Added support for the .getuseciecolor and
                                .setuseciecolor operators. This maintains a
                                "mirror" of the UseCIEColor parameter in the
                                graphic state, to allow fast access.
        
          src/gdevnfwd.c        In gx_forward_get_color_mapping_procs, added a check
                                for the case of a target device which has no
                                get_color_mapping_procs procedure. This led to a
                                segmentation violation crash for FTS file 296-01.ps
                                The fix may not be the correct one, as we are not
                                certain why a device would lack this method.
        
          src/gdevp14.c         Replaced a use of the shared field in the graphic state
                                with a color space allocated on the C-language stack.
        
          src/gdevpsdi.c        Replaced an instance of use of the gs_cspace_DeviceRGB
                                procedure.
        
          src/gscolor.c         Removed gs_currentgray and gs_currentrgbcolor. Modified
                                gs_setgray and gs_setrgbcolor to use gs_setcolorspace
                                and gs_setcolor. This eliminates use of the
                                gs_current_Device*_space routines.
        
          src/gscolor.h         Removed prototypes for gs_currentgray and
                                gs_currentrgbcolor.
        
          src/gscolor1.c        Removed gs_currentcmykcolor. Modified gs_setcmykcolor
                                to use gs_setgray and gs_setcolorspace.
        
          src/gscolor1.h        Removed prototype for gs_currentcmykcolor.
        
          src/gscolor2.c        Removed gs_currentcolorspace_index. Removed the color
                                index tracking used as part of the color space
                                substitution method.
        
          src/gscolor2.h        Removed prototype for gs_currentcolorspace_index.
        
          src/gscscie.c         Eliminated use of the gs_cspace_Device* routines.
        
          src/gscsepr.c         Fixed a pair of typos in revision 1.6 of the code.
                                In gs_cspace_set_sepr_proc and
                                gx_concretize_Separation, the code was still accessing
                                pcspace-&gt;params.device_n when it wanted to access
                                pcspace-&gt;params.separation. This caused a crash in
                                FTS file 245-01.ps.
        
          src/gscspace.c        Removed gs_cspace_Device* procedures.
        
          src/gscspace.h        Removed prototypes for gs_cspace_Device* procedures.
        
          src/gsimage.c         Removed use of the gs_cspace_DeviceGray procedure.
        
          src/gsiparam.h        Removed the gs_image_t_int_{gray, rgb, cmyk} macros.
        
          src/gsistate.c        Updated code to reflect removal of the shared field in
                                the imager state. As part of this, the
                                rc_free_imager_shared and gx_device_color_spaces_free
                                procedures were removed.
        
          src/gslib.c           Removed use of the gs_current_Device*_space and
                                gs_image_t_init_gray procedures.
        
          src/gspcolor.c        Removed reference to the orig_cspace_index field,
                                which is no longer part of the library's graphic
                                state.
        
          src/gsptype1.c        Eliminated use of the gs_cspace_DeviceGray procedure,
                                and insured that a color space is set as the current
                                color space before it is used.
        
          src/gsstate.c         Removed code that maintained the device_color_spaces
                                field (color space substitution), which is no longer
                                in the library's graphic state.
        
          src/gxclrast.c        Removed use of the gs_cspace_Device* procedures.
        
          src/gximage3x.c       Removed use of the gs_image_t_init_gray procedure.
        
          src/gximage2.c        Modified color space handling for ImageType 2 images.
                                Note that there was and still is a problem with the
                                handling of transformations in this code.
        
          src/gxistate.h        Removed the shared field of the imager state, all
                                associated structures and prototypes, and modified
                                the affected GC macros. The gx_device_color_spaces_t
                                structure was previously used in the graphic library's
                                state as well, but that use has been eliminated.
        
          src/gzstate.h         Removed the the device_color_spaces field, and modified
                                the requisite GC macros
        
          src/idparam.c         Modified dict_float_array_check_param to handle
                                packed (short or mixed) arrays.
        
          src/igstate.h         Added the use_cie_color field. This is a mirror for
                                the UseCIEColor parameter of the page device, used
                                because the currentpagedevice operator is potentially
                                expensive.
        
          src/iimage.h          Modified to restrict the interpreter to just the
                                dictionary form of the image and imagemask operator.
                                This removes the zimage_opaque_setup, zimage_data_setup,
                                and zimage_multiple prototypes, and moves the
                                image_params structure and the image1_setup
                                prototypes to this file (from iimage2.h).
        
          src/iimage2.h         Moved everything except the prototype for
                                process_non_source_image to iimage.h.
        
          src/iutil.c           Added process_float_array procedure, to allow packed
                                (short, mixed) arrays of numbers to be handled.
        
          src/iutil.h           Added prototype for the process_float_array procedure.
        
          src/zcolor.c          Removed:
                                  zcurrentgray, zcurrentrgbcolor,
                                  setgray, setrgbcolor
                                Moved (from zcolor2.c):
                                  zcurrentcolor, zcurrentcolorspace,
                                  zsetcolor, zsetcolorspace
                                Added:
                                  zgetuseciecolor   queries the use_cie_color field
                                                    in the interpreter state
                                  zsetdevcspace     sets a DeviceGray, DeviceRGB, or
                                                    DeviceCMYK color space
        
          src/zcolor1.c         Removed zcurrentcmykcolor, zsetcmykcolor, and
                                zcolorimage.
        
          src/zcolor2.c         Removed everything in prior version. Added
                                zusealternate, to test if an alternate color space
                                is being used (for a Separation, DeviceN, or ICCBased
                                color space), or if a base color space is in use
                                (for an Indexed or a Pattern color space that uses
                                a base space).
        
          src/zdpnext.c         Replace the alphaimage operator with .alphaimage,
                                which has the semantics of the dictionary form of
                                the image operator.
        
          src/zgstate.c         Modified the initgraphics operator to set the
                                colorspace.array field to a legitimate color space
                                (previously it was set to a null object). Also
                                inserted code to initialize the use_cie_color field
                                to false.
        
          src/zimage.c          Removed the traditional-form image and imagemask
                                operators (zimage and zimagemask), and moved the
                                dictionary form of these operators to this file
                                from zimage2.c. Also, added the has_alpha parameter
                                to the data_image_params and pixel_image_params
                                procedures, to support the .alphaimage operator.
        
          src/zimage2.c         Moved everything except the process_non_source_image
                                procedure to zimage.c.
        
          src/zimage3.c         Updated calls to data_image_params and
                                pixel_image_params to add has_alpha parameter.
        
          src/zmisc3.c          Removed .setsubstitutecolorspace operator.
        
          src/zpcolor.c         Modified .setpatternspace to handle a packed (short,
                                mixed) array operand.
        
          src/zshade.c          Modified build_mesh_shading to handle a packed (short,
                                mixed) DataSource array operand.
        
          src/ztrans.c          Modified calls to data_image_params and
                                pixel_image_params to add has_alpha operand.
        
          src/watclib.mak       Removed reference to the hsblib.dev, which no longer
                                exists and which, for some unknown reason, was directly
                                included in this makefile. Does anyone still use this
                                file?
        
          src/int.mak           Removed hsb.dev and the zimage2_l2 operators, added
                                zcolor3.c, updated various dependency lists.
        
          src/lib.mak           Removed hsblib.dev and gscssub.[ch], updated various
                                dependency lists. Note that this file has not yet
                                been modified to always compile with Level 3 support.
        

Fri Mar 15 23:00:00 2002 GMT        Henry Stiles    henrys@meerkat

        * zeroline.ps [1.2] (+11 -13), xlatmap [1.2] (+7 -6), wrfont.ps [1.2] (+11 -13), 
        winmaps.ps [1.2] (+11 -13), wftopfa.ps [1.2] (+11 -13), 
        viewps2a.ps [1.2] (+11 -13), viewpcx.ps [1.2] (+11 -13), 
        viewpbm.ps [1.2] (+11 -13), viewmiff.ps [1.2] (+11 -13), 
        viewjpeg.ps [1.2] (+15 -1), viewgif.ps [1.2] (+11 -13), 
        viewcmyk.ps [1.2] (+11 -13), unprot.ps [1.2] (+11 -13), 
        uninfo.ps [1.2] (+11 -13), type1ops.ps [1.2] (+11 -13), 
        type1enc.ps [1.2] (+11 -13), traceop.ps [1.2] (+11 -13), 
        traceimg.ps [1.2] (+11 -13), stocht.ps [1.2] (+13 -15), 
        stcolor.ps [1.2] (+11 -13), stcinfo.ps [1.2] (+11 -13), 
        showchar.ps [1.2] (+11 -13), ps2pdfwr [1.2] (+6 -6), ps2epsi.ps [1.2] (+11 -13), 
        ps2ascii.ps [1.2] (+16 -23), ps2ascii.cmd [1.2] (+4 -4), 
        ps2ascii.bat [1.2] (+4 -4), ps2ascii [1.2] (+2 -2), ps2ai.ps [1.2] (+11 -13), 
        printafm.ps [1.2] (+1 -0), pphs.ps [1.2] (+11 -13), ppath.ps [1.2] (+11 -13), 
        pfbtopfa.ps [1.2] (+11 -13), pdfwrite.ps [1.2] (+11 -13), 
        pdfopt.ps [1.2] (+62 -35), pdf_sec.ps [1.2] (+14 -11), pdf_ops.ps [1.2] (+45 -18), 
        pdf_main.ps [1.2] (+72 -46), pdf_font.ps [1.2] (+49 -48), 
        pdf_draw.ps [1.2] (+43 -25), pdf_base.ps [1.2] (+25 -20), 
        pdf2dsc.ps [1.2] (+13 -14), pcharstr.ps [1.2] (+11 -13), 
        packfile.ps [1.2] (+11 -13), markpath.ps [1.2] (+11 -13), 
        markhint.ps [1.2] (+11 -13), lines.ps [1.2] (+11 -13), landscap.ps [1.2] (+3 -1), 
        jispaper.ps [1.2] (+11 -13), impath.ps [1.2] (+11 -13), 
        image-qa.ps [1.2] (+11 -13), gsnup.ps [1.2] (+11 -13), gslp.ps [1.2] (+11 -13), 
        gs_wl5_e.ps [1.2] (+11 -13), gs_wl2_e.ps [1.2] (+11 -13), 
        gs_wl1_e.ps [1.2] (+11 -13), gs_wan_e.ps [1.2] (+11 -13), 
        gs_type1.ps [1.2] (+18 -29), gs_typ42.ps [1.2] (+11 -19), 
        gs_typ32.ps [1.2] (+11 -13), gs_ttf.ps [1.2] (+17 -13), 
        gs_trap.ps [1.2] (+11 -13), gs_sym_e.ps [1.2] (+11 -13), 
        gs_std_e.ps [1.2] (+11 -13), gs_statd.ps [1.2] (+11 -13), 
        gs_setpd.ps [1.2] (+19 -14), gs_resmp.ps [1.1] (+485 -0), 
        gs_res.ps [1.2] (+14 -13), gs_rdlin.ps [1.2] (+11 -13), 
        gs_pfile.ps [1.2] (+11 -13), gs_pdfwr.ps [1.2] (+123 -40), 
        gs_pdf_e.ps [1.2] (+11 -13), gs_mro_e.ps [1.2] (+11 -13), 
        gs_mgl_e.ps [1.2] (+11 -13), gs_mex_e.ps [1.2] (+11 -13), 
        gs_ll3.ps [1.2] (+11 -13), gs_lgx_e.ps [1.2] (+11 -13), 
        gs_lgo_e.ps [1.2] (+11 -13), gs_lev2.ps [1.2] (+147 -32), 
        gs_l2img.ps [1.2] (+11 -13), gs_ksb_e.ps [1.2] (+11 -13), 
        gs_kanji.ps [1.2] (+11 -13), gs_init.ps [1.2] (+120 -86), 
        gs_il2_e.ps [1.2] (+11 -13), gs_il1_e.ps [1.2] (+11 -13), 
        gs_icc.ps [1.2] (+11 -13), gs_frsd.ps [1.2] (+11 -13), gs_fonts.ps [1.2] (+33 -27), 
        gs_fform.ps [1.2] (+11 -13), gs_fapi.ps [1.2] (+476 -299), 
        gs_epsf.ps [1.2] (+11 -13), gs_dscp.ps [1.2] (+11 -13), 
        gs_dps2.ps [1.2] (+11 -13), gs_dps1.ps [1.2] (+11 -13), 
        gs_dps.ps [1.2] (+11 -13), gs_dpnxt.ps [1.2] (+11 -13), 
        gs_diskf.ps [1.2] (+11 -13), gs_dbt_e.ps [1.2] (+11 -13), 
        gs_css_e.ps [1.2] (+11 -13), gs_cmdl.ps [1.2] (+11 -13), 
        gs_cmap.ps [1.2] (+18 -15), gs_cidfn.ps [1.2] (+17 -16), 
        gs_cidfm.ps [1.1] (+125 -0), gs_ciddc.ps [1.1] (+208 -0), 
        gs_cidcm.ps [1.2] (+60 -144), gs_cff.ps [1.2] (+11 -13), 
        gs_ce_e.ps [1.2] (+11 -13), gs_ccfnt.ps [1.2] (+11 -13), 
        gs_btokn.ps [1.2] (+11 -13), gs_agl.ps [1.2] (+11 -13), 
        font2pcl.ps [1.2] (+11 -13), font2c.ps [1.2] (+11 -13), 
        errpage.ps [1.2] (+11 -13), docie.ps [1.2] (+11 -13), decrypt.ps [1.2] (+2 -0), 
        cidfmap [1.1] (+16 -0), cid2code.ps [1.2] (+11 -13), caption.ps [1.2] (+11 -13), 
        bdftops.ps [1.2] (+11 -13), align.ps [1.2] (+11 -13), addxchar.ps [1.2] (+11 -13), 
        Info-macos.plist [1.1] (+14 -0), Fontmap.Ult [1.2] (+11 -13), 
        Fontmap.Sol [1.2] (+11 -13), Fontmap.SGI [1.2] (+11 -13), 
        Fontmap.OS2 [1.2] (+11 -13), Fontmap.GS [1.2] (+11 -13), 
        Fontmap.ATM [1.2] (+11 -13), Fontmap.ATB [1.2] (+11 -13), 
        FAPIfontmap [1.1] (+33 -0), FAPIconfig [1.1] (+14 -0), FAPIcidfmap [1.1] (+32 -0):
        merges GS head.  This will not compile because pdf changes have not
        been added.  Please wait until the pdf changes are added before
        updating local trees.
        

Wed Oct 31 23:00:00 2001 GMT        Henry Stiles    henrys@meerkat

        * zeroline.ps [1.1] (+102 -0), xlatmap [1.1] (+48 -0), wrfont.ps [1.1] (+664 -0), 
        wmakebat.bat [1.1] (+4 -0), winmaps.ps [1.1] (+108 -0), 
        wftopfa.ps [1.1] (+305 -0), wftopfa [1.1] (+3 -0), viewps2a.ps [1.1] (+34 -0), 
        viewpcx.ps [1.1] (+152 -0), viewpbm.ps [1.1] (+186 -0), 
        viewmiff.ps [1.1] (+126 -0), viewjpeg.ps [1.1] (+144 -0), 
        viewgif.ps [1.1] (+162 -0), viewcmyk.ps [1.1] (+65 -0), 
        unprot.ps [1.1] (+69 -0), unix-lpr.sh [1.1] (+161 -0), uninfo.ps [1.1] (+222 -0), 
        type1ops.ps [1.1] (+239 -0), type1enc.ps [1.1] (+67 -0), 
        traceop.ps [1.1] (+85 -0), traceimg.ps [1.1] (+44 -0), sysvlp.sh [1.1] (+46 -0), 
        stocht.ps [1.1] (+64 -0), stcolor.ps [1.1] (+173 -0), stcinfo.ps [1.1] (+801 -0), 
        stcany_h.upp [1.1] (+24 -0), stcany.upp [1.1] (+24 -0), 
        stc_l.upp [1.1] (+26 -0), stc_h.upp [1.1] (+53 -0), stc800pl.upp [1.1] (+34 -0), 
        stc800p.upp [1.1] (+34 -0), stc800ih.upp [1.1] (+58 -0), 
        stc640p.upp [1.1] (+33 -0), stc600pl.upp [1.1] (+34 -0), 
        stc600p.upp [1.1] (+34 -0), stc600ih.upp [1.1] (+58 -0), 
        stc500ph.upp [1.1] (+48 -0), stc500p.upp [1.1] (+48 -0), 
        stc300bm.upp [1.1] (+43 -0), stc300bl.upp [1.1] (+40 -0), 
        stc300.upp [1.1] (+60 -0), stc2s_h.upp [1.1] (+57 -0), stc2_h.upp [1.1] (+53 -0), 
        stc200_h.upp [1.1] (+51 -0), stc2.upp [1.1] (+53 -0), stc1520h.upp [1.1] (+58 -0), 
        stc.upp [1.1] (+53 -0), st640plg.upp [1.1] (+34 -0), st640pl.upp [1.1] (+49 -0), 
        st640pg.upp [1.1] (+34 -0), st640p.upp [1.1] (+49 -0), st640ihg.upp [1.1] (+42 -0), 
        st640ih.upp [1.1] (+57 -0), showpage.ps [1.1] (+1 -0), showchar.ps [1.1] (+95 -0), 
        rollconv.ps [1.1] (+372 -0), ras8m.upp [1.1] (+8 -0), ras4.upp [1.1] (+8 -0), 
        ras32.upp [1.1] (+8 -0), ras3.upp [1.1] (+8 -0), ras24.upp [1.1] (+8 -0), 
        ras1.upp [1.1] (+8 -0), quit.ps [1.1] (+1 -0), pv.sh [1.1] (+37 -0), 
        ps2ps.cmd [1.1] (+36 -0), ps2ps.bat [1.1] (+23 -0), ps2ps [1.1] (+20 -0), 
        ps2pdfxx.bat [1.1] (+56 -0), ps2pdfwr [1.1] (+36 -0), ps2pdf14.cmd [1.1] (+11 -0), 
        ps2pdf14.bat [1.1] (+15 -0), ps2pdf14 [1.1] (+5 -0), ps2pdf13.cmd [1.1] (+11 -0), 
        ps2pdf13.bat [1.1] (+15 -0), ps2pdf13 [1.1] (+5 -0), ps2pdf12.cmd [1.1] (+11 -0), 
        ps2pdf12.bat [1.1] (+15 -0), ps2pdf12 [1.1] (+5 -0), ps2pdf.cmd [1.1] (+43 -0), 
        ps2pdf.bat [1.1] (+18 -0), ps2pdf [1.1] (+7 -0), ps2epsi.ps [1.1] (+263 -0), 
        ps2epsi.cmd [1.1] (+31 -0), ps2epsi.bat [1.1] (+28 -0), 
        ps2epsi [1.1] (+76 -0), ps2ascii.ps [1.1] (+1510 -0), ps2ascii.cmd [1.1] (+18 -0), 
        ps2ascii.bat [1.1] (+15 -0), ps2ascii [1.1] (+18 -0), ps2ai.ps [1.1] (+553 -0), 
        printafm.ps [1.1] (+146 -0), printafm [1.1] (+7 -0), prfont.ps [1.1] (+242 -0), 
        pphs.ps [1.1] (+223 -0), pphs [1.1] (+7 -0), ppath.ps [1.1] (+56 -0), 
        pj-gs.sh [1.1] (+289 -0), pftogsf.bat [1.1] (+20 -0), pfbtopfa.ps [1.1] (+36 -0), 
        pfbtopfa [1.1] (+16 -0), pf2afm.ps [1.1] (+495 -0), pf2afm.cmd [1.1] (+7 -0), 
        pf2afm.bat [1.1] (+17 -0), pf2afm [1.1] (+8 -0), pdfwrite.ps [1.1] (+285 -0), 
        pdfopt.ps [1.1] (+1127 -0), pdfopt.bat [1.1] (+22 -0), pdfopt [1.1] (+20 -0), 
        pdf_sec.ps [1.1] (+361 -0), pdf_ops.ps [1.1] (+522 -0), 
        pdf_main.ps [1.1] (+787 -0), pdf_font.ps [1.1] (+957 -0), 
        pdf_draw.ps [1.1] (+1152 -0), pdf_base.ps [1.1] (+641 -0), 
        pdf2ps.cmd [1.1] (+41 -0), pdf2ps.bat [1.1] (+24 -0), pdf2ps [1.1] (+29 -0), 
        pdf2dsc.ps [1.1] (+166 -0), pdf2dsc.bat [1.1] (+18 -0), 
        pdf2dsc [1.1] (+26 -0), pcharstr.ps [1.1] (+128 -0), packfile.ps [1.1] (+335 -0), 
        necp2x6.upp [1.1] (+35 -0), necp2x.upp [1.1] (+35 -0), markpath.ps [1.1] (+61 -0), 
        markhint.ps [1.1] (+132 -0), lprsetup.sh [1.1] (+189 -0), 
        lpr2.bat [1.1] (+5 -0), lpgs.bat [1.1] (+5 -0), lp386r2.bat [1.1] (+2 -0), 
        lp386.bat [1.1] (+2 -0), lines.ps [1.1] (+167 -0), level1.ps [1.1] (+2 -0), 
        landscap.ps [1.1] (+29 -0), jispaper.ps [1.1] (+29 -0), 
        impath.ps [1.1] (+181 -0), image-qa.ps [1.1] (+1828 -0), 
        ht_ccsto.ps [1.1] (+3171 -0), gstt.bat [1.1] (+5 -0), gst.bat [1.1] (+5 -0), 
        gssetgs.bat [1.1] (+8 -0), gsnup.ps [1.1] (+90 -0), gsndt.bat [1.1] (+5 -0), 
        gsnd.bat [1.1] (+5 -0), gsnd [1.1] (+3 -0), gslp.ps [1.1] (+696 -0), 
        gslp.bat [1.1] (+5 -0), gslp [1.1] (+3 -0), gslj.bat [1.1] (+5 -0), 
        gslj [1.1] (+3 -0), gsdj500.bat [1.1] (+5 -0), gsdj500 [1.1] (+3 -0), 
        gsdj.bat [1.1] (+5 -0), gsdj [1.1] (+3 -0), gsbj.bat [1.1] (+5 -0), 
        gsbj [1.1] (+3 -0), gs_wl5_e.ps [1.1] (+68 -0), gs_wl2_e.ps [1.1] (+68 -0), 
        gs_wl1_e.ps [1.1] (+68 -0), gs_wan_e.ps [1.1] (+48 -0), 
        gs_type1.ps [1.1] (+190 -0), gs_typ42.ps [1.1] (+52 -0), 
        gs_typ32.ps [1.1] (+129 -0), gs_ttf.ps [1.1] (+935 -0), 
        gs_trap.ps [1.1] (+105 -0), gs_t_m.xbm [1.1] (+8 -0), gs_t.xpm [1.1] (+28 -0), 
        gs_t.xbm [1.1] (+8 -0), gs_sym_e.ps [1.1] (+85 -0), gs_std_e.ps [1.1] (+75 -0), 
        gs_statd.ps [1.1] (+367 -0), gs_setpd.ps [1.1] (+769 -0), 
        gs_s_m.xbm [1.1] (+11 -0), gs_s.xpm [1.1] (+36 -0), gs_s.xbm [1.1] (+11 -0), 
        gs_res.ps [1.1] (+929 -0), gs_rdlin.ps [1.1] (+22 -0), gs_pfile.ps [1.1] (+129 -0), 
        gs_pdfwr.ps [1.1] (+496 -0), gs_pdf_e.ps [1.1] (+46 -0), 
        gs_mro_e.ps [1.1] (+63 -0), gs_mgl_e.ps [1.1] (+66 -0), 
        gs_mex_e.ps [1.1] (+68 -0), gs_m_m.xbm [1.1] (+16 -0), gs_m.xpm [1.1] (+44 -0), 
        gs_m.xbm [1.1] (+16 -0), gs_ll3.ps [1.1] (+470 -0), gs_lgx_e.ps [1.1] (+62 -0), 
        gs_lgo_e.ps [1.1] (+93 -0), gs_lev2.ps [1.1] (+866 -0), 
        gs_l_m.xbm [1.1] (+29 -0), gs_l2img.ps [1.1] (+186 -0), 
        gs_l.xpm [1.1] (+58 -0), gs_l.xbm [1.1] (+29 -0), gs_ksb_e.ps [1.1] (+66 -0), 
        gs_kanji.ps [1.1] (+160 -0), gs_init.ps [1.1] (+1845 -0), 
        gs_il2_e.ps [1.1] (+65 -0), gs_il1_e.ps [1.1] (+68 -0), 
        gs_icc.ps [1.1] (+116 -0), gs_frsd.ps [1.1] (+84 -0), gs_fonts.ps [1.1] (+1058 -0), 
        gs_fform.ps [1.1] (+94 -0), gs_fapi.ps [1.1] (+403 -0), 
        gs_epsf.ps [1.1] (+61 -0), gs_dscp.ps [1.1] (+120 -0), gs_dps2.ps [1.1] (+218 -0), 
        gs_dps1.ps [1.1] (+143 -0), gs_dps.ps [1.1] (+204 -0), gs_dpnxt.ps [1.1] (+114 -0), 
        gs_diskf.ps [1.1] (+226 -0), gs_dbt_e.ps [1.1] (+61 -0), 
        gs_css_e.ps [1.1] (+116 -0), gs_cmdl.ps [1.1] (+182 -0), 
        gs_cmap.ps [1.1] (+455 -0), gs_cidfn.ps [1.1] (+393 -0), 
        gs_cidcm.ps [1.1] (+498 -0), gs_cff.ps [1.1] (+759 -0), 
        gs_ce_e.ps [1.1] (+49 -0), gs_ccfnt.ps [1.1] (+77 -0), gs_btokn.ps [1.1] (+322 -0), 
        gs_agl.ps [1.1] (+1071 -0), font2pcl.ps [1.1] (+605 -0), 
        font2c.ps [1.1] (+677 -0), font2c.cmd [1.1] (+7 -0), font2c.bat [1.1] (+5 -0), 
        font2c [1.1] (+3 -0), fixmswrd.pl [1.1] (+208 -0), errpage.ps [1.1] (+364 -0), 
        eps2eps.cmd [1.1] (+36 -0), eps2eps.bat [1.1] (+26 -0), 
        eps2eps [1.1] (+20 -0), dvipdf [1.1] (+40 -0), docie.ps [1.1] (+220 -0), 
        dnj750m.upp [1.1] (+59 -0), dnj750c.upp [1.1] (+47 -0), 
        decrypt.ps [1.1] (+13 -0), cid2code.ps [1.1] (+162 -0), 
        cdj690ec.upp [1.1] (+54 -0), cdj690.upp [1.1] (+52 -0), 
        cdj550.upp [1.1] (+48 -0), cbjc800.ppd [1.1] (+389 -0), 
        cbjc600.ppd [1.1] (+404 -0), caption.ps [1.1] (+58 -0), 
        bjc610b8.upp [1.1] (+44 -0), bjc610b7.upp [1.1] (+44 -0), 
        bjc610b6.upp [1.1] (+44 -0), bjc610b4.upp [1.1] (+45 -0), 
        bjc610b3.upp [1.1] (+44 -0), bjc610b2.upp [1.1] (+44 -0), 
        bjc610b1.upp [1.1] (+44 -0), bjc610a8.upp [1.1] (+44 -0), 
        bjc610a7.upp [1.1] (+44 -0), bjc610a6.upp [1.1] (+44 -0), 
        bjc610a5.upp [1.1] (+44 -0), bjc610a4.upp [1.1] (+45 -0), 
        bjc610a3.upp [1.1] (+44 -0), bjc610a2.upp [1.1] (+44 -0), 
        bjc610a1.upp [1.1] (+44 -0), bjc610a0.upp [1.1] (+44 -0), 
        bj8ts06n.upp [1.1] (+44 -0), bj8pp12f.upp [1.1] (+44 -0), 
        bj8pa06n.upp [1.1] (+44 -0), bj8oh06n.upp [1.1] (+44 -0), 
        bj8hg12f.upp [1.1] (+44 -0), bj8gc12f.upp [1.1] (+44 -0), 
        bj8.rpd [1.1] (+17 -0), bdftops.ps [1.1] (+797 -0), bdftops.cmd [1.1] (+7 -0), 
        bdftops.bat [1.1] (+5 -0), bdftops [1.1] (+3 -0), align.ps [1.1] (+75 -0), 
        afmdiff.awk [1.1] (+150 -0), addxchar.ps [1.1] (+359 -0), 
        acctest.ps [1.1] (+99 -0), Fontmap.VMS [1.1] (+424 -0), 
        Fontmap.Ult [1.1] (+148 -0), Fontmap.Sol [1.1] (+488 -0), 
        Fontmap.SGI [1.1] (+407 -0), Fontmap.OSF [1.1] (+163 -0), 
        Fontmap.OS2 [1.1] (+216 -0), Fontmap.GS [1.1] (+405 -0), 
        Fontmap.ATM [1.1] (+187 -0), Fontmap.ATB [1.1] (+170 -0), 
        Fontmap [1.1] (+3 -0):
        Initial checkin gs 7.10
        

</pre></body></html>
