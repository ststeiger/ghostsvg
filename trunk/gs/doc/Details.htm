<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"   "http://www.w3.org/TR/html4/strict.dtd"><html>
<head>
<title>Ghostscript change history (detailed)</title></title>
<link rel=stylesheet type="text/css" href="gs.css"></head>
<body>

<p><strong><a name="2003-04-09_2258"></a>
2003-04-09 22:58 Ralph Giles</strong></p>
<blockquote><pre>
Add news script to generate split abbreviated/detailed changelogs in the new
format. Accepts xml input from the cvs2cl perl script.

DETAILS:

After the 8.00 release we switched to a new format for Changes.htm and the
History files, based on the more traditional Changelog format instead of
grouping commits by section, which often resulted in duplicate posts. At
the same time we began a convention of including any notes too extensive
for such a listing below a 'DETAILS:' separator, with the idea that we'd
create two changelogs, with hyperlinks between so detailed information was
still available even in the new easier to browse format.

The method we've adopted uses the cvs2cl perl script, available from
http://www.red-bean.com/cvs2cl/ to parse the output of 'cvs log' and
generate an xml file containing the merged entries. This script is
more robust than our own cvs2hist. The split_changelog.py script is
then run to convert the xml changelog to the two sizes of linked html
changelogs.

split_changelog isn't very bright about constructing links, so it should
be run from inside the doc directory for now.
</pre></blockquote>

<p><strong><a name="2003-04-09_1857"></a>
2003-04-09 18:57 Igor Melichev</strong></p>
<blockquote><pre>
Fix : Ignore a small noise skewing in the character caching criterion.
</pre></blockquote>

<p><strong><a name="2003-04-09_1847"></a>
2003-04-09 18:47 Igor Melichev</strong></p>
<blockquote><pre>
Fix (type1 hinter) : The overshoot suppressing code was wrong.
Bug 686812 "Incorrect font rendering for Zapfino ampersand".

DETAILS :

It always restricted overshoots with 1 pixel due to a stupid error in code.

This patch causes differences in almost tests with 300 dpi,
and with 3 tests at 72 dpi.
</pre></blockquote>

<p><strong><a name="2003-04-08_1849"></a>
2003-04-08 18:49 Dan Coby</strong></p>
<blockquote><pre>
The previous change removing the spotrgb device missed src/Makefile.in.
This change corrects that omission.
</pre></blockquote>

<p><strong><a name="2003-04-08_1701"></a>
2003-04-08 17:01 Raph Levien</strong></p>
<blockquote><pre>
Fix: Restores logic to improve shading quality, which was clobbered in
DeviceN merge.
</pre></blockquote>

<p><strong><a name="2003-04-08_1642"></a>
2003-04-08 16:42 Igor Melichev</strong></p>
<blockquote><pre>
pdfwrite : Don't convert Type 3 fonts to raster fonts.

DETAILS :

The main work is done with pdf_install_charproc_accum and
pdf_end_charproc_accum. They forward a BuildChar/BuildGlyph output
to a separate graphic stream. See the big comment at the end of pdf_text_process.

The new function gx_default_text_restore_state restores graphic
state of PS interpreter when we discontinue the default text enumeration
after executing a PS charproc. New state variable gx_device_pdf::accum_char_proc
sets a special mode for graphic handlers.

We ever clip BuildChar/BuildGlyph with a FontBBox or with character bbox
specified in setcachedevice*. Doing so with calling gx_clip_to_rectangle
from pdf_text_set_cache, because we need to avoid the
current PS clipping path to interfere the character proc.
Possibly a better way is to install an infinite (i.e. absenting) clipping box,
wnen setcharwidth is used instead setcachedevice*.
but we don't know how to. Due to that the distilled 238-01.ps
renders some differently than undistilled one, and in most cases
it appears closer to what CPSI does.

An additional optimization : In sync_text_state the condition for matrix
sinchronization is done weaker : with empty text buffer the
synchronization is not needed.
</pre></blockquote>

<p><strong><a name="2003-04-08_1631"></a>
2003-04-08 16:31 Igor Melichev</strong></p>
<blockquote><pre>
pdfwrite : Don't convert Type 3 fonts to raster fonts.

DETAILS :

The main work is done with pdf_install_charproc_accum and
pdf_end_charproc_accum. They forward a BuildChar/BuildGlyph output
to a separate graphic stream. See the big comment at the end of pdf_text_process.

The new function gx_default_text_restore_state restores graphic
state of PS interpreter when we discontinue the default text enumeration
after executing a PS charproc. New state variable gx_device_pdf::accum_char_proc
sets a special mode for graphic handlers.

We ever clip BuildChar/BuildGlyph with a FontBBox or with character bbox
specified in setcachedevice*. Doing so with calling gx_clip_to_rectangle
from pdf_text_set_cache, because we need to avoid the
current PS clipping path to interfere the character proc.
Possibly a better way is to install an infinite (i.e. absenting) clipping box,
wnen setcharwidth is used instead setcachedevice*.
but we don't know how to. Due to that the distilled 238-01.ps
renders some differently than undistilled one, and in most cases
it appears closer to what CPSI does.

An additional optimization : In sync_text_state the condition for matrix
sinchronization is done weaker : with empty text buffer the
synchronization is not needed.
</pre></blockquote>

<p><strong><a name="2003-04-08_1359"></a>
2003-04-08 13:59 Ralph Giles</strong></p>
<blockquote><pre>
Initial commit of native MacOS font loading. This implements a %macresource% iodevice for
retrieving data from the 'resource' structure associated with MacOS files, either directly from
the resource fork, or from a serialized data fork resource file. This is primarily used to access
font data on that platform. Resource fork access is only supported on MacOS, while data fork files
(e.g. .dfont format font files) can be read on any platform. This code is currently disabled.

DETAILS:

This change allows fonts stored in resources to be specified in the fontmap. A special indexing
scheme is added to the filename to address the particular resource desired by id and 4-character
type code, e.g. '%macresource%Arial#sfnt+4096' or
'%macresource%/Library/Fonts/Optima.dfont#sfnt+14151'.
</pre></blockquote>

<p><strong><a name="2003-04-08_1238"></a>
2003-04-08 12:38 Ralph Giles</strong></p>
<blockquote><pre>
Initialize the legacy global pgsdll_callback to NULL to avoid problems
if it isn't properly set. Part of bug 686768.
</pre></blockquote>

<p><strong><a name="2003-04-08_1217"></a>
2003-04-08 12:17 Ralph Giles</strong></p>
<blockquote><pre>
Avoid calling a null pgsdll_callback, as can happen with the new client api
and CHECK_INTERRUPTS. This fix affects only MacOS, similar protections are
already in place for other platforms. Also return EOFC in the mac stdio
stream process if no callback is defined. Closes bug 686768.
</pre></blockquote>

<p><strong><a name="2003-04-08_0504"></a>
2003-04-08 05:04 Dan Coby</strong></p>
<blockquote><pre>
Implementation of the SeparationOrder parameter.  This implementation
is only applicable for the spotcmyk and devicen devices.  This change
also removes the uuused spotrgb device.
</pre></blockquote>

<p><strong><a name="2003-04-04_1710"></a>
2003-04-04 17:10 Ralph Giles</strong></p>
<blockquote><pre>
Correct documenation change: -dAdjustWidth is on by default.
</pre></blockquote>

<p><strong><a name="2003-04-03_1642"></a>
2003-04-03 16:42 Raph Levien</strong></p>
<blockquote><pre>
Fix: Make the pdf 'q' operator not affect the current path, in conformance
with the PDF spec. Fixes SF #596009.
</pre></blockquote>

<p><strong><a name="2003-04-03_1354"></a>
2003-04-03 13:54 Ralph Giles</strong></p>
<blockquote><pre>
Document that setpagedevice keys can reset the effects of pdfmark commands.
Closes bug 645677.
</pre></blockquote>

<p><strong><a name="2003-04-03_1334"></a>
2003-04-03 13:34 Jouk Jansen</strong></p>
<blockquote><pre>

 Committing in .

 for new file syntax on OpenVMS
 added the  case for prefix=***] and filename=-*****

 Modified Files:
 	gs/src/gp_vms.c
 ----------------------------------------------------------------------
</pre></blockquote>

<p><strong><a name="2003-04-03_1328"></a>
2003-04-03 13:28 Ralph Giles</strong></p>
<blockquote><pre>
Fix documentation for -dAdjustWidth. This parameter takes a integer rather
that an boolean as was stated. Closes bug 538033.
</pre></blockquote>

<p><strong><a name="2003-04-02_2345"></a>
2003-04-02 23:45 Alex Cherepanov</strong></p>
<blockquote><pre>
Fix a typo causing "/typecheck in restore" in documents with /Threads .
Bug #611701
</pre></blockquote>

<p><strong><a name="2003-04-02_2143"></a>
2003-04-02 21:43 Ralph Giles</strong></p>
<blockquote><pre>
Remove the non-HAVE_STDINT_H non-win32 attempts to define stdint types
and related sys/types redefine hacks. Also warn in the configure script
if stdint.h is not found.

DETAILS:

Compiling libjbig2dec requires the size-specific types in stdint.h, as
does compiling in the headers. Therefore these types must be made
available in ghostscript if jbig2.dev is included in FEATURE_DEVS.

The best way to integrate this is to create a stdint_.h for ghostscript
that contains discovered and/or platform-specific typedefs for the
types. This is still the plan, but to speed integration we just through
some defines into stdpre.h. If -DHAVE_CONFIG_H is passed by the makefile
(as configure does) then the C99 header is used, and we make specific
defines for MSVC which doesn't yet ship the header. We also had some
fallbacks for other systems (vendor unix mostly) but these caused
collisions with partial definitions of what became the C99 types in
sys/types.h and the redirection hack we do with ulong et al. did not
work on all platforms (notably macosx).

It is the fallback defines that have been removed; users building
on older platforms will probably have to patch the types in to use JBIG2
support.
</pre></blockquote>

<p><strong><a name="2003-04-01_2018"></a>
2003-04-01 20:18 Alex Cherepanov</strong></p>
<blockquote><pre>
On some devices the initial page size is rounded up but page size is
rounded to the nearest pixel when set by setpagedevice. Changing default
page size to match the setpagedevice. Bug #686795
</pre></blockquote>

<p><strong><a name="2003-03-29_0055"></a>
2003-03-29 00:55 Alex Cherepanov</strong></p>
<blockquote><pre>
Multi-target rule that generates all of the targets at once was executed for
every target obsoleting some of the files generated earlier and causing
recompilation. Replace the multi-target rule with a single-target rule and
make the target a prerequisite of the remaining targets; use empty command to
disable default build rules. Bug #685341.
</pre></blockquote>

<p><strong><a name="2003-03-28_2015"></a>
2003-03-28 20:15 Ray Johnston</strong></p>
<blockquote><pre>
Prevent UMRs and when an image3x type image only has one of the possible
two masks. Hangs or data garbling could result. Related to bug #686782.

DETAILS:

While several places in the image3x handling checked mask[i].depth to make
sure that it was non-zero, other places didn't have this check, but just
operated on the InterleaveType of the mask. While I could have added the
mask[i].depth check, setting mask[i].InterleaveType to zero when a mask
was not used was a single line change and served the purpose.

I found this when looking at performance on this PC_*.ai file and was
getting infinite loops. The plane_data was ending up pointing to the
wrong area when the uninitialized mask[i].InterleaveType just happened to
be 3 (interleave_separate_sources).
</pre></blockquote>

<p><strong><a name="2003-03-27_2110"></a>
2003-03-27 21:10 Ray Johnston</strong></p>
<blockquote><pre>
Improve previous patch to work from within encapsulated job framework.

DETAILS:

If gs is started with:  gs -c false 0 startjob pop - < /dev/null

then the previous patch would result in:

	Unrecoverable error: invalidaccess in quit

since the systemdict /quit is defined to cause this error from within an
encapsulated job. This patch detects the .jobsavelevel > 0 and uses 'stop'
instead, which quits gs without a spurious error message.
</pre></blockquote>

<p><strong><a name="2003-03-27_2055"></a>
2003-03-27 20:55 Ray Johnston</strong></p>
<blockquote><pre>
Use the systemdict version of "quit" from gs_main_finit so that we can still
quit if /quit has been redefined. Bug #686783. Analysis by Raph Levien.
</pre></blockquote>

<p><strong><a name="2003-03-27_1420"></a>
2003-03-27 14:20 Igor Melichev</strong></p>
<blockquote><pre>
pdfwrite : The old code copied parameters of PS interpreter's graphic state
to the output PDF. However some of them are installation dependent and must not copy.
THIS IS AN INCOMPATIBLE CHANGE : the generated PDFs will render some differently
on printers.

DETAILS:

We provide a signal to pdfwrite at very end of gs_init.ps - see
the change to gs_pdfwr.ps, the priority=2000.
The signal is handled in gdev_pdf_fill_path,
and stores a copy of PS interpreter's graphic state parameter values.
Those valuess are used for comparizon with current parameters of PS interpreter
when an object is written. Therefore, if a value of a parameter was not
changed by a document, it is not written to PDF.

Note that if a PS document sets parameters equal to the
installation defaults, the setting in missed in PDF.
This is unfortunate.

The patch causes multiple differences in rendering distilled
comparefiles with pkmraw, because transfer functions changed from a
HP-specific (defined in gs_init.ps) to none. Those differences were
checked with the fuzzy compare utility and look fine. It should fix
the 2003-03-26 regressions, but new differences will appear.
</pre></blockquote>

<p><strong><a name="2003-03-27_0109"></a>
2003-03-27 01:09 Ray Johnston</strong></p>
<blockquote><pre>
Improve .copyparam to handle arrays as well as strings, preserving the
'executable' status of arrays. Fixes bug #647685.
</pre></blockquote>

<p><strong><a name="2003-03-26_1327"></a>
2003-03-26 13:27 Igor Melichev</strong></p>
<blockquote><pre>
Fix : A bug processing an error in .schedule_init .
</pre></blockquote>

<p><strong><a name="2003-03-26_1308"></a>
2003-03-26 13:08 Igor Melichev</strong></p>
<blockquote><pre>
Ignore pdfmark if the output device isn't pdfwrite.
THIS IS INCOMPATIBLE CHANGE.
If an user changes the output device to pdfwrite dynamically,
he should specify PDFSETTINGS in command line to enforce
the pdfwrite initialization when GS starts up.
Perhaps it's a seldom case.

DETAILS :

The old code always executed a big part of pdfwrite code with useful reason.
Now we can skip it with help of .schedule_init .
</pre></blockquote>

<p><strong><a name="2003-03-26_1154"></a>
2003-03-26 11:54 Igor Melichev</strong></p>
<blockquote><pre>
Fixing some compiler warnings (unused variables, etc.).
</pre></blockquote>

<p><strong><a name="2003-03-25_2118"></a>
2003-03-25 21:18 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : Provide a complete monitoring of the viewer's graphic state
while generating a PDF output. The old code misses the synchronization
of the viewer's graphic state with its internal copy when generating
a 'grestore' command to undo a clipping.
Bug 686763 "pdfwrite is not correctly handling OPM distiller parameter".

DETAILS :

This change affects all vector devices, but it should be equivalent
for all them except pdfwrite, and except for the pointer lifetime bug
explained below.

Here is an example when the desynchronization appears :

  f1 settransfer
  0 setcolor
  path1 fill
  f2 settransfer
  1 setcolor
  path2 fill
  gsave
  path3 clip
  path4 fill
  grestore
  path5 fill

After 'grestore' it uses f1 instead f2.

The old code does not remember the viewer's graphic state,
which was immediately before 'gsave', and resets the internal copy of
the graphic state to default values when it generates 'grestore'.
This logic is fully wrong : if after 'grestore' a parameter is equal
to the default value, pdfwrite does not generate a set command for this parameter,
but the viewer uses the value which was set before 'grestore',
which can differ from the default one.

Moreover, gdevvec copies the device color from local memory
to global memory, and doesn't ask garbager to process pointers in
the copy. When the device color contains pointers
to patterns or so, the live time of the copy appears bigger
than the live time of the pointed structure. The old code only
compares the pointed addresses without accessing the pointed data,
so that a crash can't happen. But if garbager moves another color
to same address, the comparison answers "equal" when actually colors
are not equal, and the generated PDF appears wrong.

To exclude the pointer lifetime problem, the patch uses the 'save_dc' method
instead the 'equal' method for colors. But the implementation
of save_dc was dummy for patterns. To complete it, gs_id is
inserted into gs_pattern_instance_s, and more variants added to
gx_device_color_saved_s. The clist device appears tolerant
to this change.

Note that macros color_unset, color_set_null, color_is_null,
gx_dc_is_null are now applied to gx_device_color_saved.

For complete monitoring the viewer's graphic state,
we implement a 2-elements stack 'vgstack' in gx_device_pdf_s,
save the viewer's graphic state in it when generating 'q' commands,
and restore from there when generating 'Q'. If a 'gs' parameter
needs to change, we move to 'PDF_IN_STREAM' context, because
we must not insert 'gs' into a text context. New functions
pdf_try_prepare_stroke and pdf_try_prepare_fill provide
the "try" logics for this.

If a 'gs' parameter changes with changing a clipping,
first we need to undo the old clipping with 'Q',
and then generate new 'gs' parameters relatively to the
restored graphic state. The new function pdf_unclip
works for this.

With this patch the length of generated PDF appears longer
for some tests. The most important ones are :

acrobat.pdf        Lengths differ in 6141.
adesso8.pdf        Lengths differ in -8316.
HeiseiMinStd.pdf   Lengths differ in 4000.
narrow_font.pdf    Lengths differ in 6141.
RealCities.pdf     Lengths differ in 12370.
RodinCIDEmbed.pdf  Lengths differ in 101698.

It happens because pdfwrite doesn't remember 'gs' dictionaries,
and therefore redundant copies can appear.
This problem to be fixed separately.

Expecting a progression : 093-01.ps (was a wrong stroke widths with a PaintType 2 font).

Expecting a regression : with this patch, re-distilled
    Testform.v1.0.2.pdf paints good with Adobe, but wrongly with GS.
                         Maybe a bug in GS PDF interpreter.
</pre></blockquote>

<p><strong><a name="2003-03-25_2113"></a>
2003-03-25 21:13 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : 'write_range' was buggy (inconsistent) since zfont42.c rev.1.11 (17 Jan 2003).
</pre></blockquote>

<p><strong><a name="2003-03-24_1541"></a>
2003-03-24 15:41 Ralph Giles</strong></p>
<blockquote><pre>
Add rasterdb.py to the documentation file index.
</pre></blockquote>

<p><strong><a name="2003-03-24_1000"></a>
2003-03-24 10:00 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : The recent patch for the bug 653140 changed the font embedding condition
with too narrow one. Restoring it to the old one.

DETAILS :

The wrong patch is http://www.ghostscript.com/pipermail/gs-cvs/2003-March/003048.html .

This patch should fix the regressions
http://www.ghostscript.com/pipermail/gs-regression/2003-March/000538.html
</pre></blockquote>

<p><strong><a name="2003-03-24_0050"></a>
2003-03-24 00:50 Jack Moffitt</strong></p>
<blockquote><pre>
Implements raster database to store and retrieve cached baseline rasters.
</pre></blockquote>

<p><strong><a name="2003-03-24_0031"></a>
2003-03-24 00:31 Jack Moffitt</strong></p>
<blockquote><pre>
Fixes a bug where baselines weren't being reverted if they already existed.
</pre></blockquote>

<p><strong><a name="2003-03-23_2359"></a>
2003-03-23 23:59 Jack Moffitt</strong></p>
<blockquote><pre>
Added emacs mode lines to python files without extensions.
</pre></blockquote>

<p><strong><a name="2003-03-22_1824"></a>
2003-03-22 18:24 Ralph Giles</strong></p>
<blockquote><pre>
Define some of the C99 stdint types in the common stdpre.h. This is
required for libjbig2 integration.

DETAILS:
Another option would have been to define a local 'stdint_.h', but
stdpre.h already contains a number of typedefs and includes sys/types.h
to provide expected basic types. We use stdint.h itself if the toplevel
makefile defines HAVE_STDINT_H.

Note that unfortunately sys/types.h often tries to provide types now in
stdint.h. We do the same collision-avoidance we do with our shorthand
types, but this could clobber correct definitions for the explicitly-
sized types on systems without stdint.h. (The only mainstream platform
not shipping stdint.h is MSVC, and we provide specific typedefs for that
platform.)

Some systems also provide a sys/inttypes.h with the same definitions. We
ignore this.
</pre></blockquote>

<p><strong><a name="2003-03-22_1247"></a>
2003-03-22 12:47 Igor Melichev</strong></p>
<blockquote><pre>
Fix (CFF parser) : Warn and ingore missed tables instead giving up.
Bug 686772 "PDf file breaks in ghostscript works on other PDF rips".
</pre></blockquote>

<p><strong><a name="2003-03-21_1914"></a>
2003-03-21 19:14 Igor Melichev</strong></p>
<blockquote><pre>
pdfwrite : Fixing the bug 653140 "use NeverEmbed to restrict CIDFont embedding"

DETAILS :

The important change is setting pfont->font_name for CID fonts.
Before now it contained empty string. Other changes are minor
and only provide a data transfer.
</pre></blockquote>

<p><strong><a name="2003-03-21_1017"></a>
2003-03-21 10:17 Igor Melichev</strong></p>
<blockquote><pre>
file_name_combine : Improve the choice of the default GenericResourceDir.

DETAILS:

This patch does not change any behavior with a regular build.

The default value for GenericResourceDir can be configured
with -sGenericResourceDir=path . If not specified, it
chooses the first directory in LIBPATH, except (.),
and combines it with ../Resource .

The default value for FontResourceDir can be configured
with -sFontResourceDir=path . If not specified, it
chooses the first directory in LIBPATH, except (.),
and combines it with ../Resource/Font .

findresource was buggy : it returned a path with GenericResourceDir
when the real resource file is in another directory.
Now it first searches in LIBPATH, and if not found calls ResourceFileName .

We can't ever call ResourceFileName from findresource,
because it ever retrieves a single path. See the bug above.
Therefore with multiple resource directories it is conforming to PLRM
but differs from CPSI.
</pre></blockquote>

<p><strong><a name="2003-03-20_2210"></a>
2003-03-20 22:10 Alex Cherepanov</strong></p>
<blockquote><pre>
Remove -dNODISPLAY flag from ps2ps.bat because nothing is generated
when the flag is set. There's no -dNODISPLAY flag in UNIX or OS/2
versions. Fixes bug #686776
</pre></blockquote>

<p><strong><a name="2003-03-20_2027"></a>
2003-03-20 20:27 Alex Cherepanov</strong></p>
<blockquote><pre>
Check i/o errors in PS and EPS generation drivers. Return ioerror soon
after the error is encountered in the output stream.
Fixes bug #686741

DETAILS:
To simplify the code errors are checked only at the critical places:
before seeking, inside loops, before returning from functions.
Stream error status is checked by direct access to the stream structure
because both macro and extern_inline based solutions were declined.
</pre></blockquote>

<p><strong><a name="2003-03-20_2011"></a>
2003-03-20 20:11 Alex Cherepanov</strong></p>
<blockquote><pre>
Check i/o errors in PS and EPS generation drivers. Return ioerror soon
after the error is encountered in the output stream.
Fixes bug #686741

DETAILS:
To simplify the code errors are checked only at the critical places:
before seeking, inside loops, before returning from functions.
Stream error status is checked by direct access to the stream structure
because both macro and extern_inline based solutions were declined.
</pre></blockquote>

<p><strong><a name="2003-03-20_1610"></a>
2003-03-20 16:10 Igor Melichev</strong></p>
<blockquote><pre>
Fix (file_name_combine) : The operator .file_name_combine returned a read-only string.
</pre></blockquote>

<p><strong><a name="2003-03-20_1522"></a>
2003-03-20 15:22 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : When advance width has non-zero y component, the width was set to zero.
Bug 686764 "Overlapping characters".

DETAILS :

The test document embeds a font, in which some characters
have a small non-zero y component of the advance width.
It looks as a buggy font. The pdfwrite writes zero to Widths array
(that's correct, because it is only useful with zero y component),
and did not generate glyph positioning commands (the bug).
This patch makes pdfwrite to be tolerant to such buggy fonts
with generating glyph position for subsequent glyph.
It does not repair the font.
</pre></blockquote>

<p><strong><a name="2003-03-20_0929"></a>
2003-03-20 09:29 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : While embedding a font, prefer font name to key name.
It conserves original font names and allows derived fonts to merge.
</pre></blockquote>

<p><strong><a name="2003-03-18_0129"></a>
2003-03-18 01:29 Ralph Giles</strong></p>
<blockquote><pre>
Add the new pngalpha device to the default autoconf build.
</pre></blockquote>

<p><strong><a name="2003-03-17_0954"></a>
2003-03-17 09:54 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : Unwinding another part of the previous patch
which wrote a wrong numLongMetrics.
</pre></blockquote>

<p><strong><a name="2003-03-16_2050"></a>
2003-03-16 20:50 Igor Melichev</strong></p>
<blockquote><pre>
Fix : Increasing the threshould for the dropout prevention invocation.
</pre></blockquote>

<p><strong><a name="2003-03-16_2007"></a>
2003-03-16 20:07 Igor Melichev</strong></p>
<blockquote><pre>
Fix (file_name_combine) : A bug in gs_fapi.ps .
</pre></blockquote>

<p><strong><a name="2003-03-15_0809"></a>
2003-03-15 08:09 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : Unwinding a part of the previous patch
and improve the OS/2 table writing ann embedded CIDFontType2.
Bugzilla Bug 686759 "pdf to pdf doesnt work".

DETAILS :

The previous patch appears wrong and caused a regression
due to the change to "have_cmap = no_generate && !writing_cid,"
in gdevpsft.c . This patch unwinds it. Also the log message
of the previous patch is fully wrong. The CID font in the test document
for 686759 does not contain cmap and the cmap must not
be written. But with the previous patch a corrupt cmap
was written. Accessing the wrong font copy pdfwrite
failed to compute glyph widths and therefore converted the font
into a bitmap font. This patch restores the code
to "have_cmap = no_generate,". The bug 686759 is reopened.

Also we detected that the OS/2 table was written
wrongly in some circumstances : its position in font
file did not correspond to one specified in the font
header. This patch fixes it.
</pre></blockquote>

<p><strong><a name="2003-03-14_1155"></a>
2003-03-14 11:55 Ralph Giles</strong></p>
<blockquote><pre>
Correct a typo in a help string.
</pre></blockquote>

<p><strong><a name="2003-03-14_1136"></a>
2003-03-14 11:36 Ralph Giles</strong></p>
<blockquote><pre>
Correct a serious error in the bmp file padding method. Also convert all error
output to stdout from stderr since we no longer output the diff image to stdout.
Patch from Igor Melichev.
</pre></blockquote>

<p><strong><a name="2003-03-14_0155"></a>
2003-03-14 01:55 Ralph Giles</strong></p>
<blockquote><pre>
The code for writing the BMP header made assumptions about struct
packing and was not portable. Replace the previous code with a method
that writes fields one at a time. Also, since fseek() is reported not to
work beyond the end of the written file, pad out the length of the image
data section so we can fill in the rows in proper bottom-to-top order.

Note that the bmp output code does not convert RGB to BGR; this is not
critical as the output is only used for hilighting differences.

Closes bug #686739.
</pre></blockquote>

<p><strong><a name="2003-03-14_0010"></a>
2003-03-14 00:10 Ralph Giles</strong></p>
<blockquote><pre>
Replace the win32-specific code for seeking with a generic version.
Partial fix for bug #686739.

DETAILS:

The code was making an assumption about the internals of the opaque
fpos_t type. This is a 64 bit integer on win32, but a struct on
linux and macos, so the compile of course fails.

This commit temporarily breaks diff.bmp output on win32, which allegedly
cannot fseek() beyond the written end of the file so the row-reversal
logic will fail. This will be corrected in another revision.
</pre></blockquote>

<p><strong><a name="2003-03-13_1911"></a>
2003-03-13 19:11 Dan Coby</strong></p>
<blockquote><pre>
Fix for 686740 PDF file causes gs8 to core dump.  The test file
uses PDF transparency.  This is a PDF 1.4 feature however the file
header says %PDF1.3.  The implementing code has tests for PDF
version 1.4 before it tests for transparency features.  The fix
simply lowers the test level to 1.3.
</pre></blockquote>

<p><strong><a name="2003-03-13_1254"></a>
2003-03-13 12:54 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : Never write cmap embedding a CIDFontType2.
Bugzilla Bug 686759 "pdf to pdf doesnt work".

DETAILS :

PDF uses CIDToGIDMap for mapping CIDs to GIDs.
Therefore the cmap table of the True Type font is not used with CIDFontType2.
In PDF spec section 5.8 "Embedded Font Programs" reads :

	If used
	with a CIDFont dictionary,the "cmap " table is not needed,since the mapping
	from character codes to glyph descriptions is provided separately.

Note the words "is not needed".
Meanwhile reading a PDF 1.2 format, Acrobat Reader 4 and 5 claim an
error if a cmap presents.
</pre></blockquote>

<p><strong><a name="2003-03-12_1222"></a>
2003-03-12 12:22 Igor Melichev</strong></p>
<blockquote><pre>
file_name_combine :
1. Always search command line argument files in (.) .
2. Throw invalidfileaccess from .libfile .
3. Always check permissions with reduced file names.
4. Ignore "./" prefixes in permission lists, except for (./*) .

This patch should not not change behavior with regular build.

DETAILS :

With NEW_COMBINE_PATH 1 contributes the improvement listed above.

Argument files are searched independently on SEARCH_HERE_FIRST.

If a file is in the search list, but the access isn't permitted,
.libfile throus invalidfileaccess, as with NEW_COMBINE_PATH 0.

Minor changes :
- some C-style cleanup in gpmisc.c ;
- don't compile i_ctx_p->filearg with NEW_COMBINE_PATH 1;
- don't compile i_ctx_p->starting_arg_file with NEW_COMBINE_PATH 0;
- a check for parents in check_file_permissions was buggy.
</pre></blockquote>

<p><strong><a name="2003-03-12_1116"></a>
2003-03-12 11:16 Jouk Jansen</strong></p>
<blockquote><pre>

 Committing in .

 pngalpha device added also to the OpenVMS make file for MMK
 (same change was already made for gmake in openvms.mak)

 Modified Files:
 	gs/src/openvms.mmk
 ----------------------------------------------------------------------
</pre></blockquote>

<p><strong><a name="2003-03-12_0724"></a>
2003-03-12 07:24 Jouk Jansen</strong></p>
<blockquote><pre>

 Committing in .

 update VMS file-format writing

 Modified Files:
 	gs/src/gp_vms.c
 ----------------------------------------------------------------------
</pre></blockquote>

<p><strong><a name="2003-03-11_1136"></a>
2003-03-11 11:36 Russell Lang</strong></p>
<blockquote><pre>
Add pngalpha device that uses RGBA, with the alpha channel
providing pixel coverage.  Used for generating PNG images with a
transparent background.

DETAILS
Add missing initialiser for get_clipping_box to
prn_color_params_procs macro.  (src/gdevprn.h)

Avoid cast warning for software_key (src/gdevpng.c).

Add pngalpha device that uses RGBA.  This requires custom
encode_color and decode_color procedures to put RGB in the
first three bytes while leaving the fourth A byte as opaque.
To avoid gx_no_color_value, the alpha is stored inverted so
opaque is 0x00 and transparent is 0xff.

If pngalpha is told to fill the entire page with white, it uses
the kludge of instead filling with almost white and transparent
(0xfefefeff). This works because it is triggered by "erasepage",
but not by "1 setgray clippath fill". A custom open_device and
put_params are needed to save the clist or memory device
fill_rectangle, and to restore the pngalpha_fill_rectangle.

A custom copy_alpha is required to correctly blend RGBA. The
blend is based on pixel coverage, not true transparency
Ghostscript doesn't pass transparency to the device. Alpha blend
maths from Porter and Duff 1984 paper for "A over B". RGB values
are stored without pre-multiplication. A custom
pngalpha_create_buf_device is used to replace the memory device
implementation gx_default_copy_alpha with pngalpha_copy_alpha,
but not to replace clist_copy_alpha.

The pngalpha device is successful at giving a transparent
background to many images such as colorcir.ps and golfer.eps,
but not tiger.eps which fills the clipping path with grey.
It does not implement a transparent background for PDF 1.4
transparent input files.
</pre></blockquote>

<p><strong><a name="2003-03-11_1113"></a>
2003-03-11 11:13 Igor Melichev</strong></p>
<blockquote><pre>
Fix : setweightvector did not set the copy of WeightVector in gs_type1_data_s.
Bug #686753 "Wrong Display of Multiple Master Fonts".

DETAILS:

The test document creates a Type 3 font, in which BuildChar
procedure defines a copy of MM font and later replaces
WeightVector in it.

A new PS operator introduced to handle it.
Adobe implementations do so.

We are not happy with the change of VM with no regard to 'restore'.
It appears compatible with the test document,
because it calls setweightvector before rendering each glyph.
(Another interesting point is that the test document executes
"0 setcachelimit" before rendering a glyph).
But it is not compatible to CPSI (a special test done).
Providing a correct restore appears too complicated -
need to change the data representation to 'ref'.
Delaying it until it is really needed.

Alternatively we could obtain a fresh copy of WeightVector
in each call to *show, but it would be a significant performance flaw.

The patch fixes the problem explained in the bug report #686753,
but the supplied document has another problem :
with pdfwrite some characters are converted to raster.
To be fixed separately.
</pre></blockquote>

<p><strong><a name="2003-03-10_1308"></a>
2003-03-10 13:08 Jouk Jansen</strong></p>
<blockquote><pre>

 Committing in .

 Oops... I made a typo in the version of 1 hour before this.

 Modified Files:
 	gs/src/gp_vms.c
 ----------------------------------------------------------------------
</pre></blockquote>

<p><strong><a name="2003-03-10_1056"></a>
2003-03-10 10:56 Jouk Jansen</strong></p>
<blockquote><pre>

 Committing in .

 corrected VMS file syntax.

 Modified Files:
 	gs/src/gp_vms.c
 ----------------------------------------------------------------------
</pre></blockquote>

<p><strong><a name="2003-03-10_0736"></a>
2003-03-10 07:36 Igor Melichev</strong></p>
<blockquote><pre>
file_name_combine : (1) Implement the extended search method in resourceforall,
resourcestatus, ResourceFileName. (2) Don't check permissions for command line argument files.

DETAILS:

This patch does not change any behavior with a regular build.

To skip the permission check with argument files we added a flag into
gs_context_state. This is only a secure way to pass the information
across PS interpreter, which executes .runfile with any argument file.

Per Adobe specification, a resource category can define the ResourceFileName procedure,
which generates a resource file name from resource instance name.
Since Ghostscript uses an extended search method for finding resource files,
the strong Adobe's semantics appears inapplicable.
Ghostscript implements an extended semantics.

Finding a resource file while executing findresource or resourcestatus,
Ghostscript does not call ResourceFileName. Instead that, it searches directories
with an extended method explained in How Ghostscript finds files.

ResourceFileName may be called from a Postscript program such as a resource installer.
The default implementation for ResourceFileName first checks whether
GenericResourceDir specifies an absolute path. If so, ResourceFileName uses its value
to generate the result. Otherwise, it tries to find an existing resource file with
the extended method. If it succeeds, ResourceFileName returns the path
to the resource file found. Otherwise it uses GenericResourceDir to combine a default path.

Note that with a single resource directory and an absolute ResourceFileName the behavior
appears equivalent to Adobe's one.

The new search method doesn't distinguish 'lib' and 'Resource' directories.

Minor changes :

The operator .file_name_parent is removed.
The operator .file_name_current is removed.
Improved some error messages.
</pre></blockquote>

<p><strong><a name="2003-03-07_1457"></a>
2003-03-07 14:57 Igor Melichev</strong></p>
<blockquote><pre>
Fix (file_name_combine) : Improving the OpenVMS path syntax.

DETAILS :

This patch does not change any behavior with regular build.

With NEW_COMBINE_PATH 1 it allows to combine with filenames like (x]y) .
</pre></blockquote>

<p><strong><a name="2003-03-07_1421"></a>
2003-03-07 14:21 Igor Melichev</strong></p>
<blockquote><pre>
Fix (file_name_combine) : Renaming no_neighbour with no_sibling.

DETAILS :

This patch does not change any behavior.
</pre></blockquote>

<p><strong><a name="2003-03-07_1112"></a>
2003-03-07 11:12 Igor Melichev</strong></p>
<blockquote><pre>
Fix (file_name_combine) : Improving the file path syntax for OS/2, DOS and Windows.
</pre></blockquote>

<p><strong><a name="2003-03-07_0048"></a>
2003-03-07 00:48 Dan Coby</strong></p>
<blockquote><pre>
Fix for #686755 sgirgb device.  The sgirgb device would produce compiler
errors if included in version 8.00 or later.

DETAILS:

The sgirgb device had not been modified to match the changes made in the
device API with version 8.00.  These were fixed.  In addition a couple of
compiler warnings were removed.  AN unsed variable (sptr) was also
removed.

Note:  I am unable to test this fix since I do not have an sgi system.
The inclusion of the sgirgb device also creates link errors in a WinXP
build due to undefined/missing bzero.  Since this was not changed, I
am assuming that this is not a problem on an sgi system.
</pre></blockquote>

<p><strong><a name="2003-03-06_1601"></a>
2003-03-06 16:01 Igor Melichev</strong></p>
<blockquote><pre>
file_name_combine : Removing a rudiment of old code.

DETAILS:

This patch does not change any behavior with a regular build.

The operator .file_name_parents is now removed.
</pre></blockquote>

<p><strong><a name="2003-03-06_1353"></a>
2003-03-06 13:53 Igor Melichev</strong></p>
<blockquote><pre>
file_name_combine : Implementing new command line arguments:
-sGenericResourceDir= and -sFontResourceDir= .

DETAILS:

This patch does not change any behavior with a regular build.

With NEW_COMBINE_PATH 1 the new arguments replace
default values for GenericResourceDir and FontResourceDir .

A consistency check is added to gs_res.ps .
It signals an error if the value of GenericResourceDir
is inconsistent with LIBPATH. An automatic insertion of it
into LIBPATH appears cumbersome because the access to LIBPATH in C code
goes through gs_main_instance_s.

The operator .file_name_combine changed the prototype.
A boolean result is added instead a failure on error.
This simplifies error processing in PS code, especially
because the 'stopped' changes the memory allocation mode.
Relevant changes done to calls of .file_name_combine in gs/lib .

A minor bug is fixed in gp_file_name_combine_generic.
</pre></blockquote>

<p><strong><a name="2003-03-06_1047"></a>
2003-03-06 10:47 Russell Lang</strong></p>
<blockquote><pre>
Change OS/2 gp_file_name_combine to match Windows.
</pre></blockquote>

<p><strong><a name="2003-03-06_1028"></a>
2003-03-06 10:28 Igor Melichev</strong></p>
<blockquote><pre>
file_name_combine : Adding the 'no_neighbour' argument.

DETAILS:

This patch does not change any behavior with a regular build.
It slightly change behavior when built with NEW_COMBINE_PATH 1.

The 'no_neighbour' is a boolean, which protects steps from
a directory to its neighbor directory in file_name_combine.
With true argument the combination

   (x/y) + (../z/t) fails
but
   (x/y) + (../y/t) succeeds.

With false argument both combinations succeed.

The argument is added to both C function and PS operator.

We apply false argument while executing .libfile
and while generating PermitFileReading.
True argument is used in FAPI support to locate
FAPI-handled font files (which generally are not PS files,
and they are not being read with PS operators).

With NEW_COMBINE_PATH 1, THIS IS INCOMPATIBLE CHANGE.
To access resources, run Ghostscript with specifying
a resource directory in the -I command line argument.
</pre></blockquote>

<p><strong><a name="2003-03-04_1610"></a>
2003-03-04 16:10 Igor Melichev</strong></p>
<blockquote><pre>
Fix (file_name_combine) : Relative paths in GS command line did not work.
This patch cnanges a disabled code only.
</pre></blockquote>

<p><strong><a name="2003-03-04_1524"></a>
2003-03-04 15:24 Igor Melichev</strong></p>
<blockquote><pre>
Fix (file_name_combine) : An improvement to .locksafe .

DETAILS :

This patch changes a disabled code only.
It skips redundant templates when GenericResourceDir
or FontResourceDir is an absolute path.
</pre></blockquote>

<p><strong><a name="2003-03-04_1449"></a>
2003-03-04 14:49 Igor Melichev</strong></p>
<blockquote><pre>
Fix : A bug in CIDDecoding category definition.

DETAILS :

Should use .libfile opening a resource file to
resolve relative paths with LIBPATH.
</pre></blockquote>

<p><strong><a name="2003-03-04_1405"></a>
2003-03-04 14:05 Igor Melichev</strong></p>
<blockquote><pre>
Fix (file_name_combine) : A bug in .locksafe .
This patch changes a disabled code only.
</pre></blockquote>

<p><strong><a name="2003-03-04_1120"></a>
2003-03-04 11:20 Igor Melichev</strong></p>
<blockquote><pre>
Fix : removing an unused variable.
</pre></blockquote>

<p><strong><a name="2003-03-04_1100"></a>
2003-03-04 11:00 Igor Melichev</strong></p>
<blockquote><pre>
Initial commit for the new SAFER logics.

DETAILS:

This patch should not change any behavior unless
NEW_COMBINE_PATH is changed to 1. With 0 a minor meanful
change is the replacing .pathstring_not_bare with .file_name_combine
in gs_fapi.ps (which fixes a bug in FAPI support,
and doesn't affect builds with no FAPI).

The change is compatible unless NEW_COMBINE_PATH is 1.
Incompatibility issues with 1 are explained below.

With NEW_COMBINE_PATH 1 the patch defines a new logic for
.libfile, SAFER, and related things :

1. Default values for GenericResourceDir and FontResourceDir
   are platform dependent.
   (The old code always use Unix notation - a bug).

2. Default value for GenericResourcePathSep is platform dependent.
   The value is used before non-directory items only.
   (The old code always use Unix notation - a bug).
   (The old code used the value before directory items - a bug on OpenVMS).

3. PLRM specifies GenericResourceDir to be a single absolute path name.
   But Ghostscript's tradition is to load library files
   form a list of directories. Since we want to propagate
   this tradition to resource files, we get a conflict.
   To resolve the conflict, we allow GenericResourceDir
   to be a relative path, which is being concatenated with
   LIBPATH items. Thus we provide an extension of Postscript.

4. When a LIBPATH item is being concatenated with GenericResourceDir,
   an abnormal behavior appears when GenericResourceDir references parent.
   Exactly, concatenating the (.) item of LIBPATH with
   the default GenericResourceDir, which is (../Resource/),
   we get (../Resource/), i.e. it searches in a directory,
   which users don't expect to. We work around the abnormal
   behavior with skipping such paths while executing .libfile .

   More precisely, the .libpath algorithm is :

   For each LIBPATH item :
      - combine it with the argument string;
      - if the (reduced) combination refers the parent, skip it;
      - otherwise try to open the path. If succeeded, exit with it.
   If no success, fail with undefinedfilename or invalidfileaccess.

   Here and below we used Unix notation just for simplifying
   the log message. All statements to be generalized for any platform,
   and they are true for any supported platform.

5. A consequence of our workaround for (4) is a new constraint to .libfile :

   Let x is a cwd.
   Let x/../y exists. Lets mark it as y1.
   Let LIBPATH contains cwd and a directory z, which is not cwd.
   Let z/../y exists. Lets mark it as y2.
   Consequently y1 != y2.
   Executing

      (../y/f) .libpath

   searches y2/f, but does not search y1/f .
   The old code searched both in non-safer mode.
   THIS IS INCOMPATIBLE CHANGE.

6. A better workaround for (4) would be an implementation
   of RESPATH, which by default generates from LIBPATH
   with replacing (../Resource/) with (./Resource/).
   This requires to maintain a new directory lists.
   .libfile should get an additional argument,
   which specifies a search list - LIBPATH, RESPATH or FONTPATH.
   We do not make this improvement now,
   but will add it to Issues.htm .

7. If a path starts with a number of parent references,
   a template with same number of parent references
   must be added to permission list to allow the access.
   The template (*) allows access to any file.
   THIS IS INCOMPATIBLE CHANGE, because
   the old code ever rejects parents.

8. GenericResourceDir and FontResourceDir are not being added
   to permission list while .locksafe. Instead that,
   we combine them with all LIBPATH items,
   and add the combinations to the permission list
   unless it references parent.
   THIS IS INCOMPATIBLE CHANGE, but for non-exotic cases
   (such as "(../Resource/CMap/H) .libfile" in a document)
   it should be equivalent to the old behavior.

9. Scratch files with a non-absolute prefix always open
   in a scratch directory. The old code can open them
   in current and parent directories if an user modified
   a default prefix in C code.
   THIS IS INCOMPATIBLE CHANGE for users who had modified
   a scratch file prefix in C code.
   Permission for scratch directory is not checked
   as well as in old code.

A. The operator .filenamedirseparator is removed,
   because it cannot work properly on OpenVMS.
   On OpenVMS it needs both prefix and trailer to
   determine a correct separator.
   We removed it because the new logics never needs it.

B. The operator .pathstring_not_bare is removed,
   because .file_name_combine performs it's job better.

C. The functions gp_pathstring_not_bare, gp_file_name_references_parent,
   char *gp_file_name_concat_string are not longer in use.

D. New operators added to maintain the new logics :

   <string> <string> .file_name_combine <string>

      Combine a file name with a prefix.
      The first argument is a prefix, the second is a file name.
      Internal syntax of arguments and result is platform dependent.
      The combination is being reduced to a shortest equivalent,
      but if it starts with cwd reference, the starting
      cwd reference persists.

   - .file_name_separator <string>

      Returns a readonly string, which represents a separator
      which is used in file names between directory item and file item.
      Used for making the default value of GenericResourcePathSep.

   - .file_name_directory_separator <string>

      Returns a readonly string, which represents a separator
      which is used in file names between two directory items.
      Used for making the default value of GenericResourceDir.

   - .file_name_parent <string>

      Returns a readonly string, which represents a parent reference.
      Used for making the default value of GenericResourceDir
      and GenericResourceDir.

   <string> .file_name_parents <integer>

      Returns an integer equal to the length of maximal
      anchor substring, which includes parent references and separators only.
      Used in generating the permission list from LIBPATH and
      [GenericResourceDir FontResourceDir] as a workaround
      for (6).

   We believe that all them are necessary, except the last one,
   which is temporary used in (8) as a workaround for (6).
</pre></blockquote>

<p><strong><a name="2003-03-03_1150"></a>
2003-03-03 11:50 Igor Melichev</strong></p>
<blockquote><pre>
gp_file_name_combine : Implementing new PS operators.
</pre></blockquote>

<p><strong><a name="2003-03-03_1100"></a>
2003-03-03 11:00 Igor Melichev</strong></p>
<blockquote><pre>
gp_file_name_combine : Fixing the OpenVMS parent syntax.
</pre></blockquote>

<p><strong><a name="2003-03-03_1049"></a>
2003-03-03 10:49 Igor Melichev</strong></p>
<blockquote><pre>
gp_file_name_combine : Fixing a comment about OpenVMS.
</pre></blockquote>

<p><strong><a name="2003-03-03_1032"></a>
2003-03-03 10:32 Igor Melichev</strong></p>
<blockquote><pre>
gp_file_name_combine : Fixing the OpenVMS parent syntax and generalizing the ankor parent check.
Thanks to Jacob Jansen.
</pre></blockquote>

<p><strong><a name="2003-03-02_2252"></a>
2003-03-02 22:52 Igor Melichev</strong></p>
<blockquote><pre>
gp_file_name_combine : Adding more helpers for OpenVMS support.

DETAILS:

The previous patch unintentionally set NEW_COMBINE_PATH=1.
This one repairs it.

OpenVMS uses different separators for directory and file
items - '.' and ']'. More helpers added to resolve this.
gp_file_name_conbine_generic now checks which one is needed
for concatenating paths.
</pre></blockquote>

<p><strong><a name="2003-03-02_1348"></a>
2003-03-02 13:48 Igor Melichev</strong></p>
<blockquote><pre>
gp_file_name_combine : Implementing some useful functions.

DETAILS:

This patch doesn't change any behavior.
The new functions will be used with NEW_COMBINE_PATH=1.

Probably we don't need gp_file_name_reduce, but it's implementation
is pretty nice and isn't obvious.

gp_file_name_is_absolute will replace gp_pathstring_not_bare.
NEW_COMBINE_PATH=1 wan't need a special check for cwd.

gp_file_name_is_from_parent will replace gp_file_name_references_parent.
The new function only check partent at the beginning of the path,
and should be used with reduced paths only.

We could code an in-place reduction with :

    gp_file_name_combine_result
    gp_file_name_reduce_inplace(char *buffer, uint *blen)
    {
        return gp_file_name_reduce(buffer, *blen, buffer, blen);
    }

but we believe that

1. Aliasing const with non-const isn't a valid C.
   Rather GS contains multiple const hacks, we don't want to add another one.

2. The input buffer must have space for the trailing zero,
   which is not accounted in *blen.

The patch also includes a minor cleanup of comments and gp_file_name_combine_generic.
</pre></blockquote>

<p><strong><a name="2003-03-02_1150"></a>
2003-03-02 11:50 Igor Melichev</strong></p>
<blockquote><pre>
Fix : A compiler warning in platform dependent code for gp_file_name_combine.
</pre></blockquote>

<p><strong><a name="2003-03-02_1138"></a>
2003-03-02 11:38 Igor Melichev</strong></p>
<blockquote><pre>
Fix : A syntax error in platform dependent code for gp_file_name_combine.
</pre></blockquote>

<p><strong><a name="2003-03-01_1359"></a>
2003-03-01 13:59 Igor Melichev</strong></p>
<blockquote><pre>
Implementing gp_file_name_combine.

DETAILS :

This patch introduces a new code, which is currently
disabled with "#define NEW_COMBINE_PATH 0" in gp.h .

The new function gp_file_name_combine concatenates
two paths and then reduce the concatenation with excluding
parent references when possible. It is platform dependent,
but we could factor out a big common part - see gp_file_name_combine_generic.
Platforms define 8 small helpers for it.

The gp_file_name_combine and its helpers were debugged on Windows
with emulating other platforms. A help wanted to
test them on real platforms. For testing them
replace 0 with 1 in the definition of NEW_COMBINE_PATH
in gp.h and rebuild.

We do not protect definitions of new functions with
NEW_COMBINE_PATH switch, because we want them to be syntax-checked.

Some old functions, such as gp_pathstring_not_bare,
gp_file_name_concat_string will be reconsidered later,
because the helpers perform similar work in a generalized way.
Probably some of old ones to be removed. Our strong intention is
to remove gp_pathstring_not_bare, because it's behavior looks
strange from the user's end.
</pre></blockquote>

<p><strong><a name="2003-03-01_1254"></a>
2003-03-01 12:54 Igor Melichev</strong></p>
<blockquote><pre>
Reorganizing lib_open, lib_file_open, lib_file_fopen, file_open_stream functions
to allow to check permissions with a combined file name.

DETAILS :

This should be an equivalent change.
It is a preparation for implementing static resources.

This patch moves the directory enumeration cycle from lib_file_fopen
to lib_file_open. After that we have a place in lib_file_open
in which both combined path and permissions are accessible
(more precisely, this place is in lib_fopen_with_libpath).
The checking permissions in there will be next improvement.

This patch defines a stub for gp_file_name_combine function.
Temporary it is placed into zfile.c .
Later it will be moved to platform dependent modules.
</pre></blockquote>

<p><strong><a name="2003-02-28_1858"></a>
2003-02-28 18:58 Ray Johnston</strong></p>
<blockquote><pre>
Moving clear to before the restore removed the startjob parameters from
the opstack.

DETAILS:

This was an attempt to remove a potential problem with invalidrestore
caused by stuff on the opstack or dictstack if startjob was executed with
elements on these stacks. Since the problem has always been there and
since no one has tripped over it, we will investigate a correct fix
to preventing invalidrestore when the need arises. In the meantime,
at least startjob will work.
</pre></blockquote>

<p><strong><a name="2003-02-28_1853"></a>
2003-02-28 18:53 Ralph Giles</strong></p>
<blockquote><pre>
Correct a comment typo.
</pre></blockquote>

<p><strong><a name="2003-02-28_0358"></a>
2003-02-28 03:58 Ray Johnston</strong></p>
<blockquote><pre>
Correct typo somehow a /* comment crept in -- changed to %
</pre></blockquote>

<p><strong><a name="2003-02-28_0031"></a>
2003-02-28 00:31 Ray Johnston</strong></p>
<blockquote><pre>
Add .endjob procedure for use by job servers. Remainder of job encapsulation
and documentation to follow later. Also fix potential "invalidrestore"
problem with "extiserver" and "true <passwd> startjob" caused by stuff left
on the opstack or dictstack.
</pre></blockquote>

<p><strong><a name="2003-02-27_1156"></a>
2003-02-27 11:56 Ralph Giles</strong></p>
<blockquote><pre>
Support for JBIG2 streams with a JBIG2Globals shared data reference.

DETAILS:

The JBIG2Decode filter can take an optional /JBIG2Globals parameter,
always an indirect object reference to another stream. This commit adds
a new .jbig2makeglobalctx operator that takes a bytestring contanting
the global stream data, runs it through the decoder library and wraps
the resulting context pointer in an astruct which is returned as a
special -jbig2globalctx- object on the postscript stack.

A new procedure called from inside applyfilters in the pdf decoder takes
care of spooling the global data into the bytestring and installing the
astruct under the .jbig2globalctx key in the parameter dictionary. The
filter implementation looks for this and passes it to the page decoder
instance if it's available. The original JBIG2Globals key is ignored by
the actual decode filter implementation.
</pre></blockquote>

<p><strong><a name="2003-02-26_2233"></a>
2003-02-26 22:33 Igor Melichev</strong></p>
<blockquote><pre>
Fix : Improving a comment in lib/FAPIconfig.
</pre></blockquote>

<p><strong><a name="2003-02-25_2053"></a>
2003-02-25 20:53 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : -dSubsetFonts=false did not work with incremental fonts.

DETAILS :

pdfwrite created a "complete" copy of a font at the first appearance of the font.
With incremental fonts it missed incremental glyphs with -dSubsetFonts=false.
The patch checks whether a glyph is added incrementally and
replaces the "complete" font copy with a font subset.
Bug #686735 "-dSubsetFonts=false produces a bad PDF".

The core of the patch is the change to gdevpdte.c .
Other changes just pass a necessary data through internal interfaces.

This patch should not change behavior with -dSubsetFonts=false,
which is used by default for the regression testing.
</pre></blockquote>

<p><strong><a name="2003-02-25_1544"></a>
2003-02-25 15:44 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : Removing pdf_font_resource_s::copied_font.

DETAILS :

The patch removes a duplicated pointer.
It is a preparation for fixing #686735 "-dSubsetFonts=false produces a bad PDF".
The patched code should be equivalent to the old one.
</pre></blockquote>

<p><strong><a name="2003-02-25_1325"></a>
2003-02-25 13:25 Igor Melichev</strong></p>
<blockquote><pre>
Fix (FAPI) : improving a comment.
</pre></blockquote>

<p><strong><a name="2003-02-25_1309"></a>
2003-02-25 13:09 Igor Melichev</strong></p>
<blockquote><pre>
Fixing a compiler warning.
</pre></blockquote>

<p><strong><a name="2003-02-25_1225"></a>
2003-02-25 12:25 Igor Melichev</strong></p>
<blockquote><pre>
Fixing the device finalization problem.

DETAILS :

pdfwrite (and possibly other devices) perform a huge work within close_device.
Since close_device is called via finalization method from memory
manager, some device structures could be released before calling
device_close, so that the huge work could not safely complete.
Also it could return error codes, which were entirely lost.

This patch calls gs_closedevice implicitly when a device
is about to uninstall. We catch 2 such events : when the interpreter
is about to exit, and when the interpreter executes setdevice.
This should be enough for "external" devices, such as printer drivers.
Internal devices do not receive these calls.

Note that a call to gx_device_fill_in_procs is added after assign_dev_procs
from gx_default_create_buf_device. Not sure why it was not done before.
After assign_dev_procs, ppmraw had ununitialized procs.

Also note that is_open flag is now unconditionally resets in gs_closedevice.
The new code needs to reset it to prevent redundant call to close_device from
device finalization method. The redundant call causes
a crash if pdfwrite has insufficient disk space to store the
output file (debugged with dina3_watermark.pdf) .

Bug 601255 "segv while device finalization".
</pre></blockquote>

<p><strong><a name="2003-02-24_1350"></a>
2003-02-24 13:50 Alex Cherepanov</strong></p>
<blockquote><pre>
Avoid dictfull error; allocate page dictionary as large as the image
cache size. Wrap the image data string in the executable array because
some interpreters require the procedure data source.
Fixes bug #643398
</pre></blockquote>

<p><strong><a name="2003-02-22_1805"></a>
2003-02-22 18:05 Ralph Giles</strong></p>
<blockquote><pre>
Use the correct debug macro in the recently committed struct_array
allocation checks. Only relevent to the debug build.
</pre></blockquote>

<p><strong><a name="2003-02-22_0550"></a>
2003-02-22 05:50 Alex Cherepanov</strong></p>
<blockquote><pre>
Return error immediately when glyph ID is not found in GlyphDirectory.
Avoid access to partly constructed GlyphData and obscure failures there.
Fixes SourceForge bug #672129

DETAILS:
This change has no effect on rendering. Old code was
failing during access to GlyphData, which caused default glyph
substitution. New code returns the error earlier and causes
the same default glyph substitution.
</pre></blockquote>

<p><strong><a name="2003-02-21_1852"></a>
2003-02-21 18:52 Ray Johnston</strong></p>
<blockquote><pre>
Add runtime validity checking related to struct_array allocations. This is
only enabled for DEBUG builds so the checks will not slow down production
builds. Related to bug 669170.
</pre></blockquote>

<p><strong><a name="2003-02-21_1848"></a>
2003-02-21 18:48 Ray Johnston</strong></p>
<blockquote><pre>
Fix SEGV when cmap allocation failed (check for pcmap==NULL was misplaced).
</pre></blockquote>

<p><strong><a name="2003-02-21_1122"></a>
2003-02-21 11:22 Igor Melichev</strong></p>
<blockquote><pre>
Fix : Don't generate the warning "/Unicode /Decoding is not accessible"
when working with no pdfwrite device.
</pre></blockquote>

<p><strong><a name="2003-02-20_2134"></a>
2003-02-20 21:34 Alex Cherepanov</strong></p>
<blockquote><pre>
The fact that pswrite and epswrite devices generate low level
PostScript has been documented as a known limitation.
</pre></blockquote>

<p><strong><a name="2003-02-20_1857"></a>
2003-02-20 18:57 Jack Moffitt</strong></p>
<blockquote><pre>
Forces test scripts which take files as arguments to treat the files as
names rather than paths.
</pre></blockquote>

<p><strong><a name="2003-02-20_1834"></a>
2003-02-20 18:34 Igor Melichev</strong></p>
<blockquote><pre>
Fix : A structure discriptor was wrong allocating an array of gs_cid_system_info.

DETAILS :

This also unwinds the patch
http://www.ghostscript.com/pipermail/gs-cvs/2003-February/002895.html
</pre></blockquote>

<p><strong><a name="2003-02-20_1338"></a>
2003-02-20 13:38 Alex Cherepanov</strong></p>
<blockquote><pre>
Fix: Use default procedures for non-forwarding component bbox device.
Forwarding procedures cannot be used if there's no target device.

DETAILS :

Bug #636210

This is a partial fix for bug #636210.
Another part, I/O error processing, will be posted separately.
This change was locally tested with full regression test.
</pre></blockquote>

<p><strong><a name="2003-02-18_1957"></a>
2003-02-18 19:57 Igor Melichev</strong></p>
<blockquote><pre>
This is initial commit for implementing static resources.

DETAILS :

1. Adding a new iodevice %static% with the new file ziodevst.c .
It is used for opening files placed in static data segment.
They need to be accessed as PS files due to multiple reasons,
including the implementation of gs_ciddc.ps and for PS procedure
ResourceFileName defined in PLRM.

2. Implementing a queue for delayed invocation
of initialization functions at end of gs_init.
This feature is necessary due to customized
builds of Ghostscript : some 'dev' depend each
on other and some functions are needed to execute
after all devs are preset. Currently it is only used
for obtaining the Unicode Decoding resource,
but later it will be used for perfectly consistent
processing of font and CID font map files,
both with FAPI and without it.

3. gs_resmp.ps slightly changed for handling
resource maps which are not defined as files.

4. The new file gs_resst.ps implements a procset
for handling static resource files. Both gs_resst.ps and
gs_ciddc.ps use the %static% iodevice.

5. The new file gs_resst.ps creates a map of resource files
placed in static segment. Later it would be nice
to generate it during GS installation. With the defined
resource set gs_init.obj grows up to 1.5Meg,
but both MSVC and gcc/Cygwin could handle it.

Currently all resources in gs_stres.ps are COMMENTED OUT
to prevent problems building Ghostscript with COMILE_INITS=1
on Mac and VMS. To uncomment them, replace '%-' with empty string.

This patch was locally tested with entire comparefiles
with COMPILE_INITS=0. It should not cause regressions.
Also it was slightly tested with COMPILE_INITS=1 :
the static resources work fine.

The patch assumes that during a GS build resource files
are placed in gs/Resource/ . It uses 1 Decoding and
a dozen of CMaps, which are necessary for the CID font emulation
and for FAPI to work. You need to uncomment them
in gs_stres.ps .

When GS is invoked, resources are being loaded from both
the static segment and from the OLD(!!!!!) default path.
In other words, the resource machinery works fine,
but the default resource path is not fixed yet.
I intend to fix it in the next day or two.

The patch depends on
http://www.ghostscript.com/pipermail/gs-cvs/2003-February/002950.html

The patch does not include CMaps and Decodings resources.
They to be added separately.
</pre></blockquote>

<p><strong><a name="2003-02-17_0831"></a>
2003-02-17 08:31 Jouk Jansen</strong></p>
<blockquote><pre>

 Committing in .

 OpenVMS crash fix (temporarily)

 Modified Files:
 	gs/src/openvms.mmk
 ----------------------------------------------------------------------
</pre></blockquote>

<p><strong><a name="2003-02-17_0008"></a>
2003-02-17 00:08 Igor Melichev</strong></p>
<blockquote><pre>
Enhancing the functionality of geninit.c .

DETAILS :

1. Implemented "long" relative paths. See translate_path.
   Not sure what to do with separators on Mac.
   See the __MACOS__ section.
   This change was not debugged on Mac.
   In case of problems please patch it.

2. Moved some error messages to prefix_open,
   to allow translated paths to be displayed.

3. Implemented an intact including of files.
   This is useful for including Adobe resources.
   Don't want legal problems with them.
   The syntax of 'Replace' statement is enhanced.
</pre></blockquote>

<p><strong><a name="2003-02-16_1751"></a>
2003-02-16 17:51 Igor Melichev</strong></p>
<blockquote><pre>
Fix : Improving the CIDFontType 2 font copying.

DETAILS :

I believe that the code about copying CIDFontType 2 glyphs
is overcomplicated with mixing CIDs and GIDs, and needs to be
cleaned up. The old code had an obvious inconsistency :
it allocated a smaller array for glyph indices than written,
causing a heap damage. This patch simply makes the code to be
self-consistent. I can't say that I completely
understand whether CIDs/GIDs passed correctly or not.
Now it is working, but the correctness was not proved,
and Acrobat Reader doesn't show the glyph with /CIDTTEMUL
(see below).

The problem was detected with COMPILE_INITS=1 with emulating
a CID wont with mshei.ttf . The following program had crashed
with pdfwrite :

/glyph 2300 def
/ShinGo-Bold /CIDFont findresource
100 scalefont setfont
100 200 moveto glyph glyphshow
/CIDTTEMUL /CIDFont findresource
100 scalefont setfont
100 100 moveto glyph glyphshow
showpage

with the cidfmap file like this :

/ShinGo-Bold << /FileType /TrueType /Path (f:/WIN2000/Fonts/batang.ttf) /SubfontID 0 /CSI [(Japan1) 2] >> ;
/CIDTTEMUL << /FileType /TrueType /Path (f:/WIN2000/Fonts/mshei.ttf) /SubfontID 0 /CSI [(Japan1) 2] >> ;

The effect is indeterministic.
When I build GS with regenerate gs_init.c,
it crashed if run in same session of Developer Studio.
But if I close-open the Developer Studio and run GS,
it doesn't crash.

The patch should enlarge the array, which was written outside
the index range. The problem looks gone.
Meanwhile the CID/GID logics in gxcopy.c to be revised someday.
</pre></blockquote>

<p><strong><a name="2003-02-16_1728"></a>
2003-02-16 17:28 Igor Melichev</strong></p>
<blockquote><pre>
Fix : Improving the seekability of the init string file.

DETAILS :

See comment in code.

This problem was found while developing a dead branch.
Rather it will not go to the mainstream development,
I'd like to keep track on it.
If the patch causes a problem, it can be safely unwinded.
</pre></blockquote>

<p><strong><a name="2003-02-15_2237"></a>
2003-02-15 22:37 Ray Johnston</strong></p>
<blockquote><pre>
Change the fixed point precision for device coordinates to 8 bits. The
previous 12 bits was too large to accomodate large format inkjet printers
at modern resolutions of 720 and 1200 dpi.
</pre></blockquote>

<p><strong><a name="2003-02-14_0134"></a>
2003-02-14 01:34 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : hmtx was wrongly written with CIDFontType 2 subset.

DETAILS:

Source Forge bug #683690.
</pre></blockquote>

<p><strong><a name="2003-02-13_2226"></a>
2003-02-13 22:26 Igor Melichev</strong></p>
<blockquote><pre>
Fix : Replacing UTC-16 with correct UTF-16 in documentation and comments.
</pre></blockquote>

<p><strong><a name="2003-02-13_2005"></a>
2003-02-13 20:05 Ralph Giles</strong></p>
<blockquote><pre>
Improve wording and sentence structure for some recent documentation
additions.
</pre></blockquote>

<p><strong><a name="2003-02-13_1119"></a>
2003-02-13 11:19 Igor Melichev</strong></p>
<blockquote><pre>
Adding a documentation about Decoding and CIDDecoding resource categories.
</pre></blockquote>

<p><strong><a name="2003-02-13_0924"></a>
2003-02-13 09:24 Igor Melichev</strong></p>
<blockquote><pre>
Fix : The condition in .pdf_hook_DSC_Creator was too general.
Restricting the Type 32 font disabling with pdfwrite device only.
</pre></blockquote>

<p><strong><a name="2003-02-13_0753"></a>
2003-02-13 07:53 Dan Coby</strong></p>
<blockquote><pre>
Partial fix for 684340.  Remove the macro gx_color_device_must_halftone
and its one (incorrect use).

DETAILS:
The macro gx_color_device_was meant for situations in which the device
was known to be a color device and it was needed to know if halftoning
was required.  With the 8.00 changes in the graphics library, the
one situation that it was being used is incorrect.  The macro was also
wrong since it was checking dev->color_info.max_gray.  It should have
been checking color_info.max_color.  The macro was removed.  Please
use gx_device_must_halftone in its place.
</pre></blockquote>

<p><strong><a name="2003-02-13_0154"></a>
2003-02-13 01:54 Igor Melichev</strong></p>
<blockquote><pre>
Fix : Stack balance in .pdf_hook_DSC_Creator .
</pre></blockquote>

<p><strong><a name="2003-02-12_2306"></a>
2003-02-12 23:06 Igor Melichev</strong></p>
<blockquote><pre>
Adding a documentation about GlyphNames2Unicode.
</pre></blockquote>

<p><strong><a name="2003-02-12_2231"></a>
2003-02-12 22:31 Igor Melichev</strong></p>
<blockquote><pre>
Fix : Removing an unused procedure.
</pre></blockquote>

<p><strong><a name="2003-02-12_1457"></a>
2003-02-12 14:57 Ralph Giles</strong></p>
<blockquote><pre>
Add the new jbig2 filter sources to the file listing.
</pre></blockquote>

<p><strong><a name="2003-02-12_1430"></a>
2003-02-12 14:30 Igor Melichev</strong></p>
<blockquote><pre>
pdfwrite : Disable 32 /FontType resource while processing a document
created with PScript5.dll .

DETAILS:

This patch completes the previous one. See details in there.
Also see comment in .pdf_hook_DSC_Creator defined by this patch.

This patch may be insufficiently safe for the case when
several documents are being united while a distillation.
We would like to restore the redefinition of 'resourcestatus'
after a document completes, but we don't know how to do
(exactly, where to call the restoring action from ?).
In general, what happens with

     gs -sDEVICE=pdfwrite -OutputFile=1.pdf document1.ps document2.ps -c quit

?
</pre></blockquote>

<p><strong><a name="2003-02-12_1429"></a>
2003-02-12 14:29 Igor Melichev</strong></p>
<blockquote><pre>
pdfwrite : Account GlyphNames2Unicode while creating ToUnicode CMaps for simple fonts.

DETAILS:

This patch improves the previous one.
It generalizes the GlyphNames2Unicode processing for any simple font.

GlyphNames2Unicode is an undocumented facility, which Adobe Postscript
printer driver PScript5.dll Version 5.2 uses to communicate with
Adobe Distiller. Adobe applies it to Type 3 and Type 42 fonts.

Adobe uses Type 3 with GlyphNames2Unicode only for compatibility
with interpreters, which cannot handle Type 32. With other
interpreters (including Ghostscript) the generated PS program
skips GlyphNames2Unicode data. Therefore the feature
is now implemented for Type 3 but it is not involved while
processing such documents. Need to patch "32 /FontType findresource"
to involve it. Probably with pdfwrite the DSC parser should recognize
the creator and exclude 32 from /FontType resource category.

This patch unwinds the enhanced functionality of gs_font_procs::glyph_info
with GLYPH_INFO_UTC16, which was done with the previous patch,
and introduces a new virtual function gs_font_procs::decode_glyph.
Doing so because GLYPH_INFO_UTC16 causes multiple redundant code
for various font types due to dependence on interpreter structures.

SF bug #684120 tracks additional issues.
</pre></blockquote>

<p><strong><a name="2003-02-12_0216"></a>
2003-02-12 02:16 Ralph Giles</strong></p>
<blockquote><pre>
Initial implementation of the /JBIG2Decode filter. This adds a '$(PSD)jbig2.dev'
FEATURE_DEV which links in the libjbig2dec decoder library. This version does
not support the optional /JBIG2GLOBALS parameter for sharing information between
page images. However, it is still useful as this parameter has been empty in
the files we've seen. The feature in enabled for the autoconf build if the
decoder library is found on the system, and remains optional with the other builds.
</pre></blockquote>

<p><strong><a name="2003-02-11_2221"></a>
2003-02-11 22:21 Igor Melichev</strong></p>
<blockquote><pre>
pdfwrite : Account GlyphNames2Unicode while creating ToUnicode CMaps
for Type 42 fonts.

DETAILS:

GlyphNames2Unicode is an undocumented facility, which Adobe Postscript
printer driver PScript5.dll Version 5.2 uses to communicate with
Adobe Distiller. Adobe applies it to Type 3 and Type 42 fonts.

Type 3 with GlyphNames2Unicode is used only for compatibility
with interpreters, which cannot handle Type 32.
Since Ghostscript is not such, there is no need to implement
Type 3 with GlyphNames2Unicode. We don't do that.

This patch enhances the functionality of gs_font_procs::glyph_info
with retrieving Unicode UTC-16 code for a glyph. This enhancement
is implemented for practically useful cases only, which are
restricted with Type 42.

The gs_font_dir::glyph_to_unicode
callback is now removed because it is not longer useful.

SF bug #684120 tracks additional issues.

Working on this patch, I tried put the Unicode Decoding table
as a default value to FontInfo.GlyphNames2Unicode and remove the unicode_decoder.
But it appears not working, because test.ps for SF bug #529103 needs to
collect substitutions from both FontInfo.GlyphNames2Unicode and Unicode Decoding.

I removed the "WARNING: /Unicode /Decoding resource in not accessible",
because the flag for preventing its repetitions is not accessible from
gs_font_procs::glyph_info. A similar warning in lib/gs_pdfwr.ps still works.
</pre></blockquote>

<p><strong><a name="2003-02-10_2243"></a>
2003-02-10 22:43 Dan Coby</strong></p>
<blockquote><pre>
The display device (src/gdevdsp.c) was displaying pure magenta as
white when using the DISPLAY_UNUSED_LAST mode.

DETAILS:
The cause of the problem was a sign bit extention in a 32 to 64
bit conversion (long to gx_color_index).  The fix was to add casts
to force the conversion to gx_color_index (which is unsigned) earlier
in the assigment.
</pre></blockquote>

<p><strong><a name="2003-02-10_1847"></a>
2003-02-10 18:47 Alex Cherepanov</strong></p>
<blockquote><pre>
Added link to a new file: pfbtopfa.bat
</pre></blockquote>

<p><strong><a name="2003-02-10_1739"></a>
2003-02-10 17:39 Ray Johnston</strong></p>
<blockquote><pre>
Fix a stack problem when doing small-caps substitution on a substituted
font referenced from a PDF file. Problem seen with Adobe's PDF 1.2 spec.

SourceForge bug# 683997 for Artifex customer #150.
</pre></blockquote>

<p><strong><a name="2003-02-10_1701"></a>
2003-02-10 17:01 Ralph Giles</strong></p>
<blockquote><pre>
Document that pdfwrite and pswrite do not support the '%d' file-per-page
convention for -sOutputFile. Partial fix for Sourceforge bug 645677.

DETAILS:

Ghostscript actually segfaults when an output file name containing %d
is passed to pdfwrite or pswrite. This remains to be resolved.
</pre></blockquote>

<p><strong><a name="2003-02-10_1653"></a>
2003-02-10 16:53 Igor Melichev</strong></p>
<blockquote><pre>
Fix: Some compiler warnings.
</pre></blockquote>

<p><strong><a name="2003-02-10_1631"></a>
2003-02-10 16:31 Igor Melichev</strong></p>
<blockquote><pre>
Improving gs_font_procs interface functions glyph_info and glyph_outline.

DETAILS:

The old interface definition provided insufficient data for pdfwrite.
Several hacks was used in pdfwrite to recover the luck of data.
This patch slightly enhances the interface and removes the hacks.
See new comments in gxfont.h about the enhancement.

The interface could be more complete - see comments in gxfont.h .
Now we do not apply efforts for refinishing it, because
there is no practical need and we have no tests for it.

This patch improves glyph positions with pdfwrite for fonts with
vertical CMaps. comparefiles do not test this case.

Minor change : fixed compiler warnings in gdevpdtd.c .
</pre></blockquote>

<p><strong><a name="2003-02-07_1543"></a>
2003-02-07 15:43 Igor Melichev</strong></p>
<blockquote><pre>
The CID to TT mapping : Implementing a glyph data cache.

DETAILS:

The implementation of the CID font emulator is completed.

Minor changes :

- Fixed a compiler warning in gdevpdfu.c .
</pre></blockquote>

<p><strong><a name="2003-02-07_0031"></a>
2003-02-07 00:31 Igor Melichev</strong></p>
<blockquote><pre>
Fix : Improving comments in map file samples.
</pre></blockquote>

<p><strong><a name="2003-02-07_0023"></a>
2003-02-07 00:23 Igor Melichev</strong></p>
<blockquote><pre>
Improving a documentation about emulating CID fonts with True Type fonts.
</pre></blockquote>

<p><strong><a name="2003-02-06_1743"></a>
2003-02-06 17:43 Alex Cherepanov</strong></p>
<blockquote><pre>
Default CRD name is /DefaultColorRendering , not /Default
Fixes SourceForge bug #667351 from customer #150
</pre></blockquote>

<p><strong><a name="2003-02-06_1302"></a>
2003-02-06 13:02 Igor Melichev</strong></p>
<blockquote><pre>
Fix (FAPI) : A portability bug about arithmetic shift.
</pre></blockquote>

<p><strong><a name="2003-02-06_0940"></a>
2003-02-06 09:40 Igor Melichev</strong></p>
<blockquote><pre>
pdfwrite : Generating ToUnicode CMaps for simple fonts.
For fonts with random encoding it allows to Copy-Paste text
from viewers and to search a text.

DETAILS:

This code requires /Unicode /Decoding resource.
If the resource is absent, PDF will be written without ToUnicode CMap,
a warning is written to stdout explaining that the resource may be useful,
and another warning may be written to stderr if the resource is actually
useful for the document.

To access the resource I introduced a special operator .setupUnicodeDecoder .
It is called from gs_pdfwr.ps and stores the resource to gs_font_dir,
together with a callback which performs the decoding.
This is only a way to pass the resource through the graphics library.
It is definitely not a device parameter, and converting it to
C structures would be hard.

I don't like the big stuff added into zfont.c, but I haven't got
a better idea where to put it.

Minor change : fixed Cygwin/gcc compiler warnings.
</pre></blockquote>

<p><strong><a name="2003-02-06_0609"></a>
2003-02-06 06:09 Alex Cherepanov</strong></p>
<blockquote><pre>
Created for completeness and convenience to Windows users.
</pre></blockquote>

<p><strong><a name="2003-02-05_1345"></a>
2003-02-05 13:45 Ralph Giles</strong></p>
<blockquote><pre>
Remove documentation about the Pn() macros for K&R compatibility. They
were entirely removed prior to the 8.00 release.
</pre></blockquote>

<p><strong><a name="2003-02-05_0740"></a>
2003-02-05 07:40 Igor Melichev</strong></p>
<blockquote><pre>
Fix (FAPI) : Improving error messages.
</pre></blockquote>

<p><strong><a name="2003-02-04_2313"></a>
2003-02-04 23:13 Igor Melichev</strong></p>
<blockquote><pre>
(pdfwrite) : Fixing glyph width with WMode=1.

DETAILS:

Expecting a progression with 093-01.ps .
</pre></blockquote>

<p><strong><a name="2003-02-04_1650"></a>
2003-02-04 16:50 Igor Melichev</strong></p>
<blockquote><pre>
(pdfwrite) : Fixing a check for NULL pointer pdf_attached_font_resource,
and propagating return codes from there.
</pre></blockquote>

<p><strong><a name="2003-02-04_1546"></a>
2003-02-04 15:46 Igor Melichev</strong></p>
<blockquote><pre>
(pdfwrite) : Improving the safety of pdf_font_cache_elem arrays.

DETAILS :

The patch should not change any behavior.
It only inserts some index range checks while accessing arrays.
It was not neccessary, but it helped to locate a different problem.
</pre></blockquote>

<p><strong><a name="2003-02-04_1524"></a>
2003-02-04 15:24 Igor Melichev</strong></p>
<blockquote><pre>
Fix (new Type 1 hinter) : Exported an excessive moveto when hints are disabled.

DETAILS:

This only affects pdfwrite.
Debugged with 401-01.ps .

Minor change :
Added some visual trace commands for the case of disabled hinting.
</pre></blockquote>

<p><strong><a name="2003-02-04_1505"></a>
2003-02-04 15:05 Igor Melichev</strong></p>
<blockquote><pre>
Fixing a garbager problem in pdfwrite.

DETAILS :

The patch
http://www.ghostscript.com/pipermail/gs-cvs/2003-February/002891.html
is incorrect and caused multiple regressions.
Replacing it with a better patch.

Releasing pdf_font_cache_elem while device finalization,
the structure lefts in heap due to memory manager is disabled,
but it's pointers become invalid if they point to a huge area,
which was allocated in a separate chunk with another allocator.
Reset the pointers to prevent the garbager's attempt to relocate them
after the huge chunk is released.
</pre></blockquote>

<p><strong><a name="2003-02-03_1935"></a>
2003-02-03 19:35 Igor Melichev</strong></p>
<blockquote><pre>
Fixing a garbager problem with gs_cmap_adobe1.
</pre></blockquote>

<p><strong><a name="2003-02-03_1632"></a>
2003-02-03 16:32 Igor Melichev</strong></p>
<blockquote><pre>
Fix (FAPI) : SubstNWP erroneusely used with non-CID fonts.
</pre></blockquote>

<p><strong><a name="2003-02-03_1606"></a>
2003-02-03 16:06 Igor Melichev</strong></p>
<blockquote><pre>
Fix (FAPI) : Improving the default value for the subpixel grid.
</pre></blockquote>

<p><strong><a name="2003-02-03_1559"></a>
2003-02-03 15:59 Igor Melichev</strong></p>
<blockquote><pre>
(pdfwrite) : Copying a composite True Type glyph, components were indexed wrongly.

DETAILS :

It applyed CIDMap to subglyph indices, rather it must not.
</pre></blockquote>

<p><strong><a name="2003-02-03_1400"></a>
2003-02-03 14:00 Igor Melichev</strong></p>
<blockquote><pre>
Fixing a garbager problem in pdfwrite.

DETAILS :

Releasing pdf_font_cache_elem while device finalization,
the structure lefts in heap due to memory manager is disabled,
but it's pointers become invalid. Reset the pointers
to prevent the garbager's attempt to relocate them later.
</pre></blockquote>

<p><strong><a name="2003-02-03_1253"></a>
2003-02-03 12:53 Igor Melichev</strong></p>
<blockquote><pre>
Fixing problems with AlignToPixels.

DETAILS :

1. Keys for character cache were incorrect, causing an excessive
   memory consumption (see the change to gxchar.c).
2. Subpixel grid and AlignToPixels were not passed to FAPI.

ifapi.h changed the prototype of get_scaled_font.
Therefore most changes are just a data re-srtucturization.
</pre></blockquote>

<p><strong><a name="2003-02-03_0927"></a>
2003-02-03 09:27 Igor Melichev</strong></p>
<blockquote><pre>
CID font emulation : Comply with FAPI.

DETAILS :

This patch allows to redirect emulated CID fonts to FAPI.
It is not neccessary, but I like this feature.
</pre></blockquote>

<p><strong><a name="2003-02-03_0832"></a>
2003-02-03 08:32 Igor Melichev</strong></p>
<blockquote><pre>
CID font emulation : Resolving relative paths.

DETAILS :

The implementation of the CID font emulator is now complete.
Perhaps an optimization is wanted for gs_type42_get_outline_from_TT_file.
See comment in there.
</pre></blockquote>

<p><strong><a name="2003-02-03_0759"></a>
2003-02-03 07:59 Jouk Jansen</strong></p>
<blockquote><pre>

 Committing in .

 OpenVMS patches

 Modified Files:
 	gs/src/gp_vms.c gs/src/gsfcid.c gs/src/openvms.mmk
 ----------------------------------------------------------------------
</pre></blockquote>

<p><strong><a name="2003-02-02_2143"></a>
2003-02-02 21:43 Igor Melichev</strong></p>
<blockquote><pre>
A documentation about emulating CID fonts with True Type fonts.
</pre></blockquote>

<p><strong><a name="2003-02-01_1856"></a>
2003-02-01 18:56 Igor Melichev</strong></p>
<blockquote><pre>
The CID to TT mapping : Providing a single map file
for both the CID font to CID font substitution and
True Type font to CID font substitution.

DETAILS:

Minor changes :

- Allowed a mapped category redefinition with no map file.
  The map file may be delayed until a later redefinition.
- Changed the order of CIDFont category redefinitions in int.mak .
- Removed the usage of gs/lib/cidttmap.
- Improved a comment in gs/lib/cidfmap about its format.
- Provided an automatic choice of SubstNWP.
- Added an idle entry into the SubstNWP collection.
- Added a comment in zfapi.c . It's a problem.

The implementation of the CID font emulator is almost complete except 2 features :

1. Relative paths are not allowed in the gs/lib/cidfmap file.
2. An optimization is wanted for gs_type42_get_outline_from_TT_file.
   See comment in there.
</pre></blockquote>

<p><strong><a name="2003-01-31_1739"></a>
2003-01-31 17:39 Igor Melichev</strong></p>
<blockquote><pre>
Fix : Removing some unused variables.
</pre></blockquote>

<p><strong><a name="2003-01-31_1628"></a>
2003-01-31 16:28 Igor Melichev</strong></p>
<blockquote><pre>
The CID to TT mapping : Building CIDMap with SubstNWP.

DETAILS:

This patch should not change any behavior if a new file
gs/lib/cidttmap is not added. Normally it is not.

With this patch narrow, wide and proportional Romans
may substitute each another while emulating a CJK CID font
with True Type font. Usually True Types contain insufficient
glyph to render all them. The substitution prevents missed glyphs.

This patch introduces a new special operator .fillCIDMap .
It composes a CID map from a Decoding, a True Type cmap,
and SubstNWP. PS code would be too big and slow for this purpose.

The implementation of the CID font emulator is almost complete except 2 features :

1. The CID font to CID font mapper and
   the True Type to CID font mapper use different map files -
   cidfmap and cidttmap.

2. An optimization is wanted for gs_type42_get_outline_from_TT_file.
   See comment in there.

Minor changes :

- Fixed a bug in gs_cidfn.ps which tried to store a local
  FontMatrix to a global font dictionary.

- A portion of code is factored out from zfapi.c to share with  .fillCIDMap
</pre></blockquote>

<p><strong><a name="2003-01-31_1257"></a>
2003-01-31 12:57 Ralph Giles</strong></p>
<blockquote><pre>
Remove a spurious include for MAXPATHLEN. Discovered fixing SF bug 675847.
</pre></blockquote>

<p><strong><a name="2003-01-31_1254"></a>
2003-01-31 12:54 Igor Melichev</strong></p>
<blockquote><pre>
CID font emulation : Choosing a cmap with gs/lib/xlatmap.

DETAILS:

This patch only changes a code which work for
FAPI or for CID font emulation. Regular GS invocation
should not change a behavior.

This is a next step of the CID font emulation.
Now it can handle all Windows JCK charsets, including Unicode-16.
In other words, a CJK font with any Windows charset can be used for emulation.
To handle other CJK charsets one should create an appropriate
CIDDecoding resource and add it into gs/lib/xlatmap.

Minor changes :

- Speeded up the TT file parser using the 'setfileposition'.

- Improved some diagnostic messages.

The implementation of the CID font emulator is still incomplete :

1. The CID font to CID font mapper and
   the True Type to CID font mapper use different map files -
   cidfmap and cidttmap.

2. SubstNWP is being ignored.

3. An optimization is wanted for gs_type42_get_outline_from_TT_file.
   See comment in there.
</pre></blockquote>

<p><strong><a name="2003-01-31_1251"></a>
2003-01-31 12:51 Ralph Giles</strong></p>
<blockquote><pre>
Fixup makefile dependencies after changing header includes in gp_unifs.h.
Part of the fix for SF bug 675847.
</pre></blockquote>

<p><strong><a name="2003-01-31_1248"></a>
2003-01-31 12:48 Ralph Giles</strong></p>
<blockquote><pre>
Use the ANSI-standard FILENAME_MAX from stdio.h instead of MAXPATHLEN from
sys/param.h for unix path buffers. Fixes SF bug 675847.

DETAILS:

We should actually be using gp_file_name_sizeof here, but it's currently
a static define to a lowest common denominator, and we prefer a more
unix-friendly default. This can of course be changed if the _sizeof is
properly configured per platform.
</pre></blockquote>

<p><strong><a name="2003-01-31_0936"></a>
2003-01-31 09:36 Igor Melichev</strong></p>
<blockquote><pre>
The CID to TT mapping :
1. Providing an access to glyphs on demand.
2. Handle TTC font format.

DETAILS:

This patch should not change any behavior if a new file
gs/lib/cidttmap is not added. Normally it is not.

With this patch glyf and loca tables are being skipped while loading
a True Type into RAM. An access by demand is provided instead
(This works for CIDFontType 2; it is not used for Type 42).

Map file may contain records with SubfontID, which
specifies a font number in a TTC collection.
TTC format is implemented for disk files only,
because embedded fonts never use it.

To provide the on-demand access, the patch introduces a special
extension of the Postscript language.
A CIDFontType 2 dictionary may contain /File with a file value.
It should be a positionable file of the TTF or TTC format.
When it presents, the dictionary must contain /file_table_pos,
which's value is a dictionary of 2-element arrays, which specify
position and length of a TT table in the file. 2 arrays
must present with keys /loca and /glyph.

We would like to optimize this implementation.
See comment in gs_type42_get_outline_from_TT_file.
</pre></blockquote>

<p><strong><a name="2003-01-31_0905"></a>
2003-01-31 09:05 Dan Coby</strong></p>
<blockquote><pre>
Fix for 673108.  The test file has a stream which contains an invalid
stream length.  However Acrobat handles the file.

Details:
The invalid stream length was bad enough that we were positioning beyond
the end of the file when we searched for the endstream.  A check was
added for this case and if so then we ignore repositioning the file
before searching for the endstream.  Note:  There is already logic in
the code which emits a warning message if the endstream is not found.
A second part of this fix was to clean up the stack if the endstream
is not found.
</pre></blockquote>

<p><strong><a name="2003-01-30_1044"></a>
2003-01-30 10:44 Igor Melichev</strong></p>
<blockquote><pre>
CID font emulation : Adding a code for CIDMap generation,
and moving the xlatmap scanner to gs_fntem.ps .

DETAILS:

This patch only changes a code which work for
FAPI or for CID font emulation. Regular GS invocation
should not change a behavior.

This is a next step of the CID font emulation.
Now it correctly maps most CIDs to Unicode fonts.

Secondary changes :

- I made xlatmap accessible from gs_ttf.c .
  It should be used choosing a cmap.

- improving some comments and function names.

- Removed a redundant definition of a CIDFont,
  which was unintentionally introduced with the previous patch.

The implementation of the CID font emulator is still incomplete :

1. Entire True Type fonts are loaded into VM.

2. SubfontID is being ignored.

3. The CID font to CID font mapper and
   the True Type to CID font mapper use different map files -
   cidfmap and cidttmap.

4. Access to glyphs by demand is not done.

5. SubstNWP is being ignored.

6. The choice the Unicode cmap is hardcoded.
   Should use xlatmap instead.

The previous log message recommends to use PMINGLIU.TTF.
Actually it requires a True Type bytecode interpreter,
which GS doesn't provide. The font mshei.ttf does not.
</pre></blockquote>

<p><strong><a name="2003-01-29_2024"></a>
2003-01-29 20:24 Ray Johnston</strong></p>
<blockquote><pre>
Fix for incorrect colors with pswrite device when painting rectangles.
SF bug 677009.

DETAILS:

The call to gdev_vector_update_clip_path followed the update_fill call
which set the color, but the clip path performed a 'Q q' (grestore gsave)
which reverted to whatever color was part of the previous saved gstate.
Changing the order of the calls fixes the problem.
</pre></blockquote>

<p><strong><a name="2003-01-29_1100"></a>
2003-01-29 11:00 Igor Melichev</strong></p>
<blockquote><pre>
Enhancing the resource machinery with mapping CID fonts to True Types.

DETAILS:

This patch should not change any behavior if a new file
gs/lib/cidttmap is not added. Normally it is not.

Adding 2 new files gs_fntem.ps and gs_cidtt.ps and reorganizing
old files gs_cidfn.ps, gs_fapi.ps, gs_resmp.ps with them.
This moves a part of FAPI support to a more general level.
The moved stuff is shared with the FAPI and the new CID font mapper.

After this change Ghostscript can load Unicode True Type fonts
as a substitution to a CIDFontType 2 and render it.
At least the Windows font PMINGLIU.TTF succeeds.
But the implementation is very incomplete :

1. The CID to GID mapping is fully wrong.

2. Entire True Type fonts are loaded into VM.

3. The CID font to CID font mapper and
   the True Type to CID font mapper use different map files -
   cidfmap and cidttmap.

All these 3 solutions are temporary and to be improved later.

To involve the new feature, create a new file gs/lib/cidttmap,
and put records to there of the following format :

/ShinGo-Bold  << /FileType /TrueType /Path (F:/WIN2000/Fonts/PMINGLIU.TTF) /CSI [(Japan1) 2] /SubstNWP /Japan1 >> ;

It is similar to gs/lib/FAPIcidfmap, see Use.htm about the latter.

This patch does not include a change to documentation,
because it is too early to announce it to users.
</pre></blockquote>

<p><strong><a name="2003-01-29_0923"></a>
2003-01-29 09:23 Igor Melichev</strong></p>
<blockquote><pre>
FAPI : Removing unuseful includes.
</pre></blockquote>

<p><strong><a name="2003-01-29_0919"></a>
2003-01-29 09:19 Igor Melichev</strong></p>
<blockquote><pre>
FAPI : A further improvement for the GS/FreeType bridge.
Patch from Graham Asher.

DETAILS :

Without FAPI plugins this patch doesn't change any behaviour.

Minor improvements by igorm :

- fixed a spelling;
- FAPI_METRICS_ADD was buggy - a fixed overflow (thanks to Graham).
- removed unuseful dependencies from makefile.
</pre></blockquote>

<p><strong><a name="2003-01-29_0853"></a>
2003-01-29 08:53 Igor Melichev</strong></p>
<blockquote><pre>
Fix : Eliminate .forceput from gs_resmp.ps .

DETAILS:

This patch should not change any behavior.

A mapped category used an array to store a set of procedures.
Sometimes the set grows, and the old implementation
used .forceput to replace the array with a bigger one
in the category dictionary, which is read-only.

The new code represents the set as a dictionary,
so that .forceput is not longer needed.
</pre></blockquote>

<p><strong><a name="2003-01-29_0850"></a>
2003-01-29 08:50 Igor Melichev</strong></p>
<blockquote><pre>
pdfwrite : Implementing DW2 and W2.

DETAILS :

This feature is not tested with comparefiles and should
not cause regressions. But the test file 093-01.ps may render
differently due to a bug the test file. See SF bug #674418.
</pre></blockquote>

<p><strong><a name="2003-01-28_1909"></a>
2003-01-28 19:09 Ray Johnston</strong></p>
<blockquote><pre>
Fix regression of 119-01.ps caused by previous patch while retaining the
fix for #667658 when CR and/or LF comes between the '~' and the '>'.

DETAILS:

The logic was also fixed so that if the end of buffer is reached while
searching for the '>' character (past CR and/or LF) no error would be
issued unless we have the 'last' condition indicating that no more data
is available.

Thanks to Igor M. for spotting the above potential problem during code
review.
</pre></blockquote>

<p><strong><a name="2003-01-27_1729"></a>
2003-01-27 17:29 Ralph Giles</strong></p>
<blockquote><pre>
Switching to the new type 1 hinter and the new filling algorithm.
THIS IS INCOMPATIBLE CHANGE.
Most documents render better.

DETAILS:

Rudiments of old code to be kept until beta-testing is completed.
Patch from Igor Melichev.
</pre></blockquote>

<p><strong><a name="2003-01-27_1621"></a>
2003-01-27 16:21 Ralph Giles</strong></p>
<blockquote><pre>
Improve the wording of and clarify the documentation for AlignToPixels.
Also restores the documentation for -dPDFFitPage removed by the initial
commit of the AlignToPixels feature.
</pre></blockquote>

<p><strong><a name="2003-01-26_1145"></a>
2003-01-26 11:45 jeong</strong></p>
<blockquote><pre>
If s_A85D_process encounters CR/LF between '~' and '>', it returns ioerror.
Now it is changed to ignore CR and/or LF before '>', and works fine.
Fixes SF#667658.
</pre></blockquote>

<p><strong><a name="2003-01-26_0858"></a>
2003-01-26 08:58 Igor Melichev</strong></p>
<blockquote><pre>
Fix : Removing an unused variable from set_cache_device.
</pre></blockquote>

<p><strong><a name="2003-01-26_0824"></a>
2003-01-26 08:24 Igor Melichev</strong></p>
<blockquote><pre>
Implementing a new user parameter AlignToPixels and
a new command line argument AlignToPixels.
They allow to choose the alignment of glyphs to
integral pixels or to subpixels while a text rendering.

DETAILS:

This patch should not change any behavior except
-dAlignToPixels=0 is specified.

A change to documentation about the new parameter is included.

With NEW_TYPE1_HINTER = 1 the value 0 of AlignToPixels implies :

1. Caching a glyph raster, fractional glyph origins
give different images, which are stored
in individual slots. The space consumption in the
character cache increases. This happens for all font types.

2. While hinting a Type 1 or 2 font, glyph origins and widths
are rounded to subpixels rather than to pixels, and the grid fitting
is done to the subpixel grid.

CIDFontType 0 descendents had NULL pointer to gs_font_dir.
The new code needs to access the font directory,
so the pointer is now set.

The new code needs glyph origin and log2_scale to lookup
a glyph in cache. Therefore show_proceed and
set_cache_device were reorganized with a new function
compute_glyph_raster_params. The new algorithm uses a
slightly different (and more complicated) logics
for computation and initialization of penum->origin.
It was well tested, but in case of problems please
consider it as a weak point.
</pre></blockquote>

<p><strong><a name="2003-01-25_2250"></a>
2003-01-25 22:50 Ralph Giles</strong></p>
<blockquote><pre>
Universally prefer the __MACOS__ platform predefined symbol used by recent
releases of Metrowerks CodeWarrior to the older __MACINTOSH__.
</pre></blockquote>

<p><strong><a name="2003-01-25_1632"></a>
2003-01-25 16:32 Igor Melichev</strong></p>
<blockquote><pre>
Fix (dropout prevention) : Insetred a check for VMerror.

DETAILS:

This patch cheanges a disabled code only.
</pre></blockquote>

<p><strong><a name="2003-01-25_0109"></a>
2003-01-25 01:09 Ralph Giles</strong></p>
<blockquote><pre>
Supply local macros to replace non-portable min() and max() functions from MSVC.
</pre></blockquote>

<p><strong><a name="2003-01-24_2230"></a>
2003-01-24 22:30 Dan Coby</strong></p>
<blockquote><pre>
This is a temporary backout of rev 1.12 while its changes are being
investigated.  This is being done to prevenet interference with some
other efforts.
</pre></blockquote>

<p><strong><a name="2003-01-24_2053"></a>
2003-01-24 20:53 Ray Johnston</strong></p>
<blockquote><pre>
Add a new feature to scale PDF images to the current page size (rather
than selecting a PageSize corresponding to the document CropBox or
MediaBox). The command line option is -dPDFFitPage and will also position
the image to the printable area of the page (inside .HWMargins).
</pre></blockquote>

<p><strong><a name="2003-01-24_1939"></a>
2003-01-24 19:39 Ray Johnston</strong></p>
<blockquote><pre>
Fix inconsistent type on QueryUser -- get_param was returning a 'bool' but
set_param required an 'int'. Error was /typecheck in setpagedevice or
could be /rangecheck in .installpagedevice after a page was processed.
</pre></blockquote>

<p><strong><a name="2003-01-24_1932"></a>
2003-01-24 19:32 Ray Johnston</strong></p>
<blockquote><pre>
Correct typo (missing space) in previous change.
</pre></blockquote>

<p><strong><a name="2003-01-24_1928"></a>
2003-01-24 19:28 Ray Johnston</strong></p>
<blockquote><pre>
Change to use ECHOGS_XE instead of system echo to avoid problems if an
echo is found on the PATH that expands wildcards '*' character. Problem
found by Torsten Erler when Cygwin echo caused a problem.
</pre></blockquote>

<p><strong><a name="2003-01-24_1334"></a>
2003-01-24 13:34 Igor Melichev</strong></p>
<blockquote><pre>
New Type 1 hinter : Fixing a bug in alignment to (non-sub)pixels.

DETAILS:

This patch changes a disabled code only.

Also improving the debug drawing of grid.
</pre></blockquote>

<p><strong><a name="2003-01-24_0725"></a>
2003-01-24 07:25 Igor Melichev</strong></p>
<blockquote><pre>
Fix (dropout prevention) : Did not work with -dNOCACHE.

DETAILS:

bbox_width was taken from a clipped bbox.
</pre></blockquote>

<p><strong><a name="2003-01-24_0503"></a>
2003-01-24 05:03 Igor Melichev</strong></p>
<blockquote><pre>
New Type 1 hinter : Fixing glyph widths.

DETAILS:

This patch changes a disabled code only.

See comment in code.

Also improved a comment and C-style.
</pre></blockquote>

<p><strong><a name="2003-01-24_0039"></a>
2003-01-24 00:39 Igor Melichev</strong></p>
<blockquote><pre>
New Type 1 hinter : (1) It did not work with pdfwrite because
gx_path_init_bbox_accumulator doesn't provide a memory.
(2) Coded an alignment to subpixels.
(3) Removed a hack about suppressing a microscopic segment.

DETAILS:

This patch changes a disabled code only.

It codes an alignment to subpixels, but for a while
it is permanently turned off.

gx_path_init_bbox_accumulator is used by gs_default_glyph_info for
computing a bounding box for a glyph. It does not
store segments to memory, therefore a reference to memory manager
is not provided. But the new hinter accesses it
if a stack-allocated array overflows.

Implementing an immediate transfer of outline poles to
the output path without storing them intermediately in arrays.
This mode works when a grid fitting is not required.
Only exception is flex poles : up to 9 of them
are stored in arrays while flex accumulates.
It must not overflow arrays.

The hack about microscopic segment was a rudiment of old code.
gs_op1_closepath was unintentionally called while
exporting an outline from the hinter. I believe that
the hack is incorrect and should not be applied.
Some outlines render differently.

I'm sorry for mixing 3 things in a single patch.
I've started the subpixel alignment, and
then occasionally discovered other problems.
It's hard to separate changes after they are done,
and I don't think that the separation is so important.
</pre></blockquote>

<p><strong><a name="2003-01-23_2011"></a>
2003-01-23 20:11 Igor Melichev</strong></p>
<blockquote><pre>
Fix : A misprint in the recent patch to default_get_outline.
</pre></blockquote>

<p><strong><a name="2003-01-23_0514"></a>
2003-01-23 05:14 Dan Coby</strong></p>
<blockquote><pre>
Fix for [ 662117 ] uniprint produces black pages, with bugfix.
This fixes several problems created in the uniprint device when the
device API was changed for 8.0.  This includes changes from Stefan Scherer,
the originator of the report, plus some changes for monochrome devices.
</pre></blockquote>

<p><strong><a name="2003-01-22_1736"></a>
2003-01-22 17:36 Ray Johnston</strong></p>
<blockquote><pre>
Pulled unneeded #undef jcdp, there was no matching define. Original patch
by Henry Stiles for GhostPCL version.
</pre></blockquote>

<p><strong><a name="2003-01-22_1546"></a>
2003-01-22 15:46 Igor Melichev</strong></p>
<blockquote><pre>
FAPI project : fixing a problem about preparation renderer's
font data for non-disk CIDFontType 0 fonts.

DETAILS:

Without FAPI renderers this patch doesn't change any behavior.

The old code crashed with Free Type because it misinterpreted
gs_font_cid0_data as gs_type1_data. Improving the protocol for
font data preparation : the new code now tells to a renderer about
a top-level CID font, then about it's descendents (which are Type 1),
then again about the top level font. A new type FAPI_descendent_code
represents a type of request. See comments, which this patch adds to code.
</pre></blockquote>

<p><strong><a name="2003-01-22_0854"></a>
2003-01-22 08:54 Russell Lang</strong></p>
<blockquote><pre>
Improve gsapi examples for Windows to not require _Windows on MSVC.
</pre></blockquote>

<p><strong><a name="2003-01-22_0751"></a>
2003-01-22 07:51 Russell Lang</strong></p>
<blockquote><pre>
Update DSC parser to current Ghostgum Software version.
Fixes SourceForge bug #657289, SEGV on Alpha in DSC parser.

DETAILS:
A %%Page line with mismatched parentheses around the page label
was ignored, but parser state was updated to scanning pages, not
setup section.  This resulted in access to dsc->page[-1] which
is invalid and caused a SEGV on Alpha.  The updated code now
checks that dsc->page_count is non-zero before accessing
dsc- >page[dsc->page_count-1].  It also makes a second attempt
at finding the page ordinal at the end of a line like:
%%Page: (label with closing parentheses 1
Other parser updates include support for DCS2 files (which is
not quite compliant with DSC), removing a few compiler warnings,
%%HiResBoundingBox, %%CropBox, %%PageCropBox, and being more
resilient to incorrect DSC.
</pre></blockquote>

<p><strong><a name="2003-01-22_0738"></a>
2003-01-22 07:38 Russell Lang</strong></p>
<blockquote><pre>
Treat files starting with %Pxxx as PostScript, not PDF.  Process
empty files without error.  Fixes SourceForge bug #663150, Some
PS files half-recognized as PDF files

DETAILS:
Changes for the 8.00 release to allow reading of PDF files from
stdin caused files starting with %Pxxx to be half recognised as
PDF files.  This patch simplifies the PDF recognition code and
makes it treat only files starting with "%PDF-" as PDF.  Testing
of this code found that zero length input files caused a
PostScript error.  This was an existing error which is fixed by
the gs_epsf.ps patch and last line of the pdf_main.ps patch.
</pre></blockquote>

<p><strong><a name="2003-01-22_0734"></a>
2003-01-22 07:34 Russell Lang</strong></p>
<blockquote><pre>
Add the ijs device to the MSVC Windows build.
</pre></blockquote>

<p><strong><a name="2003-01-22_0042"></a>
2003-01-22 00:42 Igor Melichev</strong></p>
<blockquote><pre>
pdfwrite : Implementing widthshow and xshow for composite and CID fonts.
The old (default) implementation converted to raster fonts
and gave inaccurate glyph positions. The new implementation doesn't
convert fonts to raster except for Type 3.

DETAILS:

This also closes the Source Forge bug
"[ 663635 ] ps2pdf cannot tune spacing by xshow for CJK text".
and provides better glyph positions with ashow for WMode 1.

There are small changes to graphics library :

1. Added interface function gx_current_char, which retrieves
   a code of current character from a gs_text_enum_t instance.
   The function was factored out from an old code.

2. Provided a default metrics for CID fonts for WMode 1.
   This is done pretty roughly, because the interface
   function glyph_info cannot pass some necessary information (WMode).

Minor changes :

1. Removed the comment "We know that the Tw and Tc values are zero",
   It was wrong a long time ago.

2. Inserted a comment about unimplemented DW2. An old code near the
   comment depends on the fact that DW2 is not implemented.

This patch brings more access to gs_text_enum_t::fstack
around the defined interface functions.
The list of gs_text_enum_t interface functions to be revised.

Expecting progressions with pdfwrite :

327-01.ps
Altona.Page_3.2002-09-27.pdf
CIDembedded.pdf
Openhuis_pdf_zw.pdf
RodinCIDEmbed.pdf
</pre></blockquote>

<p><strong><a name="2003-01-21_2357"></a>
2003-01-21 23:57 Igor Melichev</strong></p>
<blockquote><pre>
Fixing gcc compiter warnings in gxfill.c, gxdtfill.h .
</pre></blockquote>

<p><strong><a name="2003-01-20_2241"></a>
2003-01-20 22:41 Dan Coby</strong></p>
<blockquote><pre>
Fix for [ 664473 ] 64bit color indexes break X driver.
This fix corrects some problems found with the X window
driver and 64 bit gx_color_indexes found by customer 1110.

DETAILS:

The problems were found on Sparc workstations running the
Solaris 8.0.  The problem has not been reported on other
systems.  However the fix is simple (and contributed by
customer 1110) and should work on all systems.  The fix
is simply to use "long" for values passed to X windows
system routines.  This is done via a combination of casts
or local variables depending upon the situation.  The use
of "long" for gx_color_index was the default prior to the
8.0 release.  The X windows device does not need the extra
size for color values.
</pre></blockquote>

<p><strong><a name="2003-01-19_2304"></a>
2003-01-19 23:04 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : Improving a comment about ashow, awidthshow.

DETAILS:

This patch does not change any behavior.
</pre></blockquote>

<p><strong><a name="2003-01-19_1959"></a>
2003-01-19 19:59 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : With CID fonts 'show' set up cache devive and
inconsistently skipped any rendering to it. It must not set up cache device.
Thanks to Toshia Suzuki for spotting the problem.

DETAILS:

This problem was not tested with comparefiles.
Requesting to add a new test showopsH.ps from Toshia Suzuki.
</pre></blockquote>

<p><strong><a name="2003-01-19_1817"></a>
2003-01-19 18:17 Igor Melichev</strong></p>
<blockquote><pre>
Fix (Dropout prevention) : Returning the gx_adjust_if_empty hack
for cases when dropout prevention is not applied. It was removed erroneously.

DETAILS:

This patch changes a disabled code only.

Debugged with -r72 with smdf.90441.102.pdf, test2.pdf .
</pre></blockquote>

<p><strong><a name="2003-01-19_1017"></a>
2003-01-19 10:17 Russell Lang</strong></p>
<blockquote><pre>
Within the display device, correctly allocate the memory device
with the correct structure descriptor.

DETAILS:
The display device was allocating a memory device by taking a
memory device prototype from gdev_mem_device_for_bits and then
using gs_copydevice on it.  This allocates the wrong size
because the prototype does not have a structure descriptor.  The
correct way is to allocate it with gs_alloc_struct with
st_device_memory as an argument.  This bug was found when using
the display device in GhostPCL, which was complaining on
shutdown about the unfreed structure descriptors left behind by
gs_copydevice.
</pre></blockquote>

<p><strong><a name="2003-01-18_0952"></a>
2003-01-18 09:52 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : When pdfwrite text buffer overflows, it wrote an
extra text positioning command with wrong arguments.

DETAILS:

See comment in code.

Source Forge bug "[ 667271 ] text position scrambled".

This patch causes 2 progressions with pdfwrite :
comparefiles\Altona.Page_3.2002-09-27.pdf
comparefiles\Testform.v1.0.2.pdf
</pre></blockquote>

<p><strong><a name="2003-01-17_1732"></a>
2003-01-17 17:32 Igor Melichev</strong></p>
<blockquote><pre>
Fix (Type 42 interpreter) : Providing a tolerance to bytecode segmentation with sfnts string.

DETAILS:

Source Forge bug "[ 667362 ] /rangecheck in --.type42execchar--", Customer #411.

According to Type 42 specifications, the segmentation is not allowed.
Perhaps the test file has it. IMO it is easier to fix than to prove to the customer.

This slightly changes the interface function gs_type42_data::string_proc .
See comments in code.

By the way, added a check for absenting vmtx/hmtx (gstype42.c ln 530).
The old code was not safe.
</pre></blockquote>

<p><strong><a name="2003-01-16_2136"></a>
2003-01-16 21:36 Igor Melichev</strong></p>
<blockquote><pre>
Fix (Free Type bridge) : A new revision with MetricsCount handling.

DETAILS:

This patch has no effect for regular GS build (with no Free Type).
</pre></blockquote>

<p><strong><a name="2003-01-16_1849"></a>
2003-01-16 18:49 Ray Johnston</strong></p>
<blockquote><pre>
Add a message for filters (such as JBIG2Decode) that we can't handle and
continue processing the file as much as we can without the problem data.
This is related to SourceForge bug #668580.

DETAILS:

The Repaired flag is preserved across the 'pdfformaterror' calls so that
we don't squawk about the Creator of the PDF (its our fault, not theirs).

Also a special utility filter was created to /.EOFDecode that gives an
immediate EOF without consuming any data from its input.
</pre></blockquote>

<p><strong><a name="2003-01-16_1829"></a>
2003-01-16 18:29 Ray Johnston</strong></p>
<blockquote><pre>
Restructure the PDF top level processing (runpdf) to factor out a 'begin',
'do', and 'end' procedures. These can be used by clients to open a PDF
then access information from the PDF interpreter dictionaries about the
document or pages prior to actually processing pages with 'dopdfpages'.

DETAILS:

This will allow information to be accessed such as Dests, Names and Annots.
For example, to get the Names info, use:

  (somefile.pdf) (r) file runpdfbegin
  Trailer /Root oget /Names knownoget

Similarly, Annotations for a page (page 3 in the example below) can be
accessed using:

  (somefile.pdf) (r) file runpdfbegin
  3 pdffindpage /Resources oget /Annots knownoget {
    % process Annots
  } if
</pre></blockquote>

<p><strong><a name="2003-01-16_1625"></a>
2003-01-16 16:25 Igor Melichev</strong></p>
<blockquote><pre>
Fix (New Type 1 hinter) : A bug computing a stem width.

DETAILS:

This patch changes a disabled code only.

Also fixing a bug in debug drawing the imported outline,
and disabling it by default.
Debugged with comparefiles/455690.pdf .
</pre></blockquote>

<p><strong><a name="2003-01-16_1520"></a>
2003-01-16 15:20 Igor Melichev</strong></p>
<blockquote><pre>
Fix (Dropout prevention) : Sometimes active lines were not ordered,
causing a dropout.

DETAILS:

This patch changes a disabled code only.

The filling algorithm consider 2 cases :
when an Y-gap contains pixel centers and when it doesn't.
The old algorithm used a trick for better performance,
which skips the line ordering for the case of no pixel centers.
Perhaps the order is important for dropout prevention.
Disabling the trick when dropout prevention is on.

Here are some files which are sensitive to it with 72 dpi
and with the new hinter :

000040cf.000_60.pdf
017-01.ps
159.pdf
268-10.ps
281-01.ps
86554321.pdf
acrobat.pdf
(39 files total).
</pre></blockquote>

<p><strong><a name="2003-01-16_1259"></a>
2003-01-16 12:59 Igor Melichev</strong></p>
<blockquote><pre>
Fix (New type 1 hinter) : Removing hint complexes and fixing bugs.

DETAILS:

This patch changes a disabled code only.
1. An optimization : hint complexes are replaced with hint_range.
   The old code was overcomplicated.
2. A bug in t1_hinter__compute_type1_stem_ranges -
   an extra pole was added at range end.
3. A bug in t1_hinter__align_stem_poles -
   Some offcurve poles were erroneously grid fitted with a wrong hint.

This change causes multiple differences in hinted outlines,
almost all files render few differently.
</pre></blockquote>

<p><strong><a name="2003-01-16_1037"></a>
2003-01-16 10:37 Igor Melichev</strong></p>
<blockquote><pre>
Fix (New type 1 hinter) : A bug in t1_hinter__interpolate_other_poles.

DETAILS:

This patch changes a disabled code only.

The old implementation missed some outline extremes,
and the interpolation was wrong. This change causes multiple
differences in hinted outlines, almost all files render differently.
</pre></blockquote>

<p><strong><a name="2003-01-15_1820"></a>
2003-01-15 18:20 Raph Levien</strong></p>
<blockquote><pre>
Fix: Correctly initialize private cmyk_cs as returned from
gx_concrete_space_CIE(). Fixes SF bug #667322.
</pre></blockquote>

<p><strong><a name="2003-01-15_1632"></a>
2003-01-15 16:32 Igor Melichev</strong></p>
<blockquote><pre>
Fix (New type 1 hinter) : A bug calling the hinter.

DETAILS:

This patch changes a disabled code only.
</pre></blockquote>

<p><strong><a name="2003-01-15_0812"></a>
2003-01-15 08:12 Dan Coby</strong></p>
<blockquote><pre>
Modifies pick_cell_size to make a more accurate, and less round-off
error dependent, selection of screen cell size.

DETAILS

The prior code in pick_cell_size used an unusual metric for
measuring the "closeness of fit" of an actual screen cell to the
requested frequency and angle. If the angle variation was 0 (quite
likely for the common 0/45/90 degree angles), the frequency
variation was ignored. In addition, this metric was very sensitive
to floating-point arithmetic round-off errors. The new metric is
both more reasonable and less round-off error dependent.
</pre></blockquote>

<p><strong><a name="2003-01-14_1909"></a>
2003-01-14 19:09 Jack Moffitt</strong></p>
<blockquote><pre>
Add src/gxdtfill.h to whitelist for double inclusion protection test.
</pre></blockquote>

<p><strong><a name="2003-01-14_1906"></a>
2003-01-14 19:06 Jack Moffitt</strong></p>
<blockquote><pre>
Fix timezone information for CVS timestamps.
</pre></blockquote>

<p><strong><a name="2003-01-14_1210"></a>
2003-01-14 12:10 Igor Melichev</strong></p>
<blockquote><pre>
Fix (New type 1 hinter) : Removing unused variables.

DETAILS:

This patch changes a disabled code only.
</pre></blockquote>

<p><strong><a name="2003-01-14_1151"></a>
2003-01-14 11:51 Igor Melichev</strong></p>
<blockquote><pre>
New type 1 hinter : Round glyph origin to integral pixels.

DETAILS:

This patch changes a disabled code only.

See comment in code.
</pre></blockquote>

<p><strong><a name="2003-01-14_0800"></a>
2003-01-14 08:00 Igor Melichev</strong></p>
<blockquote><pre>
New type 1 hinter : Implementing the type 1 flex feature.

DETAILS:

This patch changes a disabled code only.

Debugged with comparefiles/chess.ps with -r72  and -r30 (sic!).
</pre></blockquote>

<p><strong><a name="2003-01-14_0001"></a>
2003-01-14 00:01 Jack Moffitt</strong></p>
<blockquote><pre>
Added documentation about new configuration mechanisms in the testing
framework.
</pre></blockquote>

<p><strong><a name="2003-01-13_2343"></a>
2003-01-13 23:43 Jack Moffitt</strong></p>
<blockquote><pre>
Convert configuration options to use a configuration file, and move
config options from run_nightly into the normal config framework.

Also, add regression checkpoint time to the daily report.  Fixes
SF #657178.
</pre></blockquote>

<p><strong><a name="2003-01-13_1103"></a>
2003-01-13 11:03 Igor Melichev</strong></p>
<blockquote><pre>
Fix (New type 1 hinter) : A bug in complex_link.

DETAILS:

This patch changes a disabled code only.
</pre></blockquote>

<p><strong><a name="2003-01-12_1958"></a>
2003-01-12 19:58 Igor Melichev</strong></p>
<blockquote><pre>
New type 1 hinter : Implementing alpha bits, and fixing bugs.

DETAILS:

This patch changes a disabled code only.

Changes :

1. A bug in t1_hinter__drop_hints;
2. A bug in t1_hinter__can_add_pole;
3. Rename initialization routines;
4. Align to pixels rather than to subpixels;
5. Dynamic allocation of stem_snap.
</pre></blockquote>

<p><strong><a name="2003-01-12_1955"></a>
2003-01-12 19:55 Igor Melichev</strong></p>
<blockquote><pre>
Fix (dropout prevention) : wrong number of alphs bits was
passed to dev_proc(dev, copy_alpha).

DETAILS:

This patch changes a disabled code only.

See also "Correctly compute depth for cached character images",
Fri, 3 Jan 2003 08:39:33 -0800,
http://www.ghostscript.com/pipermail/gs-cvs/2003-January/002751.html
</pre></blockquote>

<p><strong><a name="2003-01-12_1203"></a>
2003-01-12 12:03 Igor Melichev</strong></p>
<blockquote><pre>
Fix (New type 1 hinter) : A bug in t1_hinter__hint_mask .

DETAILS:

This patch changes a disabled code only.
</pre></blockquote>

<p><strong><a name="2003-01-11_1921"></a>
2003-01-11 19:21 Igor Melichev</strong></p>
<blockquote><pre>
New type 1 hinter : Fixing gcc compiler errors.

DETAILS:

This patch changes a disabled code only.
</pre></blockquote>

<p><strong><a name="2003-01-11_1847"></a>
2003-01-11 18:47 Igor Melichev</strong></p>
<blockquote><pre>
zchar1.c revision 1.23 appears wrong (an inaccurate type cast, compiler warnings).
Unwinding the patch.
</pre></blockquote>

<p><strong><a name="2003-01-11_1826"></a>
2003-01-11 18:26 Igor Melichev</strong></p>
<blockquote><pre>
New type 1 hinter : Fixing types for import function prototypes.

DETAILS:

This patch doesn't change any behavior.

In import functions prototypes 't1_glyph_space_coord'
was erroneously used instead 'fixed'.
</pre></blockquote>

<p><strong><a name="2003-01-11_1820"></a>
2003-01-11 18:20 Igor Melichev</strong></p>
<blockquote><pre>
New type 1 hinter : Enable the grid fitting separately for X and Y.

DETAILS:

With NEW_TYPE1_HINTER = 0 the new code must be equivalent to old one.

We disable grid fitting if an axis is too sloped
(if tan(angle) > 1/10 ).
</pre></blockquote>

<p><strong><a name="2003-01-11_1746"></a>
2003-01-11 17:46 Igor Melichev</strong></p>
<blockquote><pre>
Removing redundant code from zchar1.c .

DETAILS:

This is completion for the patch
"Reducing the C stack consumption in ztype1execchar".

The new code must be equivalent to the old one.
</pre></blockquote>

<p><strong><a name="2003-01-11_1555"></a>
2003-01-11 15:55 Igor Melichev</strong></p>
<blockquote><pre>
New type 1 hinter : Attaching it to type 2 interpreter.
With NEW_TYPE1_HINTER = 0 the new code must be equivalent to old one.

DETAILS:

1. Attaching the new hinter to gstype2.c .
2. Reorganizing the nationalization of the new hinter for better performance.
3. Adding vdtrace instructions for drawing the hinter import on-fly.
4. Implementing alignment priorities. It improves quality for comparefiles/dave.pdf,
   and makes the alignment logics some simpler.
3. Fixing a bug about the trailing moveto. Fonts with no Metrics
   got a wrong advance width.
</pre></blockquote>

<p><strong><a name="2003-01-11_1420"></a>
2003-01-11 14:20 Igor Melichev</strong></p>
<blockquote><pre>
Fix: A bag in the visual trace implementation.
</pre></blockquote>

<p><strong><a name="2003-01-11_0439"></a>
2003-01-11 04:39 Ralph Giles</strong></p>
<blockquote><pre>
Revert changes accidentally included in the last commit.
</pre></blockquote>

<p><strong><a name="2003-01-11_0438"></a>
2003-01-11 04:38 Ralph Giles</strong></p>
<blockquote><pre>
Revert to the default gcc (3.1) on MacOS X. We had switched to 2.95 to
work around a bug in Apple's first shipped gcc3. The issue has been resolved
in the December 2002 Apple Developer Tools release.
</pre></blockquote>

<p><strong><a name="2003-01-11_0427"></a>
2003-01-11 04:27 Ralph Giles</strong></p>
<blockquote><pre>
Revert to the default gcc (3.1) on MacOS X. We had switched to 2.95 to
work around a bug in Apple's first shipped gcc3. The issue has been resolved
in the December 2002 Apple Developer Tools release.
</pre></blockquote>

<p><strong><a name="2003-01-10_0817"></a>
2003-01-10 08:17 Igor Melichev</strong></p>
<blockquote><pre>
Reducing the C stack consumption in ztype1execchar.
The new code must be equivalent to the old one.

DETAILS:

The new type 1 hinter (with NEW_TYPE1_HINTER = 1 in gx.h)
puts more 11K of data to C stack. Perhaps due to a recursion
in bbox_draw 2 instances of the hinter were placed in C stack
simultaneously, causing C stack overflow with gswin32c.exe on
Windows NT 4.0 (but not on Windows 2000).

Perhaps the recursion is not necessary.
Reorganizing the sequence of calls to avoid the recursion.
New argument 'exec_cont' was added to several
functions for transferring the call request to clients.
Corresponding comments are added in code.

Also z1_glyph_info prototype was added in ichar1.h .
It was missed a long time ago, Cygwin/gcc warned.

A further improvement may be done with factoring out
a common code from bbox_finish_fill, bbox_finish_stroke,
bbox_fill, bbox_stroke. Delaying it until a regression testing.
</pre></blockquote>

<p><strong><a name="2003-01-10_0056"></a>
2003-01-10 00:56 Jack Moffitt</strong></p>
<blockquote><pre>
Allow tests to run without modifying the daily tracking database.
run_regression now takes the --track option to create and update daily
tracking databases, and runs normally otherwise.
</pre></blockquote>

<p><strong><a name="2003-01-09_2358"></a>
2003-01-09 23:58 Jack Moffitt</strong></p>
<blockquote><pre>
Small formatting improvement.
</pre></blockquote>

<p><strong><a name="2003-01-09_2249"></a>
2003-01-09 22:49 Jack Moffitt</strong></p>
<blockquote><pre>
Factor out gscheck_raster.py from run_regression.
</pre></blockquote>

<p><strong><a name="2003-01-09_2239"></a>
2003-01-09 22:39 Jack Moffitt</strong></p>
<blockquote><pre>
Fixes another Python 2.2 compatibility error.
</pre></blockquote>

<p><strong><a name="2003-01-09_2135"></a>
2003-01-09 21:35 Jack Moffitt</strong></p>
<blockquote><pre>
Fixes check for exception instances by using isinstance() instead of
issubclass().  This is required for Python 2.2 compatibility.
</pre></blockquote>

<p><strong><a name="2003-01-09_2133"></a>
2003-01-09 21:33 Jack Moffitt</strong></p>
<blockquote><pre>
Increase maximum memory restrictions on Ghostscript for regression tests.
</pre></blockquote>

<p><strong><a name="2003-01-09_2112"></a>
2003-01-09 21:12 Ralph Giles</strong></p>
<blockquote><pre>
Include libz in the autoconf test for libpng.

DETAILS:

This is a fix for systems without interlibrary dependencies. We don't use
the LIBS variable constructed by default by the AC_CHECK_LIB macro and
did not maintain it in our previous zlib test, thus -lz was not included
on the link line in the libpng test.

Our primary test systems for the autoconf build (Debian GNU/Linux and MacOS X + fink)
include an interlibrary dependency, so this did not cause a problem. On
systems where this is not the case, it results in a confusing error.

Patch from Peter Breitenlohner.
</pre></blockquote>

<p><strong><a name="2003-01-09_0433"></a>
2003-01-09 04:33 Ralph Giles</strong></p>
<blockquote><pre>
Correct warnings in the display device. Removes two unused declarations
and marks a local function private. After a patch by Peter Breitenlohner.
</pre></blockquote>

<p><strong><a name="2003-01-09_0431"></a>
2003-01-09 04:31 Ralph Giles</strong></p>
<blockquote><pre>
Add a missing header file.

DETAILS:

This corrects a missing prototype warning for gs_get_colorname_string,
declared in zht2.h. iname.h was also added to the dependencies for zht2.c.
After a patch by Peter Breitenlohner.
</pre></blockquote>

<p><strong><a name="2003-01-08_2139"></a>
2003-01-08 21:39 Ralph Giles</strong></p>
<blockquote><pre>
Correct a nesting error in the libpng detection code.

DETAILS:

This does not change actually behavior, because of the way M4 works,
the literal loop end was just interchanged with the implicit one from
the AC_CHECK_LIB() macro with no code inbetween, which is why the mistake
went undetected.

Thanks to Peter Breitenlohner for catching this.
</pre></blockquote>

<p><strong><a name="2003-01-08_1657"></a>
2003-01-08 16:57 Igor Melichev</strong></p>
<blockquote><pre>
New type 1 hinter : Implementing dynamic array allocation;
Skipping degenerate path segments; Renaming configuration flags.
This patch changes a disabled code only.
</pre></blockquote>

<p><strong><a name="2003-01-08_1644"></a>
2003-01-08 16:44 Igor Melichev</strong></p>
<blockquote><pre>
Dropout prevention : Self-intersections must not contribute peaks.
Also removed the LOOP_FILL_TRAPEZOID_FIXED macro.
This patch must not change any behavior.
</pre></blockquote>

<p><strong><a name="2003-01-08_0539"></a>
2003-01-08 05:39 Dan Coby</strong></p>
<blockquote><pre>
1.  Added documentation for the PSD, XCF, and spotcmyk devices.
2.  Corrected various minor spelling problems.
</pre></blockquote>

<p><strong><a name="2003-01-08_0251"></a>
2003-01-08 02:51 Ralph Giles</strong></p>
<blockquote><pre>
Add source files for the new type 1 hinter to the index in the developer documentation.
</pre></blockquote>

<p><strong><a name="2003-01-07_1754"></a>
2003-01-07 17:54 Igor Melichev</strong></p>
<blockquote><pre>
Dropout prevention : (1) Replace the horizontal line processing.
(2) Returning the hack about horizontal lines for non-character fills.
This patch changes a disabled code only.

DETAILS:

With the old type 1 hinter, hinted outlines get
self-intersections at small resolution. It's a problem
of the old hinter. Perhaps it discovered a defect
in horizontal line handling.

With self-intersections, the side of spot interior
may be different for different parts of same line.
This patch completely replaces the handling of
horizontal lines. It maintains 2 lists of
horizontal lines, which correspond to y and y1
in fill_loop_by_trapezoids. Then we intersect those
lines with margins and add corresponding segments
of boundaries separately for each part delimited
with an intersection.

The
     "* This is a hack to make sure that isolated horizontal
      * lines get stroked."
was erroneously disabled for non-character fills,
causing a regression with QA_Inv.pdf .
Restoring it now, except for characters.

This patch removes the contour area computation,
which was introduced in revision 1.19 .
</pre></blockquote>

<p><strong><a name="2003-01-07_1632"></a>
2003-01-07 16:32 Igor Melichev</strong></p>
<blockquote><pre>
fuzzy.c : Add writing the fuzzy difference to PPM or BMP file.

DETAILS:

Additional (optional) argument added to specify the result file path.
We did not take care about compression.

BMP files usually store image upside down.
Rather negative BITMAPINFOHEADER::biHeight specify "upside up"
representation, Windows Paint cannot handle it.
Therefore we write BMP file in reverse order.
</pre></blockquote>

<p><strong><a name="2003-01-06_2337"></a>
2003-01-06 23:37 Ralph Giles</strong></p>
<blockquote><pre>
Add standard license banners to some macos-specific header files.
</pre></blockquote>

<p><strong><a name="2003-01-06_2331"></a>
2003-01-06 23:31 Ralph Giles</strong></p>
<blockquote><pre>
Add standard copyright banner and RCS id line.

DETAILS:

This change is made with the contributor's permission. His verification is recorded here:

    http://www.ghostscript.com/pipermail/gs-devel/2003-January/002326.html

Thanks to Brett Smith at the FSF for pointing out the non-standard header.
</pre></blockquote>

<p><strong><a name="2003-01-06_1957"></a>
2003-01-06 19:57 Igor Melichev</strong></p>
<blockquote><pre>
Dropout prevention : A better marking of margin interior.
This patch changes a disabled code only.
</pre></blockquote>

<p><strong><a name="2003-01-06_1743"></a>
2003-01-06 17:43 Igor Melichev</strong></p>
<blockquote><pre>
Initial commit for a new type 1 hinter.
This patch must not change any behavior.

DETAILS:

This is a porting from HINTER branch.

The old hinter cannot handle overlapping hints,
but real fonts do use them.

The handling of overlapped hints cannot be done within
a single-pass algorithm. Therefore we intend to replace entire thing.
Besides, it should fix a set of known problems :

- stem degradation at small resolutions;
- stem missing or misrecognition;
- proper adjustment of dependent stems;
- suppress overshoots closer to Adobe;

This patch introduces a couple of new macros,
which will be removed later.

For switching to the new hinter, change the definition of
NEW_TYPE1_HINTER in gx.h . It is not well debugged yet.

New files added : gxhintn.c, gxhintn.h .
</pre></blockquote>

<p><strong><a name="2003-01-06_1700"></a>
2003-01-06 17:00 Igor Melichev</strong></p>
<blockquote><pre>
Dropout prevention : Removing unused variables.
This patch changes a disabled code only.
</pre></blockquote>

<p><strong><a name="2003-01-05_2113"></a>
2003-01-05 21:13 Igor Melichev</strong></p>
<blockquote><pre>
Dropout prevention : A bug in continue_margin_common.
This patch changes a disabled code only.
</pre></blockquote>

<p><strong><a name="2003-01-05_2048"></a>
2003-01-05 20:48 Igor Melichev</strong></p>
<blockquote><pre>
Dropout prevention : Better compute the spot contiguity,
and improve the peak cut-off.
This patch changes a disabled code only.
</pre></blockquote>

<p><strong><a name="2003-01-05_1729"></a>
2003-01-05 17:29 Igor Melichev</strong></p>
<blockquote><pre>
Dropout prevention : Computing a contour area with fixed point arithmetics.
This patch changes a disabled code only.

DETAILS:

For debugging enable both CONTOUR_AREA_WITH_FIXED_POINT and
CONTOUR_AREA_WITH_FLOATING_POINT.
</pre></blockquote>

<p><strong><a name="2003-01-04_1637"></a>
2003-01-04 16:37 Igor Melichev</strong></p>
<blockquote><pre>
Dropout prevention : Improving the predicate about adding horizontal lines to Y list.
This patch changes a disabled code only.

DETAILS:

The predicate was inaccurately duplicated.
</pre></blockquote>

<p><strong><a name="2003-01-04_1504"></a>
2003-01-04 15:04 Igor Melichev</strong></p>
<blockquote><pre>
Dropout prevention : (1) Fixing a problem with improper contour direction
in some (wrong) fonts. (2) Improving the CHECK_SPOT_CONTIGUITY feature.
This patch changes a disabled code only.

DETAILS:

See comment in code about (1).
</pre></blockquote>

<p><strong><a name="2003-01-03_1734"></a>
2003-01-03 17:34 Igor Melichev</strong></p>
<blockquote><pre>
Dropout prevention : Adding a serif adjustment.
This patch changes disabled code only.

DETAILS:

See big comment in code.
</pre></blockquote>

<p><strong><a name="2003-01-03_1729"></a>
2003-01-03 17:29 Igor Melichev</strong></p>
<blockquote><pre>
Dropout prevention : Correctly compute depth for cached character images.
</pre></blockquote>

<p><strong><a name="2003-01-02_1811"></a>
2003-01-02 18:11 Igor Melichev</strong></p>
<blockquote><pre>
Fix (gswin32) : Improving the image window title for debug technology.
</pre></blockquote>

<p><strong><a name="2003-01-01_0655"></a>
2003-01-01 06:55 Ray Johnston</strong></p>
<blockquote><pre>
Revert previous commit. This version is now back to the same as 1.22.
</pre></blockquote>

<p><strong><a name="2002-12-31_2308"></a>
2002-12-31 23:08 Ray Johnston</strong></p>
<blockquote><pre>
Handle copying arrays (and their composite elements that are in VM) to
global VM when processing the ***params functions such as currentuserparams
Fixes SourceForge #647685 that impacted .setsafe usage.
</pre></blockquote>

<p><strong><a name="2002-12-31_1952"></a>
2002-12-31 19:52 Ralph Giles</strong></p>
<blockquote><pre>
Add new dropout prevention source files to the documentation.
</pre></blockquote>

<p><strong><a name="2002-12-30_2231"></a>
2002-12-30 22:31 Igor Melichev</strong></p>
<blockquote><pre>
Fix (dropout prevention) : A bug in store_margin.
This patch changes disabled code only.
</pre></blockquote>

<p><strong><a name="2002-12-30_1921"></a>
2002-12-30 19:21 Igor Melichev</strong></p>
<blockquote><pre>
Fix (dropout prevention) : Direction of horizontal lines was computed wrongly.

DETAILS:

This patch changes disabled code only.
Debugged with character 's' in the 1st page of 033-52-5873.pdf .
</pre></blockquote>

<p><strong><a name="2002-12-30_1824"></a>
2002-12-30 18:24 Igor Melichev</strong></p>
<blockquote><pre>
Fix (FAPI) : Don't try to get a glyph name for CID fonts.
Thanks for Graham Asher for spotting it.
DETAILS:

It was an inaccurate coding. I'm sorry.
</pre></blockquote>

<p><strong><a name="2002-12-30_0551"></a>
2002-12-30 05:51 Ray Johnston</strong></p>
<blockquote><pre>
Reduce state.width delta radius calculation for shadings that was made too
large by the previous commit.

DETAILS:
Previous commit mistakenly included the state.dr value as both the X and
Y component in the distance transform that produced the dev_dr vector.
The hypot is actually all that is required to handle getting the correct
scaled radius distance independent of the CTM rotation.

The use of state.dr for both X and Y preceded the use of hypot on dev_dr
and wasn't taken out when the hypot function use was added.

This should eliminate most, if not all regressions caused by the 12/24
1.18 patch to this module.
</pre></blockquote>

<p><strong><a name="2002-12-29_1942"></a>
2002-12-29 19:42 Igor Melichev</strong></p>
<blockquote><pre>
Fix (Type 1 interpreter) : setcurrentpoint missed the vstem3 shift.

DETAILS:

Detected with character 'm' in -r150 comparefiles/NIL_0003.pdf .

The missed vs_offset erroneously shifted a part of path coordinates
relatively to stem hint coordinates so that stems could not recognize.
The character rendered unhinted.

This patch causes differences in character rendering.
Regression test on Windows detects a difference with
-r300 comparefiles/NIL_0003.pdf only, which looks unimportant.
</pre></blockquote>

<p><strong><a name="2002-12-28_1235"></a>
2002-12-28 12:35 Igor Melichev</strong></p>
<blockquote><pre>
Improving the dropout prevention algorithm
This patch changes disabled code only.

DETAILS:

In zchar42.c I set path adjustment to zero.
It is the correct value with dropout prevention.

The last revision of dropout prevention algorithm
appears buggy : the order of margins in margin_list
can be wrong and causes dropouts. This is essentially
important with CJK True Types, which have thing horizontal
stems and no hinting with GS.

This revision replaces the representation of margins
with a simpler one. It is not optimized for bold
characters, perhaps the optimization is not hard.
See comment in code about "bold".

A good advantage is the removal of insert_pseudo_margin.
It appears done due to insufficient knowledge of the old algorithm.
</pre></blockquote>

<p><strong><a name="2002-12-26_1126"></a>
2002-12-26 11:26 Igor Melichev</strong></p>
<blockquote><pre>
Fix : fuzzy.c wrongly compared images.

DETAILS:

It didn't compare w/2 rows near the upper edge of the image.
MSVC release build compared an uninitialized data instead them.
</pre></blockquote>

<p><strong><a name="2002-12-24_1900"></a>
2002-12-24 19:00 Ray Johnston</strong></p>
<blockquote><pre>
Radial shading did not work if the CTM was rotated (mat.xx == mat.yy ==0).

DETAILS:

The state.width calculation would end up 0 if the circles were concentric
and the CTM was rotated. Revised calculation should work even for other
non-orthogonal CTMs. File added to the regression suite.
Fixes SF bug #658286 for Artifex customer #190.
</pre></blockquote>

<p><strong><a name="2002-12-24_1420"></a>
2002-12-24 14:20 Igor Melichev</strong></p>
<blockquote><pre>
Improving and optimizing the dropout prevention algorithm
with splitting gx_default_fill_parallelogram into 2 variants.

DETAILS:

This patch almost changes a disabled code.
A simple reorganization of some enabled code should not
cause a behavior difference.

Filling a "small" character, we always subdivide trapezoids into
rectangles instead passing them to device virtual function.
It allows :

1. Not passing narrow trapezoids to applications
which implement fill_trapezoid with own means;
Narrow trapezoids could cause dropouts in there.

2. Optimize variants of fill_trapezoid algorithm which
are used for different purposes (preventing about 10% slowdown
with shadings).

We believe this change isn't harmful because
regularly we render small characters to cache device,
which simply forwards trapezoids to default implementation.
Alternatively we could insert a check for narrow trapezoids
into loop_fill_trap, but such check appears complex and
it would sensibly reduce performance.

New files added : gdevddrw.h, gxdtfill.h .
Change to lib.mak accounts them.

Besides that, with dropout prevention we now skip empty paths
in characters, because Adobe doesn't paint them.
</pre></blockquote>

<p><strong><a name="2002-12-23_1817"></a>
2002-12-23 18:17 Igor Melichev</strong></p>
<blockquote><pre>
Fix : Fixing a typo in comment.
</pre></blockquote>

<p><strong><a name="2002-12-23_1227"></a>
2002-12-23 12:27 Igor Melichev</strong></p>
<blockquote><pre>
Initial commit for the dropout prevention code in rasterizer.
It doesn't not change any behavior.

DETAILS:

Switching to new code is being controlled with DROPOUT_PREVENTION
macro defined in gx.h . Now it is set to "use old code".

This patch :
1. Ports the "margin" algorithm from HINTER branch.
   Now the algorithm renamed to "pseudo-rasterization".

2. Ports the dropout prevention to gx_default_fill_trapezoid from HINTER branch,
   providing a contiguous fill for slightly slanted trapezoids.

3. Adds CONNECT_RECTANGLES into gx_default_fill_trapezoid
   providing a contiguous fill for highly slanted trapezoids.

4. Fixes some problems in the "pseudo-rasterization".

5. Disables all hacks about path adjustment and oversampling
   when DROPOUT_PREVENTION is on. Those hacks were attempts
   to fix dropouts for small characters, but they do not solve
   the problem completely.

6. Provide visual trace instructions for debugging purpose.

Changes to gxpcopy.c and gxpflat.c only insert visual trace instructions for
debugging purpose. Currently all them compile to empty code.

Changes to gdevddrw.c, gxchar.c, gxtype1.c, gx.h
are protected with DROPOUT_PREVENTION. With current settings they
compile to old code.

Changes to gxfill.c are not so obvious. I was unhappy with duplicating
a thousand of lines in #if...#else...#endif. Therefore
I've inserted some dynamic checks. They are controlled with
'pseudo_rasterization' flag. Currently it always false,
so that inserted sections are either bypassed or immediately
return from subroutines.

Changes to lib.mak only add some dependences on vdtrace.h .

In local testing the patch caused no difference with
Comparefiles (if DROPOUT_PREVENTION is 0).

If someone wants to try new code, DROPOUT_PREVENTION to be modified in gx.h .
In this case all old hacks about path adjustment are disabled,
and therefore characters render some lighter.
Visual trace may be activated with -Tf option in gs command line.
Note that it paints a big draft for any character rendered,
so you should run only simple PS files with a single character.
Also the draft scale is hardcoded in VD_SCALE constants,
so it may give an unuseful result with big character rasters.
At last please remember that visual trace window is implemented
only for Windows - other platforms will not paint anything.
The visual trace window does not implement a regeneration of painting,
therefore windows must not overlap. Run gswin32.exe with no file,
move windows and then perform 'quit' to store window layout to system Registry.

here is a simple test, which visualize improvements when
DROPOUT_PREVENTION is on :

	%!
	100 350 moveto
	/Courier findfont 2 scalefont [5 0 0 1 0 0] makefont setfont
	(/) show
	showpage

With 72dpi the old code paints nothing.
The (DROPOUT_PREVENTION=1) paints a spot.

Testing the new code with -r300 001.01.ps, the box 001-12 renders better :
no dropouts in "4", characters look better.

In gx.h I've added FILL_TRAP_WITH_SWAPPED_AXES flag. The goal is to archive
and document a dead branch of the development. I'd like to store it into
archive and then remove it in the next revision.

Two temporary configuration switches added for benchmarking purpose :

- PSEUDO_RASTERIZATION in gxfill.c disables the pseudo-rasterization
  separately from other changes.

- CONTIGUOUS_FILL disables additional checks in gdevddrw.c
  separately from other changes.

With text documents performance change is almost invisible.
With Coons01.ps each of these flags give a 10% slowdown.
I guess the reason is that the code becomes too complex for
global optimization with MSVC 6.0 for Intel Pentium 3.
Other compilers/processors may give different results.

Thanks to Ray Johnston and Raph Levien for useful remarks.
This patch accounts them.
</pre></blockquote>

<p><strong><a name="2002-12-23_1059"></a>
2002-12-23 10:59 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : Removing a rudiment about writing /Name to font resources.
It is not longer useful since revision 1.50 of lib/pdf_font.ps .
</pre></blockquote>

<p><strong><a name="2002-12-20_1717"></a>
2002-12-20 17:17 Ray Johnston</strong></p>
<blockquote><pre>
Accumulate CVS log instead of only having one night's worth of change info.
It used to work that way but that "feature" got dropped inadvertently.
</pre></blockquote>

<p><strong><a name="2002-12-20_1139"></a>
2002-12-20 11:39 Igor Melichev</strong></p>
<blockquote><pre>
Initial commit for the dropout prevention code in rasterizer.
It doesn't not change any behavior.

DETAILS:

Switching to new code is being controlled with DROPOUT_PREVENTION
macro defined in gx.h . Now it is set to "use old code".

This patch :
1. Ports the "margin" algorithm from HINTER branch.
   Now the algorithm renamed to "pseudo-rasterization".

2. Ports the dropout prevention to gx_default_fill_trapezoid from HINTER branch,
   providing a contiguous fill for slightly slanted trapezoids.

3. Adds CONNECT_RECTANGLES into gx_default_fill_trapezoid
   providing a contiguous fill for highly slanted trapezoids.

4. Fixes some problems in the "pseudo-rasterization".

5. Disables all hacks about path adjustment and oversampling
   when DROPOUT_PREVENTION is on. Those hacks were attempts
   to fix dropouts for small characters, but they do not solve
   the problem completely.

6. Provide visual trace instructions for debugging purpose.

Changes to gxpcopy.c and gxpflat.c only insert visual trace instructions for
debugging purpose. Currently all them compile to empty code.

Changes to gdevddrw.c, gxchar.c, gxtype1.c, gx.h
are protected with DROPOUT_PREVENTION. With current settings they
compile to old code.

Changes to gxfill.c are not so obvious. I was unhappy with duplicating
a thousand of lines in #if...#else...#endif. Therefore
I've inserted some dynamic checks. They are controlled with
'pseudo_rasterization' flag. Currently it always false,
so that inserted sections are either bypassed or immediately
return from subroutines.

Changes to lib.mak only add some dependences on vdtrace.h .

In local testing the patch caused no difference with
Comparefiles (if DROPOUT_PREVENTION is 0).

If someone wants to try new code, DROPOUT_PREVENTION to be modified in gx.h .
In this case all old hacks about path adjustment are disabled,
and therefore characters render some lighter.
Visual trace may be activated with -Tf option in gs command line.
Note that it paints a big draft for any character rendered,
so you should run only simple PS files with a single character.
Also the draft scale is hardcoded in VD_SCALE constants,
so it may give an unuseful result with big character rasters.
At last please remember that visual trace window is implemented
only for Windows - other platforms will not paint anything.
The visual trace window does not implement a regeneration of painting,
therefore windows must not overlap. Run gswin32.exe with no file,
move windows and then perform 'quit' to store window layout to system Registry.

here is a simple test, which visualize improvements when
DROPOUT_PREVENTION is on :

	%!
	100 350 moveto
	/Courier findfont 2 scalefont [5 0 0 1 0 0] makefont setfont
	(/) show
	showpage

With 72dpi the old code paints nothing.
The (DROPOUT_PREVENTION=1) paints a spot.

Testing the new code with -r300 001.01.ps, the box 001-12 renders better :
no dropouts in "4", characters look better.

In gx.h I've added FILL_TRAP_WITH_SWAPPED_AXES flag. The goal is to archive
and document a dead branch of the development. I'd like to store it into
archive and then remove it in the next revision.

Two temporary configuration switches added for benchmarking purpose :

- PSEUDO_RASTERIZATION in gxfill.c disables the pseudo-rasterization
  separately from other changes.

- CONTIGUOUS_FILL disables additional checks in gdevddrw.c
  separately from other changes.

With text documents performance change is almost invisible.
With Coons01.ps each of these flags give a 10% slowdown.
I guess the reason is that the code becomes too complex for
global optimization with MSVC 6.0 for Intel Pentium 3.
Other compilers/processors may give different results.

Thanks to Ray Johnston and Raph Levien for useful remarks.
This patch accounts them.
</pre></blockquote>

<p><strong><a name="2002-12-19_2044"></a>
2002-12-19 20:44 Igor Melichev</strong></p>
<blockquote><pre>
More optimizations are enabled with MSVC_VERSION != 5.
Using them MSVC 6.0 creates 1.5 times faster code.
Thanks to Russell Lang and to Pierre Arnaud.
</pre></blockquote>

<p><strong><a name="2002-12-19_0927"></a>
2002-12-19 09:27 Russell Lang</strong></p>
<blockquote><pre>
Prevent the bbox put_params from using the color mapping
functions before the device is opened.
Fixes Sourceforge bug #645531 "seg fault: bbox device + PAPERSIZE".

DETAILS:
Using "-sPAPERSIZE=a4 -sDEVICE=bbox" crashes in GS 8 when the
device parameters are being set prior to opening the bbox device.
bbox_put_params calls bbox_copy_params, gx_device_black
then the bbox encode_color which is NULL.
This is wrong because encode_color must not be called before
the device is open.  See doc/Drivers.htm#Life_cycle for details.
Prior to the DeviceN changes this did not matter because
the map_rgb_color function was valid.  Post DeviceN the
encode_color procedure is called and this is NULL until
just before the bbox device is opened.

The fix prevents bbox_copy_params from calling the
encode_color procedure while the device is closed.
</pre></blockquote>

<p><strong><a name="2002-12-18_1730"></a>
2002-12-18 17:30 Alex Cherepanov</strong></p>
<blockquote><pre>
Following MS Windows practice "Ok" is changed to "OK" in dialog controls.
Fixes SourceForge bug #655623 '"Ok" should be "OK"'
</pre></blockquote>

<p><strong><a name="2002-12-18_1359"></a>
2002-12-18 13:59 Igor Melichev</strong></p>
<blockquote><pre>
Fix : Improving the portability of the vd_trace interface.
</pre></blockquote>

<p><strong><a name="2002-12-17_1824"></a>
2002-12-17 18:24 Jack Moffitt</strong></p>
<blockquote><pre>
Update test scripts to omit -rXXX parameter for pdfwrite, instead of using
-r720 explicitly, so that it uses the default behavior.
</pre></blockquote>

<p><strong><a name="2002-12-17_1754"></a>
2002-12-17 17:54 Jack Moffitt</strong></p>
<blockquote><pre>
Always run pdfwrite with the default resolution of 720, since that is the
common use case.
</pre></blockquote>

<p><strong><a name="2002-12-16_1231"></a>
2002-12-16 12:31 Igor Melichev</strong></p>
<blockquote><pre>
Fix : Improving the vd_trace interface.

DETAILS:

It is some simplification and optimization.
It doesn't affect the current GS build because vtrace.h is currently never included.
</pre></blockquote>

<p><strong><a name="2002-12-15_1904"></a>
2002-12-15 19:04 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : Text matrix was wrongly computed.
Source Forge bug "[ 651643 ] PS->PDF changes font slant".

DETAILS:

The bug is visible if FontMatrix for a base PS font is slanted
with findfont...copydict...ReplaceFontMatrix...definefont.

I don't know whether we need to canonize FontMatrix embedding a font.
Delaying this until we get more tests which help to choose a right decision.

EXPECTED PROGRESSIONS :

CompareFiles\455690.pdf
CompareFiles\Altona.Page_3.2002-09-27.pdf
</pre></blockquote>

<p><strong><a name="2002-12-15_1320"></a>
2002-12-15 13:20 Igor Melichev</strong></p>
<blockquote><pre>
Fix (FAPI) : Don't request decodingID for embedded fonts,
because it is only useful for disk fonts.
</pre></blockquote>

<p><strong><a name="2002-12-14_1906"></a>
2002-12-14 19:06 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : 'cmap' was written wrongly with subsetted True Type fonts.
Source Forge bug "[ 651148 ] pdfwrite embeds bad font".
</pre></blockquote>

<p><strong><a name="2002-12-14_0039"></a>
2002-12-14 00:39 Ralph Giles</strong></p>
<blockquote><pre>
Add the display device (for the gsapi client interface) to the default
MacOS build.
</pre></blockquote>

<p><strong><a name="2002-12-12_0144"></a>
2002-12-12 01:44 Dan Coby</strong></p>
<blockquote><pre>
Fix for [ 652147 ] overprintmode not boolean.  Adobe TN5145 defines
the paramters to/from setoverprintmode/currentoverprintmode as being
boolean.  This change modifies the implementation to match the TN.

DETAILS:

Previously the operators setoverprintmode and currentoverprintmode had
been defined to match the requirements of PDF which uses an integer for
the parameter.  However Adobe TN5145 defines the postscript implementation
as using a boolean value.  This change modifies the definition of these
operators in lib/gs_ll3.ps to convert the parameter type.  The internal
operators .setoverprintmode/.curentoverprintmode still use the PDF integer
parameter.  The postscript code in lib/gs_ll3.ps converts the parameter
type.
</pre></blockquote>

<p><strong><a name="2002-12-11_2031"></a>
2002-12-11 20:31 Ray Johnston</strong></p>
<blockquote><pre>
Handle TrueType fonts that contain poorly formatted 'post' tables.
These were seen as font subsets embedded in PDF files.
Fixes SourceForge bug #651164 for customer #150.

DETAILS:

The file contains an embedded TT font subset that has a badly formatted
'post' table. This table is used to replace names in the standard encoding
for specific glyphs. The 'post' table in question maps a bunch of glyphs
that are not part of the subset to the first name in glyphnames section,
but the glyphnames section is empty. It should have at least a single byte
of 0x00 to form a zero length Pascal string.

I also added a warning that prints if the DEBUG is enabled. Since the
'postglyphs' string is automatically extended with a 0x00 byte when the
problem is detected, the warning only prints once for the font.

This file was created by:
	/Producer (OneVision PDF Writer \(Build 05.950\))
	/Creator (Solvero Version 4.5 \(SR 4\))
</pre></blockquote>

<p><strong><a name="2002-12-10_1749"></a>
2002-12-10 17:49 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : Removing erroneous declarations from gdevpdfx.h .
</pre></blockquote>

<p><strong><a name="2002-12-10_1518"></a>
2002-12-10 15:18 Ralph Giles</strong></p>
<blockquote><pre>
Fix (FAPI) : Rename round() to fapi_round() to avoid shadowing the C99 call of the same name.

DETAILS:

In particular, the redeclaration of round() causes a compiler error under
Apple's gcc (October 2002 Developer Tools, MacOS X 10.2.2). MSVC doesn't
implement the C99 round() and in any case we don't need the full behaviour,
so a private implementation seems the best portable option.
</pre></blockquote>

<p><strong><a name="2002-12-10_1352"></a>
2002-12-10 13:52 Igor Melichev</strong></p>
<blockquote><pre>
(pdfwrite) : Implementing /PAGELABEL pdfmark.
Code from Joerg Baumann with minor improvements.
</pre></blockquote>

<p><strong><a name="2002-12-10_1133"></a>
2002-12-10 11:33 Igor Melichev</strong></p>
<blockquote><pre>
Fix (FAPI) : Correcting the implementation of fapi_round.
</pre></blockquote>

<p><strong><a name="2002-12-10_0821"></a>
2002-12-10 08:21 Igor Melichev</strong></p>
<blockquote><pre>
Fix (FAPI) : Work around MSVC bug which doesn't define 'round' in math.h .
</pre></blockquote>

<p><strong><a name="2002-12-09_1142"></a>
2002-12-09 11:42 Igor Melichev</strong></p>
<blockquote><pre>
Fix (FAPI) : Remove dependency on interpreter structures from fapi_ft.c .
Code from Graham Asher.
</pre></blockquote>

<p><strong><a name="2002-12-09_1105"></a>
2002-12-09 11:05 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : Allow to convert CIEBasedA with non-identity MatrixA to ICCBased.
Source Forge bug "[ 647124 ] gs 8.00 makes a large and slow PDF file".
</pre></blockquote>

<p><strong><a name="2002-12-08_1054"></a>
2002-12-08 10:54 Igor Melichev</strong></p>
<blockquote><pre>
Changing copyright banner in Free Type bridge modules.
</pre></blockquote>

<p><strong><a name="2002-12-08_1050"></a>
2002-12-08 10:50 Igor Melichev</strong></p>
<blockquote><pre>
Fix (FAPI) : Passing the replaced metrics to renderer.

DETAILS

FAPI client provides replaced metrics data in all cases.

UFST bridge now provides a minimal handling for replaced metrics -
for fonts with MetricsCount only. Other cases require
to implement a new feature to UFST.

Free Type is not fixed with this patch.
Need to implement a new feature in Free Type.
</pre></blockquote>

<p><strong><a name="2002-12-08_1040"></a>
2002-12-08 10:40 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : Fixing a spelling in a comment.
</pre></blockquote>

<p><strong><a name="2002-12-06_1928"></a>
2002-12-06 19:28 Ralph Giles</strong></p>
<blockquote><pre>
Increment version number and date after 8.00 release.
</pre></blockquote>

<p><strong><a name="2002-12-06_1602"></a>
2002-12-06 16:02 Igor Melichev</strong></p>
<blockquote><pre>
Free Type integration. Code from Graham Asher.
</pre></blockquote>

<p><strong><a name="2002-12-06_0845"></a>
2002-12-06 08:45 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : Improving documentation about compression choice.
</pre></blockquote>

<p><strong><a name="2002-12-06_0111"></a>
2002-12-06 01:11 Alex Cherepanov</strong></p>
<blockquote><pre>
Avoid the stack overflow. Don't put all CID values on the
operand stack at once during identity CMap generation.
Fixes SourceForge bug #646809 "/stackoverflow"
DETAILS:
The sample file pushed about 50K numbers to the operand stack
causing /stackoverflow. Since the numbers are always sequential
the new procedure takes a range of numbers. The range is defined
by the initial value and string length.
</pre></blockquote>

<p><strong><a name="2002-12-05_2348"></a>
2002-12-05 23:48 Alex Cherepanov</strong></p>
<blockquote><pre>
Work around a common error in PDF files when the length of the xref entry
is nor equal to 20 bytes. Use readline to advance to the next entry instead
of seeking 20 bytes forward.
Fixes SourceForge bug #646809, customer #1060 "/typecheck in --add--" 
Fixes SourceForge bug #641280, customer  #780 "/typecheck in --add--"
</pre></blockquote>

<p><strong><a name="2002-12-05_0029"></a>
2002-12-05 00:29 Ray Johnston</strong></p>
<blockquote><pre>
Adjust comments to reflect the current status (which FDSelect format can
possibly overflow the operand stack) and add comments to identify which
format corresponds to each procedure.

DETAILS:

A test case that used Format 0 was not available, so no change was made to
avoid large operand stack usage for Format 0, but the previous comment
placement may have left the impression that Format 3 still had the problem.
</pre></blockquote>

<p><strong><a name="2002-12-04_1950"></a>
2002-12-04 19:50 Ray Johnston</strong></p>
<blockquote><pre>
Handling of OpenType (OTTO) fonts with CFF fonts inside would fail if the
CFF table was not the first table in the table directory. Also stack
overflow could occur when building the FDSelect array. Now Asian fonts
sold by Adobe (as OpenType .otf fonts) can be used with Ghostscript.

DETAILS:

The initial table scanning checked the 32-bit table type against the
(CFF ) string, but then failed to skip the following 12 bytes if the table
was not CFF. Since the initial table is usually BASE, most OTTO fonts were
not usable.

Also the FDSelect array construction used the stack, so could easily
overflow if there was a largest glyph index in the font was too large. The
method used creates a 65535 element array, then fills it using the info
from the font's FDSelect info. The extra elements of the array are 'trimmed'
using getinterval.
</pre></blockquote>

<p><strong><a name="2002-12-04_1445"></a>
2002-12-04 14:45 Jack Moffitt</strong></p>
<blockquote><pre>
Fixed another typo in pdf tests.
</pre></blockquote>

<p><strong><a name="2002-12-04_1435"></a>
2002-12-04 14:35 Jack Moffitt</strong></p>
<blockquote><pre>
Fixed a bug in previous patch.
</pre></blockquote>

<p><strong><a name="2002-12-04_0905"></a>
2002-12-04 09:05 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : Phase was missed writing a pattern.
Source Forge bug "[ 646062 ] (pdfwrite) Wrong pattern phase(270-01.ps".
</pre></blockquote>

<p><strong><a name="2002-12-04_0745"></a>
2002-12-04 07:45 Igor Melichev</strong></p>
<blockquote><pre>
Changing copyright banner in Free Type bridge modules.
</pre></blockquote>

<p><strong><a name="2002-12-03_1643"></a>
2002-12-03 16:43 Jack Moffitt</strong></p>
<blockquote><pre>
Fix: Turn logging on where it was overlooked.
</pre></blockquote>

<p><strong><a name="2002-12-03_1455"></a>
2002-12-03 14:55 Igor Melichev</strong></p>
<blockquote><pre>
Fix (FAPI) : Implementing MetricsCount.

DETAILS:

This fixes FAPI client, but still there are
problems with renderers. Both FreeType and UFST cannot
properly handle a replaced metrics. This problem
is not in Ghostscript.

The FAPI client also has problems with replaced metrics.
See the big comment added into zfapi.c .
Need to fix UFST and Free Type first.
</pre></blockquote>

<p><strong><a name="2002-12-03_1354"></a>
2002-12-03 13:54 Ralph Giles</strong></p>
<blockquote><pre>
Remove references to deprecated bug-gs-dev, bug-gs-beta, and mac-gs-* lists.
</pre></blockquote>

<p><strong><a name="2002-12-03_1336"></a>
2002-12-03 13:36 Ralph Giles</strong></p>
<blockquote><pre>
Document that UseFlateCompression is treated as always on. Thanks to mpsuzuki
for noticing this change.
</pre></blockquote>

<p><strong><a name="2002-12-03_0740"></a>
2002-12-03 07:40 Russell Lang</strong></p>
<blockquote><pre>

When adding a missing showpage to an EPS file,
don't bind showpage to allow user to override it.

DETAILS:
The EPS encapsulation code in ghostscript adds a showpage
if one is not present, so that displaying, printing and
converting all behave the same.  Some users are feeding
multiple EPS files to ghostscript, intending to print them
on a single page.  The current code will print each EPS file
on a single page.  For example following code would print
three pages:
  save
   /showpage {} def
   save (file1.eps) run restore
   save (file2.eps) run restore
  restore
  showpage
With this fix, it will print a single page.

Other ways to avoid this problem are to use -dNOEPS,
or (file.eps) (r) file cvx exec
</pre></blockquote>

<p><strong><a name="2002-12-03_0617"></a>
2002-12-03 06:17 Igor Melichev</strong></p>
<blockquote><pre>
Free Type integration. Code from Graham Asher.

DETAILS:

New files added :

fapi_ft.c
wrfont.c
write_t1.c
write_t2.c
wrfont.h
write_t1.h
write_t2.h

The Free Type bridge (fapi_ft.c and dependents) needs to be rewritten with
replacing all access to interpreter's data with FAPI_font callbacks.
Committing it now to allow other developers to work on it.

File names to be improved.
</pre></blockquote>

<p><strong><a name="2002-12-03_0600"></a>
2002-12-03 06:00 Igor Melichev</strong></p>
<blockquote><pre>
Free Type integration. Code from Graham Asher.

DETAILS:

New files added :

fapi_ft.c
wrfont.c
write_t1.c
write_t2.c
wrfont.h
write_t1.h
write_t2.h

The Free Type bridge (fapi_ft.c and dependents) needs to be rewritten with
replacing all access to interpreter's data with FAPI_font callbacks.
Committing it now to allow other developers to work on it.

File names to be improved.
</pre></blockquote>

<p><strong><a name="2002-12-03_0241"></a>
2002-12-03 02:41 Dan Coby</strong></p>
<blockquote><pre>
Fix:  Partial fix for [ 600288 ] /undefined in --setcolorspace--.
This fix consists of two parts.  1.  Resolve and substitute the alternate
color space for an ICCBased color space.  2.  Correct a reference counting
problem with the same alternate color space.
</pre></blockquote>

<p><strong><a name="2002-12-02_1959"></a>
2002-12-02 19:59 Jack Moffitt</strong></p>
<blockquote><pre>
Fix: Report useful error information when updating, building, or installing
fails.  Fixes SF bug #484752.
</pre></blockquote>

<p><strong><a name="2002-12-02_1921"></a>
2002-12-02 19:21 Jack Moffitt</strong></p>
<blockquote><pre>
Fix: Make sure all test code checks and reacts appropriate to the exit status
of Ghostscript.
</pre></blockquote>

<p><strong><a name="2002-12-02_1502"></a>
2002-12-02 15:02 Igor Melichev</strong></p>
<blockquote><pre>
Fix : Use GetTempFileName for creating temporary files on Windows.
SourceForge bug "[ 592925 ] Unable to open initial device (winXP)".
Code from Russell Lang with minor improvements.

DETAILS:

See comment in code. Further improvements with FILE_FLAG_DELETE_ON_CLOSE
require experimenting with multiple platforms to find a consistent
logics for clist and other temporary files with automatic removal.
In this connection see
http://www.ghostscript.com/pipermail/gs-code-review/2002-November/003437.html
and other messages in the thread.
</pre></blockquote>

<p><strong><a name="2002-12-02_1330"></a>
2002-12-02 13:30 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : Names preceded with two null characters were not handled properly.
SourceForge bug "[ 641697 ] gs 7.33 regression".

DETAILS:

pdf_write_value did not recognize names being preceded with two null characters.
Such names were introduced to pdfmark implementation with the patch
http://www.ghostscript.com/pipermail/gs-code-review/2002-January/001737.html
for SF bug #505877. The patch appears incomplete : pdf_write_value
did not recognize such names as names, and as a consequence special characters
in them were not encodes with #-escape.
</pre></blockquote>

<p><strong><a name="2002-11-29_1624"></a>
2002-11-29 16:24 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : Skip the obsolete Type 1 charstring command code 15,
because Acrobat Reader 5 on Linux chokes with it.
SourceForge bug "[ 641296 ] acrobat generates bad ps from gs pdf".

DETAILS:

GS ignores the command 15. Now skipping it while converting to CFF.
Printing a file with such font, AR5 on Linux generates an incomplete eexec section.
</pre></blockquote>

<p><strong><a name="2002-11-27_2036"></a>
2002-11-27 20:36 Alex Cherepanov</strong></p>
<blockquote><pre>
Fix: Use "\n" line endings instead of "\r\n".
MS-DOS line endings were introduced in some lines with my earier fix.
</pre></blockquote>

<p><strong><a name="2002-11-27_1557"></a>
2002-11-27 15:57 Igor Melichev</strong></p>
<blockquote><pre>
Fix (pdfwrite) : Skip redundant clipping paths.
SourceForge bug "[ 624168 ] poor performance on patterns".

DETAILS:

Besides others, the document "a)page Afrique(VECTO).eps"
creates multiple redundant clip paths with any AI "pattern"
(actually it doesn't use PS patterns). The old code was
too conservative, using only a comparison of path identifiers.

The patch creates a stable copy of clipping path written to PDF,
and compares it when PS clip path changes.  The old comparison
is left unchanged for better performance.

Also fixes return codes from pdf_put_clip_path and
improved the initializer of gx_device_pdf.
</pre></blockquote>

<p><strong><a name="2002-11-27_1537"></a>
2002-11-27 15:37 Igor Melichev</strong></p>
<blockquote><pre>
Fix : gx_clip_path::outer_box was wrongly computed with empty path.

DETAILS:

It's a prtial fix for SourceForge bug "[ 624168 ] poor performance on patterns".
</pre></blockquote>

<p><strong><a name="2002-11-27_1525"></a>
2002-11-27 15:25 Igor Melichev</strong></p>
<blockquote><pre>
Fix : A partial fix for Source Forge bug "[ 592925 ] Unable to open initial device (winXP)".
Providing a diagnostics when failed to open temporary file or the device output file.

DETAILS:

This change provides an explanation to user about the problem, rather than fixes it.
An improvement about the failure will be a separate patch.

gp_macio.c and gp_unifs.c contained C-style.htm problems.
This patch doesn't fix them for simplifying the History.
To be done separately.
</pre></blockquote>

<p><strong><a name="2002-11-27_1447"></a>
2002-11-27 14:47 Ralph Giles</strong></p>
<blockquote><pre>
Correct a non-portable symbol after #endif.
</pre></blockquote>

<p><strong><a name="2002-11-26_1515"></a>
2002-11-26 15:15 Ralph Giles</strong></p>
<blockquote><pre>
Remove some unused variables.
</pre></blockquote>

<p><strong><a name="2002-11-26_1438"></a>
2002-11-26 14:38 Ralph Giles</strong></p>
<blockquote><pre>
Adapt MacOS port to build under Metrowerks CodeWarrior 8.3. These changes
maintain compatibility with CW7. CW6 has not been tested. Also clean up
some of the mac-specific sources, removing dead and unnecessary code
and improving header includes.
</pre></blockquote>

<p><strong><a name="2002-11-26_1255"></a>
2002-11-26 12:55 Ralph Giles</strong></p>
<blockquote><pre>
Correct changelog typos. Thanks to William Bader for spotting this.
</pre></blockquote>

<p><strong><a name="2002-11-26_0237"></a>
2002-11-26 02:37 Ralph Giles</strong></p>
<blockquote><pre>
Remove echogs as part of the mostlyclean makefile target. After a patch by William Bader.
</pre></blockquote>

<p><strong><a name="2002-11-22_0049"></a>
2002-11-22 00:49 Ray Johnston</strong></p>
<blockquote><pre>
Fix: Descriptions of the regression testing script did not correspond to
the script header. Thanks to Russell Lang of GSView fame for spotting this
(someone finally read at least part of this document!).
</pre></blockquote>
</body>
</html>
