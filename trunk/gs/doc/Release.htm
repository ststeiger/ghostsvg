<html>
<head>
<title>How to prepare an Aladdin Ghostscript release</title>
<!-- $Id$ -->
<!-- Originally: make.txt -->
</head>

<body>
<!-- [1.0 begin visible header] ============================================ -->

<!-- [1.1 begin headline] ================================================== -->

<table width="100%" border="0">
<tr><th align="center" bgcolor="#CCCC00"><font size=6>
How to prepare an Aladdin Ghostscript release
</font>
</table>

<!-- [1.1 end headline] ==================================================== -->

<!-- [1.2 begin table of contents] ========================================= -->

<h2>Table of contents</h2>

<blockquote><ul>
<li><a href="#Introduction">Introduction</a>
<li><a href="#Servers">Servers</a>
<ul>
<li><a href="#Development_files">Development sources and bug reports</a>
<li><a href="#Distributions">Distributions</a>
</ul>
<li><a href="#Adding_or_deleting_files">Adding or deleting files</a>
<li><a href="#Making_distributions">Making distributions</a>
<ul>
<li><a href="#Source_distributions">Source distributions</a>
<ul>
<li><a href="#Checking_source">Checking the source code</a>
</ul>
<li><a href="#Windows_executables">Windows executables</a>
<ul>
<li><a href="#Dual_boot_environments">Dual-boot environments</a>
<li><a href="#Building_on_Windows">Building on Windows</a>
</ul>
<li><a href="#Finishing_up">Finishing up</a>
<ul>
<li><a href="#Tester_or_beta">Tester or beta distributions</a>
<li><a href="#Public_releases">Public releases</a>
</ul>
</ul>
</ul></blockquote>

<!-- [1.2 end table of contents] =========================================== -->

<!-- [1.3 begin hint] ====================================================== -->

<p>For other information, see the <a href="Readme.htm">Ghostscript
overview</a> and the instructions on how to <a href="Build.htm">build
Ghostscript</a>.

<!-- [1.3 end hint] ======================================================== -->

<hr>

<!-- [1.0 end visible header] ============================================== -->

<!-- [2.0 begin contents] ================================================== -->

<h1><a name="Introduction"></a>Introduction</h1>

<p>
This document is a rough set of internal notes that Aladdin Enterprises uses
to manage the process of making new Ghostscript releases.  As time goes on,
it will become a more suitable document for others wishing to prepare
releases for distribution.  The <a href="Public.htm">Aladdin Free Public
License</a> allows anyone to prepare and distribute releases; however, this
document is really meant only for developers working closely with Aladdin
Enterprises.

<p>
This document refers to many script files that are not currently part of the
Ghostscript distribution.  In the course of time, these scripts will become
part of the distribution, probably in a new subdirectory.

<p>
File names below that don't include an explicit subdirectory name are in the
<b><tt>src</tt></b> subdirectory.

<p>
If you do plan to make your own distribution, please be aware of some items
you will want to change.

<ul>

<li>If you make any significant changes, please edit
<b><tt>gscdef.c</tt></b> to change <b><tt>GS_PRODUCTFAMILY</tt></b> and
<b><tt>GS_PRODUCT</tt></b> from "Aladdin Ghostscript" to something else, in
order to avoid confusion with Aladdin's releases.

<li>In the same file, you may also want to edit <b><tt>GS_COPYRIGHT</tt></b>
to add your own copyright notice (although you must not remove Aladdin's
notice).

<li>You will almost certainly want to edit <b><tt>version.mak</tt></b> to
change the revision date, <b><tt>GS_REVISIONDATE</tt></b>.

<li>If you want to change the version number, you must change it in both
<b><tt>version.mak</tt></b> (<b><tt>GS_VERSION_</tt></b>*) and
<b><tt>lib/gs_init.ps</tt></b> (the integer on a line by itself near the
beginning of the file).

</ul>

<h1><a name="Servers"></a>Servers</h1>

<p>
The Aladdin Ghostscript files are maintained on sites accessible to the
public.  One specific site hosts the CVS repository for code, data, and
documentation, and the bug report data base; tarballs or zip archives with
version numbers, intended for wider distribution, are distributed from
several sites.

<h2><a name="Development_files"></a>Development sources and bug reports</h2>

<p>
The development site for Aladdin Ghostscript is SourceForge (<a
href="http://sourceforge.net">http://sourceforge.net</a>).  CVS access
information is available at <a
href="http://sourceforge.net/cvs/?group_id=1897">http://sourceforge.net/cvs/?group_id=1897</a>.

<h2><a name="Distributions"></a>Distributions</h2>

<p>
Both public and tester releases are available from
<blockquote>
<a href="http://sourceforge.net/project/filelist.php?group_id=1897">http://sourceforge.net/project/filelist.php?group_id=1897</a>
</blockquote>

<p>
Public (tested) releases are distributed from
<blockquote>
<a href="ftp://ftp.cs.wisc.edu/ghost/aladdin/">ftp://ftp.cs.wisc.edu/ghost/aladdin/</a><br>
</blockquote>

<p>
Tester releases are distributed from
<blockquote>
<a href="ftp://ftp.cs.wisc.edu/ghost/aladdin/test/">ftp://ftp.cs.wisc.edu/ghost/aladdin/test/</a><br>
<a href="ftp://www.aladdin.com/ghost/aladdin/test/">ftp://www.aladdin.com/ghost/aladdin/test/</a>
</blockquote>

<h1><a name="Adding_or_deleting_files"></a>Adding files</h1>

<p>
When adding or removing files, don't forget to invoke <b><tt>cvs
add</tt></b> or <b><tt>cvs rm</tt></b>.

<p>
When adding or removing files other than .c or .h: If the files are included
in the fileset (i.e., not just support files), check the install list in
<b><tt>unixinst.mak</tt></b>.

<p>
When adding .c files, remember to update the relevant <b><tt>.mak</tt></b>
file (usually <b><tt>devs.mak</tt></b>, <b><tt>int.mak</tt></b>, or
<b><tt>lib.mak</tt></b>).

<p>
When adding operators, update <b><tt>doc/Language.htm</tt></b> if desired.

<p>
When adding .h files, remember to add a _h definition in the appropriate
<b><tt>.mak</tt></b> file.

<p>
When adding or changing fonts, update <b><tt>Fontmap.GS</tt></b>,
<b><tt>fonts.mak</tt></b>, and possibly the compiled fonts in
<b><tt>gs.mak</tt></b> and the examples in <b><tt>doc/Fonts.htm</tt></b>.

<p>
When adding or changing filters, update <b><tt>doc/Language.htm</tt></b>.

<p>
When adding .ps files, update <b><tt>doc/Psfiles.htm</tt></b>.

<h1><a name="Making_distributions"></a>Making distributions</h1>

<p>
There are two different components of Aladdin Ghostscript distributions:
source distributions, and Windows executables.  Source distributions
currently can only be made on Linux systems (but it probably wouldn't take
much work to support other Unix systems); Windows executables require
Windows 95 or 98.  A few of the tools are designed specifically for
dual-boot environments that normally run Linux but can mount and boot a
Windows partition.

<h2><a name="Source_distributions"></a>Source distributions</h2>

<p>
To make a source distribution, you will need the following tools:
<blockquote>
<b><tt>cvs2hist.py</tt></b> (Python script -- anywhere in the path)<br>
<b><tt>cvs2hist</tt></b> (link to <b><tt>cvs2hist.py</tt></b>, ibid.)<br>
<b><tt>../bin/precheck.tcl</tt></b> (Tcl script)<br>
<b><tt>master/pre</tt></b> (Tcl script)<br>
<b><tt>master/pre.chk</tt></b> (data file)<br>
<b><tt>master/gsmake.tcl</tt></b> (Tcl script)<br>
<b><tt>master/gsmake</tt></b> (link to <b><tt>gsmake.tcl</tt></b>)<br>
<b><tt>master/makeset.tcl</tt></b> (Tcl script)<br>
<b><tt>master/makefonts</tt></b> (link to <b><tt>makeset.tcl</tt></b>)<br>
<b><tt>master/maketars</tt></b> (ibid.)<br>
<b><tt>master/makemaster</tt></b> (ibid.)<br>
<b><tt>master/smoke.ps</tt></b> (PostScript file)<br>
<b><tt>data/*/*.ps</tt></b> (PostScript files)<br>
<b><tt>beta.msg</tt></b>
</blockquote>

<p>
Make sure the release date and version number are up to date in
<b><tt>version.mak</tt></b>, <b><tt>lib/gs_init.ps</tt></b>, and
<b><tt>doc/News.htm</tt></b> (TOC and body).

<p>
Edit the makefile (presumably <b><tt>unix-gcc.mak</tt></b>) to set
<blockquote><pre>
FEATURE_DEVS=$(FEATURE_DEVS_ALL)
COMPILE_INITS=1
</pre></blockquote>

<p>
This will help catch compilation problems.

<p>
Run

<blockquote><pre>
rm obj/*
make -j2 &gt;&amp; t.log
</pre></blockquote>

<p>
and look for warnings and errors in the log file.

<p>
Do a smoke test:

<blockquote><pre>
bin/gs @b master/smoke.ps
export TEMP=/gs/tmp
bin/gs @b -sDEVICE=bitcmyk -sOutputFile=/dev/null -r600 -dMaxBitmap=1000000\
  master/smoke.ps
</pre></blockquote>

<p>
Undo the <b><tt>FEATURE_DEVS</tt></b> and <b><tt>COMPILE_INITS</tt></b>
edits.

<p>
Check in <b><tt>gscdef.c</tt></b> that the definition of
<b><tt>GS_PRODUCT</tt></b> includes the appropriate one of "TESTER RELEASE",
"BETA RELEASE", or neither.

<p>
Check for patched configuration parameters, <b><tt>#define TEST</tt></b>s,
version/date inconsistencies, and mismatches between the working directory
and the CVS repository by running:

<blockquote><pre>
master/pre
</pre></blockquote>

****** SHOULD CHECK FOR FILES EXISTING IN ONE AND NOT THE OTHER ******

<p>
This program compares the result of various greps against a check file,
writing the results of grep on one output file and the differences from the
check file on another.  See the source code of <b><tt>master/pre</tt></b>
for the default file names.  The important one is the check file,
<b><tt>master/pre.chk</tt></b>.  <b><tt>pre</tt></b> also verifies that the
right information is in the following places:
<ul>
<li>version number in <b><tt>man/*.1</tt></b>, <b><tt>doc/*.htm</tt></b>,
<b><tt>version.mak</tt></b>, <b><tt>doc/gs-vms.hlp</tt></b>,
<b><tt>lib/gs_init.ps</tt></b>
<li>revision date in <b><tt>man/*.1</tt></b>, <b><tt>doc/*.htm</tt></b>,
<b><tt>version.mak</tt></b>, <b><tt>doc/gs-vms.hlp</tt></b>
<li>copyright year (if necessary) in <b><tt>gscdef.c</tt></b>
</ul>

<p>
If necessary, run

<blockquote><pre>
master/pre update
</pre></blockquote>

<p>
to update the version and revision date in the doc files, and then run

<blockquote><pre>
master/pre
</pre></blockquote>

<p>
again.

<h3><a name="Checking_source"></a>Checking the source code</h3>

<p>
Check the consistency of the source code with the makefiles by
running:

<blockquote><pre>
master/gsmake check
</pre></blockquote>

<p>
Clean up the directories with

<blockquote><pre>
rm -f src/*~ src/*.bak src/*.orig src/*.mak.tcl doc/*~ doc/*.orig lib/*~ lib/*.orig man/*~ man/*.orig examples/*~ gnu/src/*~ gnu/src/*.bak gnu/src/*.orig
</pre></blockquote>

<p>
Run <b><tt>cvs commit</tt></b> to ensure the repository is up to date.

<p>
Determine the date and time of the previous release, <em>{date}</em>, for
input to the <b><tt>cvs2hist</tt></b> program.  (Currently this must be done
manually, but the program could do it automatically, and a future version
should do so.)  Execute

<blockquote><pre>
cvs2hist -d <em>{date}</em> -v #.#[#]
</pre></blockquote>

<p>
This updates <b><tt>doc/Changes.htm</tt></b>.  Run <b><tt>cvs
commit</tt></b> again.

<p>
Make the source archives with

<blockquote><pre>
master/maketars
</pre></blockquote>

<p>
This creates the files

<blockquote>
<b><tt>ghostscript-#.##.tar.gz</tt></b> (main archive)
<br><b><tt>ghostscript-#.##.tar.bz2</tt></b> (main archive)
<br><b><tt>ghostscript-#.##gnu.tar.gz</tt></b> (GPL'ed files)
</blockquote>

<p>
Unpack the main archive in a clean directory.  Prepare for building:

<blockquote><pre>
ln -s src/unix-gcc.mak makefile;\
ln -s /gs/jpeg jpeg; ln -s /gs/libpng libpng; ln -s /gs/zlib zlib
</pre></blockquote>

<p>
Do a full build and smoke test (in a separate window):

<blockquote><pre>
unset GS_LIB
bin/gs -Ilib -I/gs/fonts -dNOPAUSE -dBATCH /gs/master/smoke.ps | tee t
export TEMP=/gs/tmp
bin/gs -Ilib -I/gs/fonts -dNOPAUSE -dBATCH -sDEVICE=bitcmyk\
  -sOutputFile=/dev/null -r600 -dMaxBitmap=1000000 /gs/master/smoke.ps | tee t
</pre></blockquote>

<p>
This reads files named

<blockquote>
<b><tt>/gs/data/ps/*.ps</tt></b>
<br><b><tt>/gs/data/psl2/*.ps</tt></b>
<br><b><tt>/gs/data/psl3/*.ps</tt></b>
<br><b><tt>/gs/data/test/*.ps</tt></b>
</blockquote>

<p>
(Edit <b><tt>smoke.ps</tt></b> ad lib to use other test sets.)  Watch for
crashes, unusual error messages, or anomalous displayed output.

<p>
If you are not making a Windows release, skip the following section and
proceed to <a href="#Finishing_up">"Finishing up"</a>.

<h2><a name="Windows_executables"></a>Windows executables</h2>

<p>
Building in the Windows environment requires overcoming a host of problems
caused by the lack of symbolic links, inconsistent support for
non-8.3-format file names, absurd limits on the length of a command line and
the total space occupied by environment variable definitions, and the
absence of any reasonable shell.

<p>
The instructions for building Windows executables assume the existence of a
root working directory named <em>{work}</em>.  The source code will be
stored in <em>{work}</em><b><tt>\gs#.##\src</tt></b>, etc.  In order to make
the archives at the end of building, or to run Ghostscript for testing, you
must arrange to put the Ghostscript fonts in
<em>{work}</em><b><tt>\fonts</tt></b>.  In Aladdin's environment,
<em>{work}</em> is <b><tt>c:\work</tt></b>, but nothing in the Ghostscript
code or documentation (aside from this document) relies on this particular
name.

<h3><a name="Building_on_Windows"></a>Building on Windows</h3>

<p>
To build on Windows, you will need copies of all supported compilers
(currently Microsoft Visual C++, Borland/Inprise C++Builder, Watcom C++, and
probably soon the Intel optimizing compiler that runs in the MSVC++
environment).  To make the final Windows zip archive and self-extracting
executable, you will need the following programs, referenced from
<b><tt>winint.mak</tt></b>:

<blockquote><pre>
<b><tt>C:\Program Files\WinZip Self-Extractor\WZIPSE32.EXE</tt></b>
<b><tt>zip.exe</tt></b> (somewhere on the PATH)
</pre></blockquote>

<p>
Note that <b><tt>WZIPSE32.EXE</tt></b> must be the registered version of the
WinZip Self-Extractor, not the freeware version.

<p>
You will also need the following tools somewhere on the PATH:

<blockquote><pre>
<b><tt>config.bat</tt></b>
<b><tt>postboot.bat</tt></b>
<b><tt>gs_setup.bat</tt></b>
<b><tt>grep_.bat</tt></b>
<b><tt>setmake.bat</tt></b>
<b><tt>_bcwin32.bat</tt></b>
<b><tt>_msvc32.bat</tt></b>
<b><tt>_watcw32.bat</tt></b>
</pre></blockquote>

<p>
These batch files are very specific to Aladdin's environment, and you will
definitely need to understand and modify them.  (We'd be very happy if you
could simplify them, too.)

<p>
Get the Ghostscript source code into the subdirectories of
<em>{work}</em><b><tt>\gs#.#[#]</tt></b>.  If you normally run Windows, you
can do this from the CVS repository or from a .tar.gz or .tar.bz2 file.  Be
sure to unpack these archives in text mode, with EOL conversion.

<p>
Get the third-party libraries (jpeg, libpng, zlib) into the corresponding
subdirectories of <em>{work}</em><b><tt>\gs#.#[#]</tt></b>.  The
corresponding Ghostscript makefiles (<b><tt>src/jpeg.mak</tt></b>, etc.)
will tell you where to find them.

<p>
Ensure that these build directories exist (they should be created
automatically by the makefile, but they currently aren't):

<blockquote><pre>
<em>{work}</em><b><tt>\gs#.#[#]\bin</tt></b>
<em>{work}</em><b><tt>\gs#.#[#]\obj</tt></b>
</pre></blockquote>

<p>
In anticipation of testing, make sure that the PATH includes

<blockquote><pre>
<em>{work}</em><b><tt>\gs#.#[#]\bin</tt></b>
<em>{work}</em><b><tt>\gs#.#[#]\lib</tt></b>
</pre></blockquote>

<p>
and that the definition of the GS_LIB environment variable includes

<blockquote><pre>
<em>{work}</em><b><tt>\fonts</tt></b>
<em>{work}</em><b><tt>\gs#.#[#]\lib</tt></b>
</pre></blockquote>

<p>
All the remaining steps of building on Windows assume that the current
directory is <em>{work}</em><b><tt>\gs#.#[#]</tt></b>.

<p>
Build with the Borland compiler:

<blockquote><pre>
config bcwin32
copy /b ..\gs\makefile .
erase obj\*.*
make > bc.log
</pre></blockquote>

<p>
Smoke test the executables (both <b><tt>gswin32</tt></b> and
<b><tt>gswin32c</tt></b>), as described above for source distributions.
Then build with the Microsoft compiler:

<blockquote><pre>
config msvc32
copy /b ..\gs\makefile .
erase obj\*.*
nmake > msvc.log
</pre></blockquote>

<p>
Smoke test these executables too.

<p>
Building with the Watcom compiler doesn't work, because the
<b><tt>wmake</tt></b> or <b><tt>wmakel</tt></b> program runs out of memory.
However, if it did work, this is how to do it:

<blockquote><pre>
config watcw32
copy /b ..\gs\makefile .
erase obj\*.*
wmake -u > watc.log
</pre></blockquote>

<p>
If everything is OK, make the self-extracting executables:

<blockquote><pre>
nmake archive
</pre></blockquote>

<p>
This creates

<blockquote><pre>
<em>{work}</em><b><tt>\gs###w32.zip</tt></b>
<em>{work}</em><b><tt>\gs###w32.exe</tt></b>
</pre></blockquote>

<p>
These two files are the output of this process, and are what should be
uploaded to the distribution directories.

<h3><a name="Dual_boot_environments"></a>Dual-boot environments</h3>

<p>The following directions assume that <em>{work}</em> is
<b><tt>c:\work</tt></b>, as noted above.

<p>
For a dual-boot environment, you will need, in addition to the files listed
under <a href="Source_distributions">"Source distributions"</a> above:
<blockquote><pre>
<b><tt>master/makezips</tt></b> (link to <b><tt>makeset.tcl</tt></b>)
</pre></blockquote>

<p>
Mount the Windows partition on <b><tt>/c</tt></b>, and create the
<b><tt>/c/work</tt></b> directory if needed.

<p>
Make the Windows zip files and copy them to the Windows partition:

<blockquote><pre>
master/makezips
cp gs###*.zip 3rdparty.zip /c/work
</pre></blockquote>

<p>
This creates and copies the files

<blockquote><pre>
<b><tt>gs###src.zip</tt></b> (source files)
<b><tt>gs###lib.zip</tt></b> (runtime and font files)
<b><tt>3rdparty.zip</tt></b> (third-party libraries)
</pre></blockquote>

<p>
Boot into Windows.  Unpack the archives:

<blockquote><pre>
cd \work
unzip -oq gs###src.zip
unzip -oq gs###lib.zip
unzip -oq 3rdparty.zip
cd gs#.#[#]
</pre></blockquote>

<p>
Then carry out the steps described under <a
href="Building_on_Windows">"Building on Windows"</a> above.

<p>
Boot back into Linux.  If testing in Windows revealed problems, edit the
source files as necessary, and go back to <a href="#Checking_source">"Check
the consistency of the source code."</a>

<h3><a name="Finishing_up"></a>Finishing up</h3>

If you are maintaining local master copies, execute

<blockquote><pre>
master/makemaster
</pre></blockquote>

<p>
This creates <b><tt>master/###</tt></b> if necessary, and moves the archives
to it.

<p>
Upload <b><tt>ghostscript-#.##.tar.*</tt></b> and <b><tt>gs###w32.*</tt></b>
using the "Release files" facility on SourceForge.

<h2><a name="Tester_or_beta"></a>Tester or beta distributions</h2>

<p>
Do the steps for distributions in general.

<p>
Upload <b><tt>ghostscript-#.##.tar.*</tt></b> and <b><tt>gs###w32.*</tt></b>
to <b><tt>ftp://ftp.cs.wisc.edu/ghost/aladdin/test</tt></b>.

<p>
Copy the same files from there to
<b><tt>ftp://www.aladdin.com/pub/ftp/ghost/aladdin/test</tt></b>.

<p>
If <b><tt>ansi2knr.c</tt></b> has changed, put it on
<b><tt>ftp://ftp.cs.wisc.edu/ghost/ansi2knr.c</tt></b>.

<p>
If <b><tt>doc/C-style.htm</tt></b> has changed, put it on
<b><tt>ftp://ftp.cs.wisc.edu/ghost/aladdin/C-style.htm</tt></b>.

<p>
Construct the e-mail announcement by editing <b><tt>beta.msg</tt></b>;
include the News section for this release.  Mail using:
<blockquote>
To: gs-test
</blockquote>

<h2><a name="Public_releases"></a>Public releases</h2>

<p>
Update the title (current version #), first heading (previous version #),
and "new features" and "known problems" lists in
<b><tt>doc/Current.htm</tt></b>.

<p>
Do the steps for distributions in general.

<p>
E-mail the release announcement using:
<blockquote>
To: gs-announce
</blockquote>

<p>
Edit the Web pages on the Wisconsin server to reflect the new release.

<!-- [2.0 end contents] ==================================================== -->

<!-- [3.0 begin visible trailer] =========================================== -->
<hr>

<font size=2>

<p>Copyright &copy; 1999, 2000 Aladdin Enterprises.  All rights reserved.

<p>This file is part of Aladdin Ghostscript.  See the
<a href="Public.htm">Aladdin Free Public License</a> (the "License") for
full details of the terms of using, copying, modifying, and redistributing
Aladdin Ghostscript.

<p>
Ghostscript version 6.0, 3 February 2000

</font>

<!-- [3.0 end visible trailer] ============================================= -->

</body>
</html>
