#!/usr/bin/env python2.1
# -*- Mode: python -*-

#    Copyright (C) 2001 Artifex Software Inc.
# 
# This software is provided AS-IS with no warranty, either express or
# implied.
# 
# This software is distributed under license and may not be copied,
# modified or distributed except as expressly authorized under the terms
# of the license contained in the file LICENSE in this distribution.
# 
# For more information about licensing, please refer to
# http://www.ghostscript.com/licensing/. For information on
# commercial licensing, go to http://www.artifex.com/licensing/ or
# contact Artifex Software, Inc., 101 Lucas Valley Road #110,
# San Rafael, CA  94903, U.S.A., +1(415)492-9861.

# $Id$

#
# make_two_versions <filename> [<device> [<res>]]
#
# this script creates two versions of the file specified
# one from baseline, and one from head
# these are appropriate for a visual diff

import gstestgs
import gsconf
import rasterdb
import os, sys
import string

file = os.path.basename(sys.argv[1])
if len(sys.argv) > 2:
    device = sys.argv[2]
else:
    device = 'ppmraw'
if len(sys.argv) > 3:
    res = int(sys.argv[3])
else:
    res = 72

dbfile = "%s.%s.%d.%d" % (file, device, res, 0)
ofile = "%s.%s.baseline.pnm" % (file, device)

# check if raster for this baseline is in the database, and if so, use
# it instead of generating approximate raster via baselinegs
if rasterdb.exists(dbfile):
    rasterdb.get_file(dbfile, output=ofile)
else:
    gs = gstestgs.Ghostscript()
    gs.command = gsconf.baselinegs
    gs.infile = gsconf.comparefiledir + file
    gs.outfile = ofile
    gs.device = device
    gs.dpi = res
    gs.band = 0
    gs.log_stdout = gsconf.log_stdout
    gs.log_stderr = gsconf.log_stderr

    if not gs.process():
        print "Error occurred running baseline Ghostscript."
        sys.exit(1)

ofile = "%s.%s.compare.pnm" % (file, device)

gs = gstestgs.Ghostscript()
gs.command = gsconf.comparegs
gs.infile = gsconf.comparefiledir + file
gs.outfile = ofile
gs.device = device
gs.dpi = res
gs.band = 0
gs.log_stdout = gsconf.log_stdout
gs.log_stderr = gsconf.log_stderr

if not gs.process():
    print "Error occurred running compare Ghostscript."
    sys.exit(1)
