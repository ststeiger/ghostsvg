#!/usr/bin/env python2.1
#
# revert_baseline <file>
#
# this script updates the testdata database with a new baseline sum
# for all versions of file <file>.  use this when you've accidentally
# updated a baseline you shouldn't have.

# $Id$

import gstest
import gsconf
import gssum
import anydbm
import os, sys
import string

def make_entry(ifile, device, dpi, band):
    ofile = "%s.%s.%d.%d" % (ifile, device, dpi, band)
    print "reverting entry: " + ofile + "...",
    sys.stdout.flush()
    
    gs = gstest.Ghostscript()
    gs.command = gsconf.baselinegs
    gs.infile = gsconf.comparefiledir + ifile
    gs.outfile = ofile
    gs.device = device
    gs.dpi = dpi
    gs.band = band

    if gs.process():
        try:
            gssum.add_file(ofile)
            os.unlink(ofile)
            print "done."
        except OSError:
            print "no output produced."
    else:
	print "error."


f = sys.argv[1]

if f[-3:] == '.ps' or f[-4:] == '.pdf' or f[-4:] == '.eps':
    # mono
    make_entry(f, 'pbmraw', 72, 0)
    make_entry(f, 'pbmraw', 72, 1)
    make_entry(f, 'pbmraw', 300, 0)
    make_entry(f, 'pbmraw', 300, 1)
    #make_entry(f, 'pbmraw', 600, 0)
    #make_entry(f, 'pbmraw', 600, 1)

    # grayscale
    make_entry(f, 'pgmraw', 72, 0)
    make_entry(f, 'pgmraw', 72, 1)
    make_entry(f, 'pgmraw', 300, 0)
    make_entry(f, 'pgmraw', 300, 1)
    #make_entry(f, 'pgmraw', 600, 0)
    #make_entry(f, 'pgmraw', 600, 1)

    # color
    make_entry(f, 'ppmraw', 72, 0)
    make_entry(f, 'ppmraw', 72, 1)
    make_entry(f, 'ppmraw', 300, 0)
    make_entry(f, 'ppmraw', 300, 1)
    #make_entry(f, 'ppmraw', 600, 0)
    #make_entry(f, 'ppmraw', 600, 1)

    # ?
    make_entry(f, 'pkmraw', 72, 0)
    make_entry(f, 'pkmraw', 72, 1)
    make_entry(f, 'pkmraw', 300, 0)
    make_entry(f, 'pkmraw', 300, 1)
    #make_entry(f, 'pkmraw', 600, 0)
    #make_entry(f, 'pkmraw', 600, 1)
        
        

