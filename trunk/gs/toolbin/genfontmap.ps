%!PS

% usage:
%   windows:  gswin32c -q -sFONTPATH=c:/windows/fonts genfontmap.ps > myFontmap
%
%   unix:     gs -q -sFONTPATH=/usr/local/fonts genfontmap.ps > myFontmap


/=error { (%stderr) (w) file exch writestring } def

% First make sure there is a FONTPATH defined
FONTPATH length 0 eq {
  (\n  Specify a FONTPATH using -sFONTPATH or GS_FONTPATH in order to\n) =error
  (  generate a Fontmap file from the fonts found in those folders.\n\n) =error
  flush quit
} if

QUIET not {
  (\n  You must use the '-q' option in order to generate a clean Fontmap.\n\n) =error
  flush quit
} if

% -------------------------------------------------------------------------

/Initial_count Fontmap length def

( ) cvn findfont pop	% force the scan

% Create an array so we can sort it

Fontmap { [ 3 1 roll ] } forall
count array astore

% sort the array
{ 0 get 100 string cvs exch 0 get 100 string cvs gt } .sort

% Now print it out in Fontmap format
(% This Fontmap generated by genfontmap.ps\n) =
{
  dup 0 get 		% get the name of the font
  % Since the name might be Unicode, write it as a string
  100 string cvs ==only
  (	) print 1 get 0 get ==only ( ;) = 
} forall
flush

(\ngenfontmap completed OK. ) =error
Fontmap length Initial_count sub 10 string cvs =error
( new fonts added.\n\n) =error
quit
