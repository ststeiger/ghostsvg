*** gp_msio.c~	Wed Jul 15 20:54:12 1998
--- gp_msio.c	Thu Jan 14 10:40:04 1999
***************
*** 54,59 ****
--- 54,60 ----
  private void win_std_init(void);
  private stream_proc_process(win_std_read_process);
  private stream_proc_process(win_std_write_process);
+ private stream_proc_available(win_std_available);
  
  /* Use a pseudo IODevice to get win_stdio_init called at the right time. */
  /* This is bad architecture; we'll fix it later. */
***************
*** 90,95 ****
--- 91,97 ----
      if (code != 1)
  	return code;
      s->procs.process = win_std_read_process;
+     s->procs.available = win_std_available;
      s->file = NULL;
      return 0;
  }
***************
*** 106,111 ****
--- 108,114 ----
      if (code != 1)
  	return code;
      s->procs.process = win_std_write_process;
+     s->procs.available = win_std_available;
      s->file = NULL;
      return 0;
  }
***************
*** 122,127 ****
--- 125,131 ----
      if (code != 1)
  	return code;
      s->procs.process = win_std_write_process;
+     s->procs.available = win_std_available;
      s->file = NULL;
      return 0;
  }
***************
*** 165,170 ****
--- 169,181 ----
      pw->ptr += count;
      return 1;
  }
+ 
+ private int
+ win_std_available(register stream * s, long *pl)
+ {
+     *pl = -1;		// EOF, since we can't do it
+     return 0;		// OK
+ }
  
  
  private int
*** gp_os2.c~	Wed Jul 15 20:54:14 1998
--- gp_os2.c	Thu Jan 14 10:42:36 1999
***************
*** 794,799 ****
--- 794,800 ----
  /* Forward references */
  private stream_proc_process(pm_std_read_process);
  private stream_proc_process(pm_std_write_process);
+ private stream_proc_available(pm_std_available);
  
  /* Use a pseudo IODevice to get pm_stdio_init called at the right time. */
  /* This is bad architecture; we'll fix it later. */
***************
*** 831,836 ****
--- 832,838 ----
  	return code;
      s->procs.reset = pm_std_read_reset;
      s->procs.process = pm_std_read_process;
+     s->procs.available = win_std_available;
      s->file = NULL;
      return 0;
  }
***************
*** 847,852 ****
--- 849,855 ----
      if (code != 1)
  	return code;
      s->procs.process = pm_std_write_process;
+     s->procs.available = win_std_available;
      s->file = NULL;
      return 0;
  }
***************
*** 863,868 ****
--- 866,872 ----
      if (code != 1)
  	return code;
      s->procs.process = pm_std_write_process;
+     s->procs.available = win_std_available;
      s->file = NULL;
      return 0;
  }
***************
*** 912,917 ****
--- 916,929 ----
      return 1;
  }
  
+ private int
+ pm_std_available(register stream * s, long *pl)
+ {
+     *pl = -1;		// EOF, since we can't do it
+     return 0;		// OK
+ }
+ 
+ 
  private int
  pm_std_write_process(stream_state * st, stream_cursor_read * pr,
  		     stream_cursor_write * ignore_pw, bool last)
