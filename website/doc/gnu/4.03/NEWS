   Copyright (C) 1989, 1996 Aladdin Enterprises.  All rights reserved.
  
  This file is part of GNU Ghostscript.
  
  GNU Ghostscript is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY.  No author or distributor accepts responsibility to
  anyone for the consequences of using it or for whether it serves any
  particular purpose or works at all, unless he says so in writing.  Refer to
  the GNU General Public License for full details.
  
  Everyone is granted permission to copy, modify and redistribute GNU
  Ghostscript, but only under the conditions described in the GNU General
  Public License.  A copy of this license is supposed to have been given to
  you along with GNU Ghostscript so you can know your rights and
  responsibilities.  It should be in a file named COPYING.  Among other
  things, the copyright notice and this notice must be preserved on all
  copies.
  
  Aladdin Enterprises is not affiliated with the Free Software Foundation or
  the GNU Project.  GNU Ghostscript, as distributed by Aladdin Enterprises,
  does not depend on any other GNU software.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

This file, NEWS, describes the changes in the most recent releases of
Ghostscript.  Changes in older releases are described in history*.txt.

For an overview of Ghostscript and a list of the documentation files, see
README.

Within each release, news appears in the following order: Documentation,
Procedures, Utilities, Drivers, Platforms, Fonts, Interpreter, Streams
(included under Interpreter through release 2.9.9), Library.  Changes
marked with a * were made available as patches to a previous release.

Version 4.03 (05/01/1998)
============

This was an emergency re-release of 4.02 to fix the stdin redirection
problem.  It has essentially no other changes.

Known problems:
	- ps2pdf sometimes produces output with missing links.
	- ps2pdf can produce files with incorrect word spacing.
(k/offis/page12.*)
	- ps2pdf can produce files where text disappears after a figure, or
where a figure overlays text.  (k/offis/page10.*)
	- pdf2ps can produce output where what should be a small figure
overlays the text.  (k/pdf/ppi_10_d.*)
	- Setting HWSize by itself with setpagedevice has no effect.
	- When shrinking oversize halftone cells, the current algorithm,
which progressively halves the size, can produce non-monotonic behavior; GS
should either use a monotonic algorithm or give a limitcheck.
(k/jdscreen.ps)
	- In Type 1 fonts, almost-vertical lines that straddle a stem edge
produce uneven output.  Also, at some resolutions, stem hints produce
anomalous or clipped output, or even missing lines.  (k/pdf/pdfspec.pdf at
96 dpi)
	- If a character in a Type 3 font is defined by executing 'show'
type commands, charpath does the wrong thing (doesn't pick up the paths
created by the inner show).
	- Banded high-level images are disabled, because there is no way yet
to pass the color rendering information through the band list.
(USE_HL_IMAGES in gxclimag.c)
	- The computations for halftone cells don't work for non-square
pixels.  (gshtscr.c)

Documentation
-------------

Fixes bugs:
	- Solaris 2.x has /usr/ucb/install, not installbsd.  (make.txt)

Updates current.txt to mention the ability to share libpng and libgz.
(current.txt)

Procedures
----------

Fixes bugs:
	- A rule assumed that the makefile was named `makefile'.
(unixtail.mak)

Drivers
-------

Fixes bugs:
	- The stcolor drivers had an off-by-1 error that could cause them to
write into unallocated memory.  (gdevstc.c)
	- The Imagen driver wouldn't compile with gcc.  (gdevimgn.c)

Fonts
-----

Fixes bugs:
	- The Solaris fontmap had gotten out of date.  (Fontmap.Sol)

Streams
-------

Fixes bugs:
	- The test for stdin being non-seekable could leave the file error
flag set, which caused an infinite loop when trying to read from the file
later.  (sfile.c, sfileno.c)

Version 4.02 (9/19/96)
============

This release fixes a few more bugs, and adds the ability to read encrypted
PDF files and some PDF 1.2 files.

This release was withdrawn after a few days because the stdin redirection
fix, which was made at the last minute, cause Ghostview to hang.

Documentation
-------------

Fixes bugs:
	- The list of required support files was incorrect.  (install.txt)
	- The descriptions of file name lookup weren't accurate.  (use.txt)
	- A J should have been an H.  (gxbitmap.h)

Updates the documentation about encrypted PDF files.  (new-user.txt)

Documents what the 13 base PDF fonts are.  (ps2pdf.txt)

Fixes a tiny typo.  (c-style.txt)

Adds a user-contributed man page for the new pdf2dsc script.  (pdf2dsc.1)

Updates the government restricted rights notice in the Aladdin Ghostscript
Free Public License.  (PUBLIC)

Adds the URL of test files to the bug report form.  (new-user.txt)

Puts the bug reporting form in a separate file.  (readme, bug-form.txt,
new-user.txt)

Notes that map_xxx_color procedures should not return gx_no_color_index.
(drivers.txt)

Notes that Ghostscript supports the Flate filters.  (language.txt)

Documents the use of the system libpng and zlib.  (make.txt, gs.mak)

Notes that Borland C++ 5.0 and 5.01 will not compile Ghostscript correctly.
(make.txt)

Procedures
----------

Fixes bugs:
	- Using both DELAYBIND and SAFER caused problems.  (pstotext uses
DELAYBIND.)  (gs_init.ps)

Utilities
---------

Fixes bugs:
	- Some pdf2ps machinery interfered with the PDF interpreter.
(pdf_2ps.ps, pdf_main.ps)
	- In the output of pdf2ps, page numbers in link destinations were
too high by 1.  (pdf_main.ps)
	- viewpbm didn't handle value ranges other than [0..255] correctly.
(viewpbm.ps)

Adds a user-contributed shell script to invoke pdf2dsc.ps.  (pdf2dsc,
unix-end.mak)

Adds a switch to the genconf utility to set the prefix for generated
procedure names.  (genconf.c)

Adds the option of using system libraries (possibly shared) for libpng
and/or zlib.  (*head.mak, msc*.mak, os2.mak, tccommon.mak, wccommon.mak;
libpng.mak, zlib.mak)

Drivers
-------

Fixes bugs:
	- The X11 display devices ignored the -DA4 compile-time option.
(gdevx.c)
	- The garbage collector could scramble the state of the CGM drivers.
(gxdevice.h, gdevcgm.c)
	- An identifier of more than 31 characters upset the VAX DEC C
compiler.  (gdevcgml.h, gdevcgml.c)
	- In case of an error in trying to set the CoreDistVersion distiller
parameter, a variable could be used without initialization.  (gdevpdfp.c)
	- When DEBUG is selected, the X Windows driver referenced _Xdebug,
which is not defined in (at least the VMS version of) DECWindows.  (x_.h,
gdevxini.c)
	- Some map_cmyk_color implementations could return "transparent".
(gdevbit.c)
	- Setting GraphicsAlphaBits or TextAlphaBits in the P*M drivers
caused an error.  (gdevpbm.c)
	- If a user cancelled printing under MS Windows, a confusing error
resulted, and a temporary file wasn't deleted.  (gdevwpr2.c)
	- The map_color_rgb procedure for the bit devices produced incorrect
results.  (This probably had no effect in practice.)  (gdevbit.c)
	- The os2prn device produced incorrect output.  (gdevos2p.c)
	- The OS/2 PM device didn't detect PM applications correctly.
(gdevpm.c)
	- The MS Windows printer driver didn't automatically detect the
printer's color capabilities.  (gdevwpr2.c)
	- The BJC-610 driver didn't print at 720 dpi.  (gdevcdj.c)
	- The static prototypes of many devices didn't include the far_data
keyword.  (gdev3852.c, gdev4081.c, gdevbgi.c, gdevcgm.c, gdevht.c,
gdevimgn.c, gdevl256.c, gdevmrop.c, gdevn533.c, gdevnfwd.c, gdevnp6.c,
gdevo182.c, gdevpcfb.c, gdevpdf.c, gdevpe.c, gdevpm.c, gdevs3ga.c,
gdevsnfb.c, gdevsppr.c, gdevsun.c, gdevsvga.c, gdevtknk.c, gdevvglb.c,
gdevwddb.c, gdevwprn.c, gdevx.c, gdevxalt.c)
	- The (original) deskjet driver collapsed print lines towards the
left margin.  (gdevdjet.c)

Adds to the pgm/pgnm/ppm/pnm[raw] drivers the ability to set the maximum
pixel value, by setting any of the Gray/Red/Green/BlueValues device
parameters.  (gdevpbm.c)

Adds pkm[raw] drivers, which do all their internal computations in CMYK and
convert the data to RGB as they write the file.  (gdevpbm.c)

Platforms
---------

Fixes bugs:
	- The VMS script referred to old versions of the third-party
libraries.  (vms.mak)
	- Under VMS with DEC C, attempting to open a new file fails.
(gp_vms.c)
	- If you tried to print (gp_printfile) under Windows on a system
with no printers installed, Ghostscript caused a GPF.  (gp_mswin.c)

Restores support for a non-DLL MS Windows platform.  (bcwin32.mak,
dwnodll.cpp)

Adds a new MS Windows DLL call, gsdll_get_bitmap.  (gsdll16.def,
gsdll32.def, dll.txt, gdevwdib.c)

Fixes a variety of other small Windows- and OS/2-related problems, mostly
related to printing.  (gp_mswin.h, dpmainc.c, dwmain.cpp, dwmainc.cpp,
gdevmswn.c, gdevpm.c, gdevwpr2.c, gp_mswin.c)

Interpreter
-----------

Fixes bugs:
	- The value of /newerror in $error was true at the end of
initialization.  We now reset it after each internal use of stopped if
necessary.  (gs_dps1.ps, gs_fform.ps, gs_fonts.ps, gs_init.ps, gs_pdf.ps,
gs_res.ps, gs_type1.ps)
	- setpagedevice (and finddevice) didn't recognize Default.
(gs_init.ps)
	- When running with -dNODISPLAY, calling gssetresolution would cause
a crash.  (gs_init.ps)
	- A particular combination of save, .forgetsave, and garbage
collection could cause a memory access error in restore.  (isave.c)
	- Some references to systemdict were affected if a user redefined
the name /systemdict.  (gs_cmdl.ps, gs_fonts.ps, gs_kanji.ps, gs_dps1.ps,
gs_init.ps, gs_res.ps, gs_statd.ps, gs_type1.ps)
	- The insideness testing operators caused an invalid memory access.
(drivers.txt, zupath.c)
	- If a readline reached an input buffer boundary between the \r and
\n of a 2-character EOL, an error could occur.  (zfileio.c)
	- setdevparams caused an error.  (gs_lev2.ps)

Changes file names beginning with ./ or ../ so they are recognized as
"absolute" and not subject to the search path.  (gp_dosfs.c, gp_ntfs.c,
gp_os2.c, gp_unifn.c)

Changes the exit code for -h or --help from 0 to 1, so an invoking program
will keep the output around for the user to look at.  (imainarg.c)

Adds the FlateEncode and FlateDecode filters; adds PNG pixel prediction to
the LZW filters.  These additions are required for PDF 1.2 and will be part
of PostScript Level 3.  (int.mak, lib.mak, zfdecode.c, zfilter2.c, zfzlib.c,
zfpngp.c [deleted])

Interpreter (PDF)
-----------------

Fixes bugs:
	- The copyright notices on some files didn't mention the Aladdin
free license.  (pdf_*.ps)
	- Some references to systemdict were affected if a user redefined
the name /systemdict.  (pdf_font.ps)
	- The value of /newerror in $error was true at the end of
initialization.  We now reset it after each internal use of stopped if
necessary.  (pdf_main.ps)
	- stdin redirection failed for PDF files even if the new stdin was
seekable.  (pdf_main.ps)
	- The Rotate key rotated pages in the wrong direction.
(pdf_main.ps)

Adds a minimal "security socket" to the interpreter.  This does not include
any actual decryption code; such code is available elsewhere (see
new-user.txt).  (int.mak, pdf_base.ps, pdf_main.ps, pdf_sec.ps)

Adds a PDF 1.2 capability:
	- The destination in a Dest array can be a page number as well as a
page object.  (pdf_main.ps)

Streams
-------

Fixes bugs:
	- stdin was assumed to be non-seekable.  (sfile.c, sfileno.c)

Library
-------

Fixes bugs:
	- Garbage collection could corrupt a pointer in Type 0 fonts.
(gxfont0.h, gsfont0.c)
	- When applying hints to a Type 1 font outline, the last point could
sometimes get moved twice, causing output anomalies.  (gxhint3.c)
	- An #include needed for debugging was missing.  (gxcmap.h)
	- Graphics states included a no-longer-used private color space
object.  (gsstate.c)
	- Images could get clipped randomly in the X direction.  (I don't
understand why this problem hasn't shown up more often, since it's been
there since release 4.00.)  (gximage.c)
	- The arct and arcto operators failed to draw the line to the
starting point of the arc.  (bug introduced in 4.01) (gspath1.c)
	- Prefix subclasses of simple structures caused an invalid memory
access.  (gsstruct.h)
	- The variable fheight was sometimes unused.  (gstype1.c)
	- igcd and imod didn't have prototypes in an appropriate header
file, and were declared extern in several places.  (gsdcolor.h, gsline.h,
gxarith.h, gxdht.h, gsht.c, gshtscr.c, gsimage.c, gsline.c, gstype1.c,
gxclimag.c)
	- When using a non-identity RenderTable in a CIE rendering
dictionary, all colors came out too light.  (gscie.c)
	- When using anti-aliased graphics, stroked lines were rendered too
thin.  (gspaint.c)
	- The default map_cmyk_color implementations could return
"transparent".  (gxcmap.c)
	- The number of bits of alpha requested when rendering anti-aliased
characters could exceed 4.  (gschar.c)
	- Multi-screen halftones could cause errors or infinite looping when
banding.  (This problem predates 4.0; I don't know why it didn't show up
before.)  (gxcldev.h, gxclist.c, gxclread.c)
	- Skewed or rotated gray-scale images, or masks with a halftoned
color, omitted one line of pixels and displaced the image by one pixel.
(gximage2.c)

Adds an implementation of realloc, for systems that don't have one that
works.  I don't know how to determine this automatically, so for the moment,
the code uses our own implementation on Linux (where realloc is known to be
broken, at least in some releases) and nowhere else.  (malloc_.h,
gsmemory.c, gsmisc.c)

Removes the "OLD" algorithms from the Type 1 hinting source code, since they
are no longer executed.  (If necessary, they can be retrieved from an older
version.)  (gxhint3.c)

Version 4.01 (7/10/96)
============

This fixes a few minor bugs discovered since the 4.0 release.

Documentation
-------------

Fixes bugs:
	- An installation directory name was wrong.  (make.txt,
unix-lpr.txt)
	- A URL was wrong.  (devices.txt)
	- A reference to use.doc hadn't been updated.  (gs.1)
	- Some references to /usr/local/lib hadn't been updated.  (gs.1)
	- The NEWS file and history* files still referred to *.doc rather
than *.txt.  (NEWS, history*.txt)

Adds a note about compilation on Digital Unix.  (make.txt)

Clarifies that calling gs_exit calls gs_finit automatically.  (imain.h)

Adds a pointer to the PDF encryption patch.  (Ridiculous U.S. export control
laws don't allow including the patch itself in the main fileset.)
(new-user.txt)

Adds a help file for VMS.  (gs-vms.hlp)

Procedures
----------

Fixes bugs:
	- vms.mak had gotten out of sync with the makefiles (again).
(vms.mak)
	- DEVICE{WIDTH,HEIGHT}POINTS didn't override PAPERSIZE.
(gs_init.ps)
	- The Microsoft C makefiles had gotten out of date.  (msc.mak)

The (few) GNU-Licensed drivers were accidentally omitted from the fileset.

Modifies a makefile for greater reusability.  (watclib.mak)

Adds a 'debug' target for making Unix debugging configurations.
(unix-end.mak)

Utilities
---------

Fixes bugs:
	- Some uses of 'run' should be changed to runlibfile.  (bdftops.ps,
impath.ps, markhint.ps, packfile.ps, showchar.ps, waterfal.ps, wftopfa.ps,
wrfont.ps)
	- Some debugging code hadn't been removed.  (gslp.ps)

Adds a new utility, viewcmyk.ps, for viewing 4-bit CMYK data.  (psfiles.txt,
unix-end.mak, viewcmyk.ps)

Improves pdf2dsc by including Title and CreationDate DSC comments (these are
displayed by Ghostview) and reducing the size of typical output files by a
factor of about 3.  (pdf2dsc.ps)

Incorporates major changes (claimed to be improvements) to ps2ascii
contributed by a user.  If you have problems with it, please contact him,
not Aladdin.  (ps2ascii.ps)

Platforms
---------

Fixes bugs:
	- The X value of a bounding box could be computed incorrectly.
(gdevbbox.c)

Platforms
---------

Fixes bugs:
	- The Windows DLL sometimes didn't clean up properly.  (dll.txt,
dpmainc.c, dwdll.cpp, dwmain.cpp, dwmainc.cpp, gsdll.c, gsdll.h)

Interpreter
-----------

Fixes bugs:
	- Reading from a filter could hang forever, because a buffer was
allocated 1 byte too small.  (zfilter.c)
	- The search path could become garbage under some circumstances.
(imain.c)
	- A dangling reference to a stack-allocated variable could corrupt
memory if a client mixed interpreter calls and direct C calls.  (interp.c)
	- Printing an object to a procedure-based filter could cause an
invalid memory access.  (zfileio.c)

Library
-------

Fixes bugs:
	- Setting parameters for an unopened device could cause an access
error or invoke the wrong put_params procedure.  (gsdparam.c)
	- Reading from a filter could hang forever, because a buffer was
allocated 1 byte too small.  (stream.h)
	- If the current device was the nullpage device, doing a [g]save,
selecting a different device, and doing a [g]restore caused an error.
(gsdparam.c)

Adds the ability to append arcs without the initial lineto, for PCL
emulation.  (gspath.h, gspath1.c)

Version 4.0 (6/28/96)
===========

This is the first public release since 3.53, with a few more last-minute
patches beyond 3.70.

Documentation
-------------

Fixes bugs:
	- Many makefiles still referred to .doc files rather than .txt.
(cfonts.mak, devs.mak, gs.mak, int.mak, libpng.mak, unix-end.mak, watc.mak,
watcwin.mak, wccommon.mak, zlib.mak)
	- Some FONTPATH-related information was out of date.  (use.txt)
	- The installation directory for fonts was incorrect.  (install.txt)
	- The libpng and zlib versions were out of date.  (libpng.mak,
zlib.mak)
	- Some information about GSview was incorrect or incomplete.
(new-user.txt)
	- make.txt said it described installation as well as building.
(make.txt)

Notes that the current release of zlib won't compile and link correctly with
Sun cc.  (make.txt)

Adds a little more detail to the C style document.  (c-style.txt)

Procedures
----------

Fixes bugs:
	- Some documentation files weren't installed.  (unix-end.mak)
	- Some dependencies were incorrect.  (bcwin32.mak)
	- 'make begin' and 'make clean' deleted too many and/or the wrong
files.  (bcwin.mak, bcwin32.mak)
	- libpng.mak didn't work with libpng version 0.89c.  (libpng.mak)
	- -d<var>=<name> was equivalent to -d<var>=/<name>, and there was no
way to set a variable to true, false, or null.  (use.txt, gs_init.ps,
iinit.c, imainarg.c)

Removes the modules.lis file, which is no longer used.

Undoes detecting automatically the need to run tar_cat -- the mechanism
didn't work, and caused confusion.  (unix-end.mak)

Updates the makefiles to libpng version 0.89, but allows them to work with
either 0.88 or 0.89.  (*.mak)

Utilities
---------

Fixes bugs:
	- Showing the details of a protected font caused an error.
(markhint.ps)

Drivers
-------

Fixes bugs:
	- A copyright notice was wrong.  (gs_pdfwr.ps)
	- PDF link annotations could get written with two Dest keys.
(gdevpdfm.c)
	- MakeProcInstance and FreeProcInstance were called on platforms
where it wasn't appropriate.  (gdevwpr2.c, gdevwprn.c, gp_mswin.c)
	- On X servers that return very large values for the "virtual
screen" size in millimeters but correct values for the screen size in
pixels, a rangecheck could occur.  (gdevxini.c)
	- The bounding box device could return garbage if stroke or fill was
ever invoked with an empty path.  (gdevbbox.c)

Replaces the LBP8 driver with a revised one contributed by a user.
(gdevlbp8.c, devs.mak)

Platforms
---------

Fixes bugs:
	- Some Windows menu parameters were incorrect.  (gsdll16.rc,
gsdll32.rc)

Interpreter
-----------

Fixes bugs:
	- .getdevparams sometimes returned duplicate entries for /Type.
(ziodev2.c)
	- File names weren't parsed or concatenated properly on all
platforms.  (gs_fonts.ps, zfile.c)
	- Filter lookahead caused problems with special files.  (zfproc.c)
	- If a TransformPQR procedure in a CIE color rendering dictionary
didn't pop its 4 array arguments, an error occurred.  (gs_lev2.ps, zcrd.c)

Streams
-------

Fixes bugs:
	- Filter lookahead caused problems with special files.  (bug
introduced in 3.70) (stream.h)

Library
-------

Fixes bugs:
	- .getdevparams sometimes returned duplicate entries for /Type.
(gxiodev.h, gsiodev.c)

Version 3.70 patch 1 (6/24/96)
====================

This contains a few last-minute patches before the release.

Procedures
----------

Comments out the color inkjet drivers in the cc-based makefile, because a
bug in Sun's cc prevents them from compiling.  (cc-head.mak)

Drivers
-------

Fixes bugs:
	- The os2prn driver smashed memory.  (gdevos2p.c)
	- Some initialized structures weren't declared 'static'.
(gdevpdf.c, gdevpdfm.c)
	- The PNG driver wouldn't compile with some older versions of the
PNG library.  (gdevpng.c)

Version 3.70(limited) (6/23/96)
=====================

This is the candidate fileset for 4.0.  Aside from one optimization for the
PDF writer, the only changes are bug fixes.

Documentation
-------------

Renames all the documentation files from *.doc to *.txt, since the .doc
extension didn't give any information about the format of the file.
(readme, *.doc, *.txt)

Notes that IJG JPEG library v6[a] is now required.  (jpeg.mak)

Brings ps2pdf.1 up to date.  (ps2pdf.1)

Adds a new file describing Aladdin's C coding practices.  (c-style.txt)

Updates the man pages to refer to version 4.0.  (gs.1, pdf2ps.1, ps2ascii.1,
ps2pdf.1)

Procedures
----------

Changes some file names to fit within the MS-DOS 8.3 limit.  (gs.mak)

Adds the PDF writer to the remaining 32-bit configurations (Watcom, OS/2,
MSC).  (watc.mak, watcwin.mak, os2.mak, msc.mak, msvcwint.mak)

Changes the -sFONTMAP= switch so it can take a list of font names, like a
search path.  (use.txt)

Drivers
-------

Fixes bugs:
	- Signed and unsigned values were mixed inconsistently.  (gdevcdj.c)
	- PDF files could contain e-format floating point numbers, which the
PDF specification doesn't allow.  (gdevpdfx.h, gdevpdf*.c)
	- The PDF writer didn't handle glyphshow properly.  (gs_pdfwr.ps)
	- The PDF writer did the wrong thing with fonts whose FontMatrix had
a non-zero translation component.  (gs_pdfwr.ps, gdevpdft.c)
	- The stand-alone bounding box device could crash when setting
parameters.  (gdevbbox.c)
	- The mswinpr2 driver smashed memory.  (gdevwpr2.c)

Changes the PDF writer so that if it encounters a re-encoded character, it
tries to map it to an encoded character in the standard (ISO Latin-1)
encoding rather than converting the entire string containing it to a bitmap.
This dramatically improves output file size for files with a few divergently
encoded characters, but it may cause the text in the PDF file to differ from
the text in the PostScript input.  (gdevpdft.c)

Disallows BitsPerPixel=16 in the MS Windows and OS/2 drivers, since this bit
depth is not supported by Windows and would require special extra buffering.
(install.txt, dwtext.h, dwtext.cpp, gdevmswn.c, gdevpm.c, gdevwpr2.c)

Platforms
---------

Fixes bugs:
	- On the PC platforms, file names weren't changed to reflect the
value of CONFIG.  (gs.mak, bc*.mak, ms*.mak, os2.mak, tc*.mak, watc*.mak,
wccommon.mak)

Modifies some makefiles for greater reusability.  (bclib.mak, watclib.mak)

Fonts
-----

Changes the font searching rules in the following NON-BACKWARD-COMPATIBLE
way: (gs_fonts.ps, gs_res.ps)
	- -sFONTMAP=files specifies a list of files containing fontmaps;
previously, it specified only a single fontmap file.
	- If -sFONTMAP= is not used, the interpreter reads the Fontmaps from
*all* directories on the search path, and does so even if FONTPATH or
GS_FONTPATH is set; previously, it read only the first Fontmap, and only if
[GS_]FONTPATH was not set.
	- Fontmap(s) take precedence over [GS_]FONTPATH; previously,
[GS_]FONTPATH caused Fontmap to be ignored.  (You can still force Fontmap to
be ignored with -dNOFONTMAP.)
	- Earlier [GS_]FONTPATH entries take precedence over later;
previously, later entries took precedence over earlier.  Note that this is
different from Fontmap: earlier Fontmaps in the search path take precedence
over later, but within a single Fontmap, later entries take precedence over
earlier (for backward compatibility).
	- [GS_]FONTPATH is consulted only if there is no Fontmap entry for a
font, or no Fontmap entry leads to successful loading; previously,
[GS_]FONTPATH was always consulted at startup.
	- If loading a font fails, the interpreter tries the next Fontmap
entry; previously, it fell back to font substitution.

Interpreter
-----------

Fixes bugs:
	- Filters didn't peek ahead for an EOD (see Streams below).
(zfileio.c, zpaint.c)

Splits up a file to allow internal access to user and system parameters even
in Level 1.  (zmisc2.c, zusparam.c)

Adds LIBPATH as a predefined name in systemdict.  Its value is an array of
strings comprising the library search path.  (imain.c)

Interpreter (PDF)
-----------------

Fixes bugs:
	- A Dests dictionary entry with an array (rather than a dictionary)
value caused an error.  (pdf_main.ps)
	- Rotated pages could have incorrect translation and/or clipping.
(pdf_main.ps)

Streams
-------

Fixes bugs:
	- If a buffer boundary fell just before an EOD, and the client read
exactly as much data as was present before the EOD, filters didn't consume
the EOD.  (This is required as a tricky consequence of the Adobe
specification.)  (stream.h, strimpl.h, stream.c)

Library
-------

Fixes bugs:
	- An extra column of bits could get turned on at the right edge of
masked or monochrome images.  (gximage2.c)
	- Rasterizing very long curves could cause arithmetic errors or
floating point overflows.  (gxpcopy.c)
	- Banding with large line widths could truncate curves or introduce
spurious lines.  (gxclpath.c)

Version 3.69(limited) (6/14/96)
=====================

More bug fixes, plus one irresistible new feature: the ability to use
TrueType fonts as freely as Type 1 fonts.  Also, one new feature (outside
clipping) that was needed for Aladdin's PCL XL project.  We incremented the
version number because of the change in trapezoid and path filling (see
under Library below).

Documentation
-------------

Brings documentation about fonts up to date.  (fonts.doc)

Updates current.doc to reflect changes since 3.53.  (current.doc)

Updates the DLL documentation to reflect recent changes.  (dll.doc)

Documents a workaround for the code generation bug in gcc 2.7.x.  (make.doc)

Changes the contact information for potential commercial customers in
Europe.  (new-user.doc)

Updates the OS/2 documentation to make it current.  (install.doc, make.doc)

Documents -dCOLORSCREEN=0.  (use.doc)

Procedures
----------

Fixes bugs:
	- 'make clean' didn't work in the Watcom environment.
(wmakebat.bat, gs.mak, msc.mak, msvcwint.mak, os2.mak, tccommon.mak,
unixhead.mak, wccommon.mak)
	- The X11 libraries were listed in an incorrect order.
(ansihead.mak, cc-head.mak, gcc-head.mak, ugcclib.mak, unix-end.mak)
	- The OS/2 makefile didn't ignore errors from `erase' commands.
(os2.mak)

Adds the PDF writer to the 32-bit MS Windows configuration.  (bcwin32.mak)

Adds the PNG drivers to the 32-bit MS Windows platform, since they now
compile properly.  (bcwin32.mak)

Changes the ttfont feature so that it refers to support for direct usage of
TrueType fonts; puts support for Type 42 fonts into a separate feature
(type42).  (gs.mak, int.mak)

Adds direct TrueType font support to the Windows platforms.  (bcwin.mak,
bcwin32.mak)

Rewrites vms.mak to be structured more like the other makefiles.  (vms.mak,
modules.lis)

Makes the device lists in vms-*.mak the same as those for the Unix
configurations.  (vms-cc.mak, vms-decc.mak, vms-gcc.mak)

Changes the default X library directory for gcc to /usr/X11/lib.
(gcc-head.mak)

Adds the list of devices to --help, since HylaFax depends on this.
(imainarg.c)

Adds -dCOLORSCREEN=0 to indicate use of 4 separate color screens with the
same frequency and angle.  (gs_init.ps)

Utilities
---------

Fixes bugs:
	- When ps2epsi encountered a blank page, it called the
(undocumented) .quit operator with only one argument, causing a stack
underflow.  (ps2epsi.ps)
	- An extraneous file was included in the fileset.  (checkacc.ps)
	- A file was omitted from the fileset.  (bench.c)
	- Images in PostScript files produced by pdf2ps were processed about
50 times slower than they should have been.  (gs_pdf.ps)

Drivers
-------

Fixes bugs:
	- An #include was omitted.  (gdevpdfi.c)
	- The BJC driver could get into an inconsistent state.  (gdevcdj.c)
	- Braces were omitted around the values for two initialized byte
arrays.  (gdevpcx.c)
	- A function used 'float' in its argument list, causing problems in
mixed ANSI/non-ANSI compilation.  (gdevcdj.c)
	- signed and unsigned char pointers were used inconsistently.
(gdevcdj.c, gdevcgml.c)
	- Some header files weren't protected against double inclusion.
(gdevprn.h, gdevtifs.h)
	- The 24-bit PNG driver included unnecessary copies of the color
mapping procedures.  (gdevpng.c)

Fixes bugs in the PDF writer:
	- The PDF writer sometimes produced a double // in front of a filter
name.  (gdevpdfi.c)
	- The PDF writer produced zero-width, zero-height images for
non-standard fonts.  (bug introduced since 3.68) (gdevpdfi.c)
	- The PDF writer got confused if the input file invoked
setpagedevice.  (gdevpdfp.c)
	- The PDF writer put annotations on the page after the one they were
supposed to be on.  (gdevpdf.c)
	- The PDF writer sometimes failed to set the font when needed.
(gdevpdf.c)
	- The PDF writer could produce in-line images that were too large.
(gdevpdfi.c)
	- The PDF writer didn't scale explicit character and word spacing
(ashow/widthshow/awidthshow) properly.  (gdevpdft.c)
	- The PDF writer didn't copy named destination or article title
strings, possibly leading to dangling pointers.  (gdevpdf.c, gdevpdfm.c)
	- The PDF writer produced incorrect output for re-encoded fonts.
(It now converts any string containing characters in non-standard positions
to bitmaps; this will be fixed in a later release.)  (gs_pdfwr.ps,
gdevpdfx.h, gdevpdfp.c, gdevpdft.c)

Updates a few drivers for the change in the handling of band device
procedures.  (gdevcp50.c, gdevdjet.c)

Updates the X Windows driver for strip halftones.  (gdevx.c)

Adds anti-aliasing capability to the os2pm device.  (gdevpm.c)

Increases the sizes of some tables in the PDF writer.  (gdevpdfx.h)

Platforms
---------

Fixes bugs:
	- A patch for the MS Windows platform was accidentally omitted.
(gp_mswin.c)
	- A block of code was accidentally duplicated.  (dwmain.cpp)
	- An identifier exceeded VAX VMS C's limit of 31 characters.
(gscspace.h)
	- File name enumeration didn't work properly on Unix systems
(still/again).  (gp_unifs.c)
	- On MS Windows, If you closed Ghostscript with the system menu, you
only closed the text window; Ghostscript kept running and you had to use the
task manager to kill it.  (dwmain.cpp, dwmainc.cpp, dwtext.cpp)
	- Some DLL-related typedefs were not consistent.  (dwdll.h, gsdll.h,
dpmainc.c, dwdll.cpp)
	- Attempts to call the DLL before it was initialized were not
detected.  (gsdll.c)
	- Bitmap line lengths were rounded up even on 32-bit Windows, which
doesn't want this.  (gdevwdib.c)

Further improves the handling of attempts to use the DLL when it is already
in use.  (dwdll.cpp, gsdll.c)

Adds a DLL-compatible main program for OS/2.  (dpmainc.c, gp_os2.c, gsdll.c)

Fonts
-----

Fixes bugs:
	- The WingDings TrueType font wasn't loaded properly.  (gs_ttf.ps)

Makes changes so that TrueType fonts can appear in the Fontmap and can be
loaded directly.  (gs_fonts.ps, gs_ttf.ps)

Interpreter
-----------

Fixes bugs:
	- Executing a .quit with only 1 element on the operand stack caused
an invalid access.  (zcontrol.c)
	- The usage help message contained incorrect double %%s.
(imainarg.c)
	- If an initialization file tried to use any Encodings other than
the 4 registered ones, it couldn't find them.  (gs_init.ps, gs_res.ps)
	- Places that expected arrays of coordinates (rectangles,
x/y/xyshow) didn't accept packed arrays.  (ibnum.c, zdps1.c)
	- filterdict was still visible after initialization.  (gs_init.ps)
	- The usage error message wasn't terminated by a newline.
(imainarg.c)
	- setcacheparams (or setting the MaxFontCache user parameter) didn't
actually affect the size of the character cache.  (zfont.c, zmisc2.c)
	- The main interpreter loop declared iref as a ref *, even though it
may only be a ref_packed *.  (iref.h, interp.c)

Changes the character cache so it ignores absurd FontBBox values.  Nothing
in the Adobe spec suggests doing this, but it is necessary for handling
questionable output produced by PageMaker 5.0 (an Adobe product!).
(zchar1.c)

Changes some type declarations slightly to reduce the number of 'discarding
const' compiler warnings.  (igc.h, igc.c, igcref.c)

Adds .setclipoutside and .currentclipoutside operators for accessing the new
outside clipping capability.  (zpath.c)

Adds the dictionary stack to the information printed in case of a fatal
problem.  (imain.c)

Adds .set/currentrenderalgorithm operators for testing.  (zrop.c)

Library
-------

Fixes bugs:
	- The TrueType rasterizer didn't map quadratic to cubic splines
well, and didn't handle off-curve points at the end of a contour properly.
(gstype42.c)
	- An #include was omitted.  (gsimage.c, gxclimag.c)
	- Some compilers complained about statements with no effect, or
comma operators with no effect on the left.  (gschar.c, gxcpath.c, gxfill.c)
	- TrueType or Type 42 glyphs with a repeat count that crossed a
contour boundary produced incorrect output.  (gstype42.c)
	- TrueType / Type 42 composite glyphs involving rotation were placed
incorrectly.  (gstype42.c)
	- Type 42 fonts with an absent or incorrect FontBBox could fail to
produce output.  (gstype42.c)
	- Some header files weren't protected against double inclusion.
(gsio.h, gdebug.h)
	- Decoding filters didn't "look ahead" to detect EOD, so if the last
read operation before closing the filter ended just before the EOD mark, the
EOD mark might not be absorbed.  (stream.h, stream.c)
	- Filling paths consisting of multiple subpaths that overlap in Y
produced slightly inaccurate output.  We were unable to find a way to fix
this without making a NON-BACKWARD-COMPATIBLE change in the interface for
the recently introduced fill_trapezoid device procedure.  (gxdevice.h,
gdevbbox.c, gdevddrw.c, gdevnfwd.c, gxfill.c)
	- When banding, get_bits didn't detect calls with out-of-range Y
values.  (gxclread.c)
	- setcacheparams didn't actually affect the size of the character
cache.  (gsfont.h, gxbcache.h, gxfcache.h, gschar.c, gsfont.c, gxbcache.c,
gxccman.c, gxclbits.c)
	- When banding, colored halftones could be mangled.  (gxclread.c)

Fixes bugs in the bounding box device:
	- The bounding box device could give bizarre results if any objects
crossed the lower edge of the page.  (gdevbbox.c)
	- The bounding box device could get a memory access error when
processing image data.  (gdebbox.c)
	- The bounding box device ran the default drawing algorithms even if
it had no target (performance bug only).  (gdevbbox.c)
	- The bounding box device computed an incorrect (too small) box for
partially clipped bitmap images.  (gdevbbox.c)
	- The bounding box device got confused by files that filled the
entire page with a background color.  (gdevbbox.c)
	- The bounding box device produced infinite-height boxes for certain
kinds of data.  (gdevbbox.c)

Changes some type declarations slightly to reduce the number of 'discarding
const' compiler warnings.  (gsmemory.h, gsstruct.h)

Adds the capability of clipping to the outside rather than the inside of the
clipping path.  This is required for emulating an obscure feature of the
Microsoft Windows GDI.  (gspath.h, gxclpath.h, gxpath.h, gxcpath.h,
gzcpath.h, gspath.c, gxacpath.c, gxclpath.c, gxclread.c, gxcpath.c.)

Makes it possible for band devices to select the underlying memory device
used to accumulate the actual bits.  This is required for (at least) PCL5
emulation.  This requires adding a procedure to the gx_device_printer
structure, which, for devices that initialize the structure without using
the macros in gdevprn.h or access the printer-specific procedures directly,
is a NON-BACKWARD-COMPATIBLE change.  (gdevprn.h, gxclist.h, gxdevice.h,
gdevdflt.c, gdevprn.c, gxclread.c)

Speeds up handling of rotated or halftoned masked images.  (gximage2.c)

Adds an output_page procedure to the bounding box device, for testing.
(gdevbbox.c)

Adds a sample device that keeps track of the "render algorithm", for PCL5c
emulation.  (gdevrrgb.c)

Version 3.68 patch 4 (5/23/96)
====================

More minor bug fixes, mostly related to the MS Windows implementation.

Documentation
-------------

Further updates various doc files to make them more useful to new users.
(NEWS, README, current.doc, helpers.doc, new-user.doc)

Adds user-contributed documentation for ps2pdf.  (ps2pdf.doc, unix-end.mak)

Documents a bug in the Borland C++ 4.52 compiler, and where to find the
patch for it.  (make.doc)

Procedures
----------

Fixes bugs:
	- A command line exceeded the MS-DOS 120 character limit.
(devs.mak)

A file was accidentally omitted from the fileset.  (wmakebat.bat)

Drivers
-------

Fixes bugs:
	- Many of the 'show' operators didn't work properly if the PDF
writer was included in the configuration.  (gs_pdfwr.ps)
	- x_wrap_get_bits was ridiculously slow.  (It still is, but not
quite as ridiculously.)  (gxcindex.h, gdevxalt.c)
	- The PDF writer generated CR instead of CalRGB, which is legal per
the Adobe spec but not compatible with some Adobe Acrobat products.
(gdevpdfi.c)
	- Some signed/unsigned discrepancies caused compilation warnings.
(gdevpdfm.c, gdevpdfp.c, gdevpdft.c)

Fixes bugs in the Windows driver:
	- An accidentally opened tiny window didn't get closed.
(gdevwdib.c)
	- The name DllInit was misleading, and this procedure wasn't being
called whtn the DLL was loaded, so the DLL couldn't know the instance
handle.  (gp_mswin.c)
	- The code didn't recognize Win32s (vs. Windows 95) correctly.
(dwmain.cpp, gdevwdib.c, gp_mswin.h, gp_mswin.c, gsdll16.rc)
	- Some compiler warnings needed fixing.  (gdevwdib.c)
	- gsdll16.def and gsdll32.def were different.  (gsdll32.def)
	- A GPF leaving the 16-bit DLL loaded could make the DLL permanently
unusable.  (dwmain.cpp)
	- Two obsolete files were still included in the fileset.
(gswin.def, gswin32.def)

Adds a compile-time option to the 'bit' drivers to expand 4-bit pixels to
32-bit.  This was required for tracking down customer problems, because the
only tools we have available for displaying CMYK images require 32 bits per
pixel.  (gdevbit.c)

Platforms
---------

Fixes bugs:
	- In DEC C, <time.h> does define the timeval struct.  (time_.h)

Changes gsdll_init() to take an additional argument, a window handle.  This
is a NON-BACKWARD-COMPATIBLE change.  (dll.doc, dwdll.h, gsdll.h, dwdll.cpp,
dwmain.cpp, dwmainc.cpp, gsdll.c)

Fonts
-----

Updates more Fontmaps to include the new URW++ fonts.  (Fontmap.OS2,
Fontmap.ATM)

Interpreter
-----------

Fixes bugs:
	- The default operator array table wasn't big enough.  (iinit.c)
	- Some signed/unsigned discrepancies caused compilation warnings.
(imain.c, imainarg.c, zfile.c)

Adds encoding vectors for Windows 3.1 Latin 1, Latin 2, and Latin 5
encodings.  None of these are loaded in the standard configuration.
(gs_wl{1,2,5}_e.ps)

Library
-------

Fixes bugs:
	- Some tracing output was incorrect or missing.  (gxdither.c)
	- Resized objects in the C heap had incorrect bookkeeping
information (bug introduced in 3.68).  (gsmemory.c)
	- Image pixels that fell exactly on device half-pixel boundaries
could get discarded.  (gximage0.c)
	- The bounding box device didn't set a variable properly and didn't
implement end_image, leading to invalid memory accesses.  (gdevbbox.c)
	- Fonts with BuildChar routines written in C didn't work properly
with kshow or xyshow.  (gschar.c)

Adds some additional tracing output for Patterns.  (gxpcmap.c)

Adds tracing output for freeing malloc'ed blocks at the end of execution.
(gsmemory.c)

Adds a gs_dashpath procedure that expands dashes in the same way that
gs_flattenpath expands curves.  (gspath.h, gspath1.c)

Version 3.68 patch 3 (5/17/96)
====================

More bug fixes during the beta test period.  AccurateScreens now works
properly.

Procedures
----------

Fixes bugs:
	- The help message was too long to fit on a PC screen or standard
terminal.  (imainarg.c)
	- Failure to run tar_cat wasn't detected.  (unix-end.mak,
unixtail.mak)

Utilities
---------

Fixes bugs:
	- In the PostScript files produced by pdf2ps, images using ASCII85
encoding would cause a typecheck error.  (gs_pdf.ps)
	- pdf2ps wrote out strings longer than 200 characters incorrectly.
(pdf_2ps.ps)

Drivers
-------

Fixes bugs in gdevcdj.c (according to the author, we have no way to test
this):
	- The driver used to use Colors as well as ProcessColorModel to
define the process color model.  (devices.doc, gdevbjc.h, gdevcdj.c)
	- Incorrect or inconsistent settings of BitsPerPixel and
ProcessColorModel, or setting one but not the other, could leave the driver
in an inconsistent state.  (gdevcdj.c)

Fixes bugs in the MS Windows driver:
	- Insufficient memory for the backing bitmap could cause a GPF.
(gdevmswn.c, gdevwdib.c)
	- Invalid parameters could cause a crash within the DLL code.
(gdevwdib.c)

Adds a user-contributed driver for the CalComp Raster Format.  (devs.mak,
gdevccr.c)

Adds an anti-aliasing option for MS Windows.  (gdevmswn.c, gdevwdib.c)

Platforms
---------

Fixes bugs in the Windows platform:
	- One had to type "quit" twice to exit.  (dwdll.h, dwdll.cpp)

Interpreter
-----------

Fixes bugs:
	- Platform fonts didn't work properly if the document's primary
encoding was the standard MS Windows encoding.  (ifont.h, gs_wan_e.ps)
	- stringwidth with a Type 1 font could give a spurious typecheck
error (bug introduced in 3.65).  (zcharout.c)
	- If a DOS editor added a ^Z to the end of the Fontmap file, an
error occurred during initialization.  (gs_fonts.ps)
	- Halftones that didn't specify a value for AccurateScreens
sometimes ignored the setting of the AccurateScreens user parameter.
(zht2.c)

Library
-------

Fixes bugs:
	- gs_join_none was defined, but not implemented.  (gxstroke.c)
	- A bookkeeping list for fonts could get confused, causing invalid
memory accesses.  (gsfont.c)
	- An I/O error or internal error would cause the band list
rasterizer to go into an infinite loop.  (gxclread.c)
	- The algorithm for choosing screen angles and frequencies produced
poor results.  (gshtscr.c)
	- Color screens were broken (bug introduced in 3.68).  (gxdht.h,
gzht.h, gsht.c, gshtscr.c)

Version 3.68 patch 2 (5/13/96)
====================

This is another set of patches for the next general release.

Documentation
-------------

Fixes bugs:
	- Windows NT and Windows 95 implementations were identified as
"under development" rather than available.  (README)
	- There were several other minor errors in the README file.
(README)
	- The claimed current IJG JPEG version was incorrect.  (jpeg.mak)

Splits off information for new users into a separate file.  (README,
new-user.doc)

Procedures
----------

Fixes bugs:
	- gettimeofday takes 2 arguments on SVR4 systems more recent than
SVR4.0.  (make.doc, ansihead.mak, cc-head.mak, gcc-head.mak, time_.h)

Changes the default Unix data installation directory from /usr/local/lib to
/usr/local/share, which seems to be favored by more recent Unix systems
(except for some Linux versions, which still use /usr/local/lib, and BSD/OS,
which puts Ghostscript in /usr/contrib/lib.)  (ansihead.mak, cc-head.mak,
gcc-head.mak, ugcclib.mak)

Changes the unset commands in the Unix script to assignments, because a few
older Unix shells don't provide unset.  (unixtail.mak)

Drivers
-------

Fixes bugs:
	- An #include incorrectly referred directly to a system header.
(gdevpdft.c)
	- CMYK devices took an excessive amount of time clearing the page to
white.  (gdevm32.c)

Adds a compile-time option to the 'bit' drivers to remove top and bottom
whitespace.  This change was required in order to track down a customer bug.
(gdevbit.c)

Interpreter
-----------

Updates the interpreter for the split in the gstate API.  (igstate.h)

Streams
-------

Fixes bugs:
	- Some compilers don't define NULL widely enough.  (spngp.c)

Library
-------

Fixes bugs:
	- There was a minor typo (& for &&) that didn't affect execution.
(gxccman.c)
	- There was a trailing comma in an enumeration.  (gsiparam.h)
	- Internal and public interfaces weren't separated properly.  THIS
IS A NON-BACKWARD-COMPATIBLE CHANGE for clients using certain undocumented
interfaces to the graphics state.  (gsstate.h, gxstate.h, gzstate.h,
gsstate.c)
	- A 'private' declaration was missing (yet again).  (gxclimag.c)

Version 3.68 patch 1 (5/10/96)
====================

This is the first bug fix (patch) incremental release for the next general
release.

Procedures
----------

Fixes bugs:
	- Many Windows-specific files were omitted from the previous
fileset: dw*.rc, dw*.cpp.

Version 3.68(limited) (5/9/96)
=====================

This release cleans up the new Windows files, mostly implements the
high-level driver API for bitmap images, and adds practical strip
(AccurateScreens) halftoning.  This is the first "serious beta" fileset for
the next general release.  It still has more problems than I would have
liked.

Documentation
-------------

Fixes bugs:
	- The names of the executable files for MS Windows were out of date.
(make.doc)
	- gxcindex.h still referred to "drawing color".  (gxcindex.h)
	- The name of the default font directory for Unix systems was
incorrect.  (make.doc)

Moves the list of files required for installation, and some other
installation instructions, from make.doc to install.doc.  (install.doc,
make.doc)

Adds a description of the PNGPredictor filters.  (language.doc)

Updates the documentation of the higher-level driver procedures to match the
specification changes.  (drivers.doc)

Documents the change in the Watcom build procedure.  (make.doc)

Improves the documentation of bitmap IDs.  (gxbitmap.h)

Adds documentation for the new strip_tile_rectangle and strip_copy_rop
driver procedures.  (drivers.doc)

Changes the few remaining direct FTP addresses in README to URLs.  (README)

Notes that zlib does not compile correctly on IRIX 6.n with optimization.
(make.doc)

Adds references to PDF and TrueType fonts to language.doc.  (language.doc)

Updates fonts.doc to remove references to fonts.mak.  (fonts.doc)

Describes how to substitute an LZW compressor for the LZW-compatible
compressor provided in the standard release.  (make.doc)

Procedures
----------

Fixes bugs:
	- Some lines had exceeded the 120-character limit of the
MS-DOS shell.  (int.mak)
	- The configuration files weren't generated correctly when CONFIG
wasn't an empty string.  (unixhead.mak)

Factors out shared DLL makefile rules into a new file.  (bcwin.mak,
bcwin32.mak, dwcommon.mak)

Makes the cp and rm commands into makefile parameters, allowing automatic
generation of build scripts even in the MS-DOS and MS Windows environments
where the shell requires the CALL command for sub-scripts.  (*.mak,
genconf.c)

Adds the PDF writer to the default Unix configurations.  (ansihead.mak,
cc-head.mak, gcc-head.mak)

Adds TrueType support to all Level 2 configurations.  (int.mak)

Removes fonts.mak, which is no longer relevant.  (fonts.mak)

Brings the font compilation procedures up to date.  (cfonts.mak, int.mak)

Utilities
---------

Fixes bugs:
	- There was an extra 'show' in one file.  (align.ps)

Drivers
-------

Fixes bugs:
	- The bit devices were missing the map_color_rgb procedure.
(gdevbit.c)
	- The MS Windows driver sent a redundant message. (gdevmswn.c)

Adds a device that keeps track of the page bounding box.  This device is not
included in any standard configuration.  (drivers.doc, gdevbbox.h,
gsmatrix.h, gsstruct.h, gxdevice.h, gdevbbox.c, gdevnfwd.c, gsmatrix.c)

Updates the PDF writer to track the changes in the high-level driver API,
and to write out images in a reasonable way.  NOTE: the current
implementation doesn't write out CIE color space parameters, so CIE-color
images won't be colored accurately.  (gdevpdf.c, gdevpdfi.c)

Adds a forwarding procedure for tile_rectangle.  (gxdevice.h, gdevnfwd.c)

Changes the copyright notices on the PDF writer to be the same as on the
rest of Ghostscript.  (gdevpdf*.[ch])

Updates Gunther Hess's Epson Stylus Color driver from 1.21 to 1.90.  (Aladdin
Enterprises takes no responsibility for this driver: if you have questions,
contact the author.)  (devices.doc, devs.mak, gdevstc*.c, gdevstc.h)

Platforms
---------

Removes some obsolete MS Windows files and #defines.  (gp_mswtx.h,
gp_mswtx.c, gp_mswin.h)

Works around a memory limitation in the Watcom make utility.  (wmakebat.bat)

Fonts
-----

Changes the standard Fontmap from using the low-quality fonts converted from
bitmaps to using high-quality fonts recently contributed by URW++.
(Fontmap, Fontmap.GS)

Interpreter
-----------

Fixes bugs:
	- A macro containing an if-else, and a macro generating a compound
statement, could cause incorrect grouping of 'if' statements.  (files.h,
ostack.h)
	- .setrasterop didn't pop its operand.  (zrop.c)
	- A rounding inaccuracy could cause bounding box rangecheck errors.
(gsdps1.c)
	- CIE-based images in PDF files didn't work.  (gs_pdf.ps)
	- The page parameter .MediaSize didn't get updated when PageSize was
set.  (This is just the most recent manifestation of the setpagedevice
morass.)  (gs_setpd.ps)
	- %lineedit and %statementedit were limited to 160 characters.
(zfileio.c, ziodev.c)
	- Compiled initialization files didn't work properly.  (geninit.c,
gs_l2img.ps)
	- Attempting to parse a command line with argc = 0 caused a crash.
(imainarg.c)

Renames some files to allow separating the non-DLL 'main' procedure into a
separate file, and to make the file naming more consistent:
	gs.c (except for 'main') => imainarg.c
	gsmain.c => imain.c
gs.c now consists only of 'main'.  The name gs.c is still inconsistent (it
should be i- something), but at least it's consistent with the name of the
executable.  (*.mak, imain.h, iminst.h, imainarg.h, gs.c, gsmain.c, imain.c,
imainarg.c)

Adds PNGPredictorEncode/Decode filters, and increases the size of filterdict
slightly to make room for them.  (iinit.c, zfpngp.c)

Makes zwrite external, per a customer request.  (opextern.h, zfileio.c)

Updates clients to work with the new API-based bitmap imaging calls.
(iimage.h, zcolor1.c, zimage2.c, zpaint.c)

Updates clients for the split in gscspace.h.  (zcie.c, zcolor1.c, zcolor2.c,
zcsindex.c, zcssepr.c, zimage2.c, zpaint.c, zpcolor.c)

Updates clients for strip-based halftones.  (zpcolor.c)

Updates the initialization code to pass the correct (system) allocator to
the library initialization.  (imain.c)

Streams
-------

Fixes bugs:
	- If a filter reached EOD exactly at the end of reading data for
certain operations, it didn't get closed automatically.  (stream.c)
	- The LZW-compatible encoding filter reset procedure had an
incorrect return type.  (slzwce.c)

Changes the ASCIIHexEncode filter to insert \ns in fewer places, to be
somewhat more compatible with the Adobe implementation.  (sstring.c)

Adds PNGPredictorEncode/Decode filters that implement the pixel prediction
algorithms in the PNG specification.  (We'd like to use the code in the PNG
library, but it's too deeply embedded in the rest of the PNG machinery, and
it also doesn't provide for suspendable I/O.)  (spngpx.h, spngp.c)

Library
-------

Fixes bugs:
	- A test for pure color was backwards, causing garbage output or
possible address or floating point exceptions.  (gxclpath.c)
	- A macro containing an if-else could cause incorrect grouping of
'if' statements.  (gsrefct.h)
	- The default implementation of RasterOp didn't handle the device
depth correctly.  (gdevmrop.c)
	- The memory device implementation of RasterOp truncated 24-bit
constant source or texture values to 8 bits.  (gdevmrop.c)
	- A typo caused the garbage collector to miss an internal buffer
used when rendering images.  (gximage.h)
	- gs_debug_out was only defined if DEBUG was set.  (gdebug.h)
	- The raster of horizontally replicated tiles was incorrect.
(gxht.c)
	- A data type might not be declared, causing a compilation error.
(gscoord.h)
	- Empty TrueType glyphs weren't handled properly.  (gstype42.c)
	- Fonts with a build procedure written in C could cause an invalid
memory access.  (gschar.c)
	- The initial point of a band list path sometimes didn't get
written, causing excess or missing filled regions.  (gxclpath.c)
	- Characters between 49 and 56 bits wide were rendered incorrectly
when banding.  (gxclbits.c)

Renames gsimage*.c as gximage*.c, to reflect more accurately the position of
these files in the architecture.  (gsimage*.c, gximage*.c)

Fully implements the high-level bitmap image calls in the driver API.  This
includes some driver API changes; however, this part of the API was clearly
documented as not stable enough to rely on.  (gxdevice.h, gximage.h,
gdevbbox.c, gdevddrw.c, gdevnfwd.c, gsimage.c, gximage*.c)

Splits the color space header into client and implementation, as with many
others.  (gscspace.h, gxcspace.h, gximage.h, gscie.c, gscolor.c, gscolor1.c,
gscolor2.c, gscsepr.c, gsimage.c, gspcolor.c, gsstate.c, gxcmap.c,
gxpcmap.c)

Extends band lists to handle high-level images.  NOTE: This facility is
patched out because there is not yet a way to pass the necessary color
rendering information through the band list.  (gxcldev.h, gxclist.h,
gxclpath.h, gxclimag.c, gxclist.c, gxclpath.c, gxclread.c)

Implements fixed2float and float2fixed more efficiently on machines with
slow floating point.  (gxfixed.h, gscoord.c, gsmisc.c)

Makes one further NON-BACKWARD-COMPATIBLE change in the existing
higher-level driver procedures (fill_path, stroke_path, fill_mask): we make
the imager state pointer an explicit argument, rather than a member of the
gx_fill/stroke_params structure.  We now consider the specification of these
procedures stable, and have removed the "subject to change" notice from the
documentation.  (gxdevice.h, gxpaint.h, gdevbbox.c, gdevnfwd.c, gxacpath.c,
gxclpath.c, gxclread.c, gxfill.c, gxpaint.c, gxstroke.c)

Extends halftone bitmaps to include "strip" and "shift" information,
allowing halftone cells with arbitrary angles to be stored in space
proportional to the number of bits in the cell rather than the square of the
number of bits.  This requires adding new (optional) strip_tile_rectangle
and strip_copy_rop driver procedures that are like tile_rectangle and
copy_rop respectively but accept a strip bitmap rather than an ordinary
tile; these procedures supersede tile_rectangle and copy_rop (although these
also remain, defined in terms of the new ones).  This also requires making
small but NON-BACKWARD-COMPATIBLE changes in several internal interfaces.
(gdevmem.h, gdevprn.h, gsdcolor.h, gxbcache.h, gxbitmap.h, gxcldev.h,
gxclip2.h, gxclist.h, gxdevice.h, gxdevrop.h, gxdht.h, gxfcache.h,
gxhttile.h, gxpcolor.h, gzht.h; gdevabuf.c, gdevbbox.c, gdevdflt.c,
gdevm*.c, gdevmpla.c, gdevmrop.c, gdevnfwd.c, gsht.c, gsht1.c, gshtscr.c,
gspcolor.c, gsstate.c, gxcht.c, gxclbits.c, gxclip2.c, gxclist.c,
gxclpath.c, gxclread.c, gxcpath.c, gxdcolor.c, gxdither.c, gxht.c,
gximage2.c, gxpcmap.c, ...)

Adds "no join" as a line join type.  NOTE: this is not actually implemented
yet.  (gslparam.h)

Changes the initialization code so that it passes the system allocator as an
argument to module initialization procedures.  While this is theoretically a
NON-BACKWARD-COMPATIBLE change, module initialization procedures are not
documented and presumably are not used by any code outside the
implementation.  (gscdefs.h, gconf.c, gdevmrop.c, gsinit.c, gxclimag.c,
gxclpath.c)

Splits up gs_lib_init into two procedures, allowing specification of a
different default allocator for the library.  (gslib.h, gsinit.c)

Adds a resize_object operation to the allocator API.  (gsmemory.h,
gsalloc.c, gsmemory.c)

Version 3.67(limited) (4/12/96)
=====================

This release restructures the MS Windows and OS/2 code to be primarily DLL-
rather than EXE-based.  See under Platforms below for more news.  This
release was put out in a hurry in order to get the new DLL code into
testers' hands; it has more rough edges than usual.

Documentation
-------------

Fixes bugs:
	- A definition & use comment was incorrect.  (scanchar.h)
	- William Bader's e-mail address was wrong.  (README)

Adds documentation for the new begin_image, image_data, and end_image
procedures.  THIS INTERFACE IS STILL SUBJECT TO CHANGE.  (drivers.doc)

Procedures
----------

Renames all the *core.dev modules as *lib.dev.  (int.mak, *lib.mak, vms.mak,
gdevmrop.c)

Updates all the remaining makefiles to IJG JPEG version 6a.  (*.mak)

Moves the configuration parameter definitions from gconf.c to a new file
gscdefs.c.  (bcwin*.mak, *lib.mak, gs.mak, int.mak, lib.mak, unixtail.mak,
vms.mak, gconf.c, gscdefs.c)

Platforms
---------

Restructures the MS Windows and OS/2 code to be primarily DLL- rather than
EXE-based.  This involves two minor NON-BACKWARD-COMPATIBLE changes to the DLL
interface, documented near the end of dll.doc:

	- Adding argv and argc as arguments to gsdll_init.

	- Adding a new message type, GSDLL_POLL, to the callback procedure.

(bcwin*.mak, devs.mak, os2.mak, dll.doc, install.doc, dw*.*, gsdll*.*,
gdevms*.*, gdevpm.c, gdevw*.c, gp_mswin.c, gp_os2.c, gsos2.def, gswin.rc)

Adds the BMP drivers to the Watcom platform.  (watc.mak)

Interpreter
-----------

Fixes bugs:
	- gs.c assumed the presence of stdio.  (gs.c)

Defines a new API entry point that is the equivalent of command line
invocation.  (imain.h, imainarg.h, gs.c)

Changes clients to conform to the changes in gsimage.h.  (zimage2.c,
zpaint.c)

Speeds up the search operator slightly.  (zstring.c)

Interpreter (PDF)
-----------------

Fixes bugs:
	- If the PDF interpreter was present, running a PostScript file
didn't close the file properly if it caused an error.  (pdf_main.ps)

Speeds up embedded font loading by making an internal buffer bigger.
(pdf_font.ps)

Library
-------

Fixes bugs:
	- There could be some non-zero garbage between the width and the
next multiple of bitmap_align_mod for copy_alpha.  (The driver API
specification explicitly allows this, but it upset one customer.)
(gxccman.c)
	- Nibble-swapped alpha values could be displaced in memory by one
pixel, damaging the output.  (gdevabuf.c)

Makes further changes towards adding high-level bitmap image calls to the
driver API.  This includes the following minor NON-BACKWARD-COMPATIBLE
changes to the interface defined in gsimage.h:

	- changing MultipleDataSources from a member of the gs_image_t
	structure to an argument of gs_image_init;

	- changing the default image parameter values from constant
	structures to procedures that initialize the structure.

As far as we know, this doesn't affect any existing client code.
(gsimage.h, gsiparam.h, gxdevice.h, gdevddrw.c, gdevnfwd.c, gsimage.c,
gspcolor.c, gxccache.c)

Removes an unnecessary level of call for path filling.  (gxpaint.h,
gxfill.c, gxpaint.c)

Version 3.66(limited) (4/8/96)
=====================

This release adds support for TrueType fonts and Type 42 (encapsulated
TrueType) PostScript fonts.  The MS Windows driver now interacts properly
with the garbage collector.  This release also includes a new, high-quality
set of free fonts.

Documentation
-------------

Fixes bugs:
	- The list of generic makefiles had gotten out of date.  (make.doc)

Adds a mention of the bmv program, created by a user and available under the
GPL.  (README)

Notes that a bug in gcc 2.7.x prevents these versions from compiling
Ghostscript.  (make.doc)

Clarifies the meaning of "inverted" masks.  (gsimage.h)

Improves the documentation of the stack sizing parameters.  (interp.c)

Improves the documentation of the copy_rop driver procedure.
(drivers.doc)

Notes that all subclasses of gx_device must explicitly include the
device_finalize finalization procedure.  (gxdevice.h)

Updates the documentation of the high-level driver API to reflect the change
in gx_drawing_color, and the addition of the new polygon and image drawing
procedures.  (drivers.doc)

Updates the documentation for building zlib and libpng.  (make.doc)

Procedures
----------

Fixes bugs:
	- The environment space overflowed on some inferior Unix systems.
(unixtail.mak)

Adds a ttfont.dev "feature" for including the TrueType interpreter and the
ability to handle Type 42 fonts.  A new procedure, .loadttfont, allows
loading a TrueType font directly (by converting it to a Type 42 on the fly).
(gs.mak, int.mak, lib.mak)

Updates the makefiles and procedures to libpng 0.88 and zlib 1.0.
(libpng.mak, zlib.mak)

Utilities
---------

Fixes bugs:
	- pdf2ps could produce lines longer than 255 characters.
(pdf_2ps.ps)

Removes some unnecessary and error-inviting code from pdf2dsc.  (pdf2dsc.ps)

Updates lines.ps to test the new stroke code more fully.  (lines.ps)

Allows omitting the second argument of ps2pdf, as for ps2epsi.  (ps2pdf)

Drivers
-------

Fixes bugs:
	- A routine was incorrectly declared "private".  (I wish gcc caught
this!)  (gdevpdf.c)
	- A 'const' was omitted in a parameter list.  (gdevpdfp.c)
	- Some imported procedures didn't have prototypes declared.
(gdevpdft.c)
	- The ProcSet list for PDF files didn't include Text when it was
needed.  (gdevpdfx.h, gdevpdf.c, gdevpdft.c)
	- Text in PDF output ignored the color setting.  (gs_pdfwr.ps,
gdevpdft.c)
	- Text in PDF output could be positioned incorrectly.  (gdevpdft.c)
	- pdfmarks could produce an error when producing PDF output.
(gs_pdfwr.ps)

Slightly improves the text output of the PDF writer.  (gs_pdfwr.ps,
gdevpdft.c)

Defines driver procedures for filling trapezoids (with the parallel edges
parallel to a coordinate axis), parallelograms (with arbitrary orientation),
triangles (ditto), and minimum-width lines (ditto).  (Note that the last of
these obsoletes the former draw_line procedure.)  (gdevmem.h, gdevprn.h,
gxdevice.h, gxdraw.h (deleted), gdevddrw.c, gdevdflt.c, gdevht.c,
gdevnfwd.c, gsimage[12345].c, gxacpath.c, gxclist.c, gxclip2.c, gxcpath.c,
gxdraw.c (deleted), gxfill.c, gxpcmap.c, gxstroke.c)

Adds "sketched" driver procedures for high-level bitmap / pixmap image
drawing.  In this release, the argument lists are incomplete, and the
procedures are stubs: don't try to use them!  [see previous entry]

Changes the screen update strategy for the X Windows driver from a
compile-time option to a settable run-time variable.  (gdevx.c)

Patches around a problem with libpng 0.88 that can't be fixed without
editing a configuration file.  (gdevpng.c)

Platforms
---------

Fixes bugs:
	- %g formats with sscanf don't work on NeXT systems.  (gdevpdft.c,
iutil.c, zdouble.c)
	- getenv could be declared inconsistently.  (gp_unix.c)

Fonts
-----

Fixes bugs:
	- The Type 1 font interpreter sometimes set the flatness too large.
(gstype1.c)
	- Fonts defined by definefont could never be garbage collected.
(gsstruct.h, gxfcache.h, gxfont.h, gxfont0.h, gxfont1.h, gsfont.c,
gsfont0.c)
	- Type 0 fonts weren't garbage collected properly.  (gsfont0.c)
	- Compiled fonts caused a compilation error (bug introduced in
3.65).  (ifont.h)
	- If a Type 1 font used hint replacement, hints could be applied
more than once, distorting the character shape.  (gxtype1.h, gxhint3.c)
	- Oversampling wasn't applied to large enough characters.
(gschar.c)

Interpreter
-----------

Fixes bugs:
	- The scanner accepted /[, /], /<<, and />> as literal names (and
similarly for //).  It isn't obvious from the Red Book, but the Adobe
implementations don't accept these.  What a nuisance!  (gs_btokn.ps,
gs_init.ps, pdf_2ps.ps, pdf_base.ps, pdf_main.ps, iscan.c)
	- A spurious stackoverflow could occur under unusual conditions.
(istack.c)
	- The values of OrigFont and ScaleMatrix in scaled fonts reflected
only the most recent scaling operation, not the original font and the
combined scaling operation.  (zfont.c)
	- The default size of systemdict had become slightly too small.
(iinit.c)
	- Type 1 characters defined by PostScript procedures were called
incorrectly.  (zcharout.c)

Removes the papersize operator from statusdict, since it is not documented
anywhere in the Adobe literature and didn't interact properly with the
various ways of setting the page size.  (gs_statd.ps)

Changes the one client of sskip to match the changed API.  (zpaint.c)

Changes clients to reflect the creation of sstring.h.  (iscan.h, zfilter.c)

Adds PSStringEncode as an accessible filter.  (zfilter.c)

Adds support for TrueType and Type 42 fonts.  (gs_fonts.ps, gs_ttf.ps,
gs_typ42.ps, bfont.h, icharout.h, ifont.h, zchar1.c, zchar42.c, zcharout.c,
zfont1.c, zfont2.c, zfont42.c)

Adds a few ANSI sheet sizes (commented out, for documentation only).
(gs_statd.ps)

Interpreter (PDF)
-----------------

Fixes bugs:
	- Clients who called pdfopen/close rather than runpdf could get an
error (PSLevel1 undefined).  (pdf_main.ps)
	- Some masked images were displayed with black and white inverted.
(gs_pdf.ps)
	- In Level 1 output produced by pdf2ps, images caused a syntaxerror.
(gs_pdf.ps)
	- If a PDF file had multiple xref sections and later sections added
new objects, an error occurred.  (pdf_main.ps)
	- Some very old Level 1 interpreters couldn't deal with a file
object embedded in a procedure.  (gs_pdf.ps)

Streams
-------

Fixes bugs:
	- The PSStringEncode filter didn't always produce printable 7-bit
output.  (sstring.c)
	- The CCITTFaxDecode filter didn't implement DamagedRowsBeforeError.
(scfx.h, scfd.c)
	- Interpolated images displayed nothing if the data stream ended
before the image height was reached.  (siscale.h, gsimage5.c, siscale.c)

Changes the sskip stream procedure so that it takes an additional argument
where it returns the actual number of bytes skipped.  THIS IS A
NON-BACKWARD-COMPATIBLE CHANGE in the API.  However, as far as we know,
there are no external clients of this procedure.  (stream.h, stream.c)

Splits up sfilter.h so that the headers correspond more directly with the
implementations.  (sfilter.h, sstring.h, sstring.c)

Library
-------

Fixes bugs:
	- The default device in the library configuration was device 1, not
device 0.  (bclib.mak, ugcclib.mak, watclib.mak, gslib.c)
	- Patterns could be rendered with small gaps between them.
(gspcolor.c)
	- Large characters could render inaccurately because of a numerical
boundary condition.  (gxpcopy.c)
	- The show_gstate pointer in the graphics state was not managed
properly, possibly leading to dangling pointers or GC errors.  (gsstate.c)
	- Bitmaps could get shifted to the left if ALPHA_LSB_FIRST was
selected (bug introduced in 3.53).  (gsbitops.c)
	- The garbage collector could move devices in memory, causing
problems with command list devices.  (gxdevice.h, gsdevice.c)

Continues restructuring the image handling code in preparation for adding a
high-level driver operation.  (gsimage[12345].c)

Starts to implement passing color mapping information (transfer function,
black generation, undercolor removal, CRD, halftoning) in the band list.
(gxfmap.h, gscolor.c, gscolor1.c, gsht1.c, gsstate.c)

Speeds up the path filling code a little more.  (gxdraw.c)

Removes the workaround for the gcc 2.7.0/1/2 optimizer bug, since this
turned out to cause more trouble than it was worth.  (stdpre.h)

Speeds up stroking dramatically for the case of butt or square caps, bevel
or beveled miter joins, and no fill adjustment, by filling parallelograms
and triangles directly rather than constructing and filling paths.  This is
an important common case for CAD drawings.  (gxdraw.h, gxdraw.c, gxstroke.c)

Adds support for TrueType and Type 42 fonts.  (gxfont.h, gxfont42.h,
gstype42.c)

Extends the memory manager to allow allocating objects that the garbage
collector won't move.  THIS IS A NON-BACKWARD-COMPATIBLE CHANGE for
implementors of memory managers, but clients aren't supposed to have any of
these.  (gsmemory.h, gsmemory.c, gsalloc.c)

Makes dynamically created instances of registered devices immovable.
(gsdevice.c)

Unifies gx_drawing_color with (makes it equivalent to) gx_device_color.
THIS IS A NON-BACKWARD-COMPATIBLE CHANGE for implementors of the
higher-level driver procedures (fill_path, stroke_path, fill_mask).  We
regret that this was necessary, but the documentation in drivers.doc does
warn the reader: "DO NOT ASSUME THESE OPERATIONS WILL REMAIN UNCHANGED IN
FUTURE RELEASES."  These three procedures, at least, should now be stable.
(gsdcolor.h, gxcindex.h, gxdcolor.h, gxdevice.h, gximage.h, gxpaint.h,
gxpcolor.h, gdevdflt.c, gdevpdf.c, gdevpdfi.c, gdevxalt.c, gsimage.c,
gsimage2.c, gspcolor.c, gxacpath.c, gxccache.c, gxcht.c, gxclpath.c,
gxclread.c, gxdcconv.c, gxdither.c, gxfill.c, gxdraw.c, gxht.c, gxpaint.c,
gxpcmap.c, gxstroke.c)

Version 3.65(limited) (3/9/96)
=====================

This release adds garbage collection for device instances.  ****** NOTE:
Because of changes in memory management, if you are using the MS Windows
driver (mswin), you must run with -dNOGC.  This is a temporary problem which
will be fixed before the next beta release.

Documentation
-------------

Documents the C API equivalent of a -d switch for setting a flag like
NOPAUSE.  (imain.h)

Splits off the NEWS entries for versions 3.0 through 3.33 into a new
file.  (history3.doc)

Adds a man page for ps2pdf.  (ps2pdf.1)

Documents the new memory management aspects of device drivers, and corrects
many other aspects of driver documentation that had become inaccurate.
(drivers.doc)

Updates the documentation for the gs_*.ps files.  (psfiles.doc)

Replaces .type1addpath with .type1execchar.  (language.doc)

Adds some more documentation on how band lists do read/write switching.
(gxclist.h)

Adds a reference to the new Genscript program, a free Ghostscript-based
replacement for enscript.  (README)

Notes that no further changes will be accepted for the gdevcdj.c file, which
has gotten completely out of hand.  (gdevcdj.c).

Documents the TextAlphaBits and GraphicsAlphaBits device parameters.
(language.doc)

Procedures
----------

Fixes bugs:
	- gs_pdfwr.ps and pdf2ps.1 weren't installed on Unix systems.
(unix-end.mak)
	- The pdf2ps shell script didn't accept any options.  (pdf2ps)
	- The rule for srle.$(OBJ) incorrectly specified a dependency on
srld.c.  (lib.mak)
	- The rule for command lists didn't include stream.$(OBJ).
(lib.mak)
	- The stack size for one configuration was set too small.
(watclib.mak)

Speeds up genconf by eliminating redundant file reading and processing.
(genconf.c)

Moves the pixel-difference filters from int.mak to lib.mak.  (int.mak,
lib.mak)

Moves the library parts of the HSB color and Level 1 path (arcs, pathbbox,
path enumeration) options from int.mak to lib.mak, and adds them to the
library makefiles.  (int.mak, lib.mak; bclib.mak. ugcclib.mak, watclib.mak)

Utilities
---------

Fixes bugs:
	- pdf2ps would fail if it encountered a font with a standard
encoding.  (pdf_2ps.ps)

Adds new switches to pdf2ps:
	-dPSBinaryOK allows writing binary image data in the output.
(pdf_2ps.ps)
	-dPSLevel1 forces Level 1 compatible output.  (int.mak,
unix-end.mak, gs_l2img.ps, gs_pdf.ps, pdf_2ps.ps, pdf_main.ps)
	-dPSNoProcSet causes the ProcSet to be loaded at run time, not at
conversion time -- primarily useful for debugging.  (pdf_2ps.ps)

Adds a utility for viewing PCX files, so we can preview high-resolution
output in a reasonable compressed format.  (unix-end.mak, viewpcx.ps)

Drivers
-------

Fixes bugs:
	- Some compilers require an extra #include to define structures even
if they are only referenced by pointers.  (int.mak, gdevpdf.c, gdevpdfp.c)
	- A procedure name was duplicated.  (gdevpdfi.c)
	- A pdfmark between a gsave and a grestore could cause a
rangecheck error.  (gdevpdfp.c)
	- A pdfmark between a gsave and a grestore could cause the
grestore to do an inappropriate initgraphics.  (gs_pdfwr.ps)
	- The pdfwrite driver could reinitialize the output file
unpredictably.  (gdevpdfp.c)
	- The PCX drivers didn't clear padding bytes at the ends of scan
lines.  (gdevpcx.c)
	- The PCX drivers didn't set the "version" field correctly (this was
OK in 2.6.1, bug introduced sometime since then).  (gdevpcx.c)
	- Whoever last touched the color inkjet drivers completely broke the
handling of the BitsPerPixel parameter, again.  We were able to half-fix it,
but the code is impossible to understand, let alone modify safely.
(gdevcdj.c)
	- Anti-aliased characters didn't work with banding.  (gxclpath.c)
	- The PGM/PPM drivers didn't recognize black-and-white pages for
optimization to PBM, only gray or colored.  (gdevpbm.c)
	- The color inkjet drivers initialized the params_size field of the
static instance incorrectly, resulting in garbage in the last few structure
members when instances were copied.  (gdevcdj.c)
	- The 24-bit PCX driver didn't pad each scan line to an even number
of bytes.  (gdevpcx.c)
	- The svga16 driver initialized its procedures incorrectly.
(gdevpcfb.c)

Adds text writing capability to the PDF writer.  In its present form, this
is a very bad hack: it only works for the 14 built-in fonts with their
standard encodings.  (gdevpdfx.h, gdevpdf.c, gdevpdfp.c, gdevpdft.c)

Adds garbage collection and finalization for device instances (gscdefs.h,
gsdevice.h, gxdevice.h, gconf.c, gdevmrop.c, gsdevice.c, gslib.c, gsmain.c).
(See the "Driver instance allocation" section of drivers.doc for more
details about what is required to make this work.)

	- When an open device is freed (explicitly, by garbage collection,
or by 'restore'), if the device was allocated dynamically by Ghostscript's
standard allocator, the device's close procedure will be called.  THIS IS A
NON-BACKWARD-COMPATIBLE CHANGE for dynamically created devices, which
formerly were not closed automatically, even when Ghostscript exited.

	- Device instances allocated in GC-able space will be traced
like other objects, assuming they have proper structure descriptors.

Provides a (very slow but correct) default implementation of copy_alpha.
(gxcindex.h, gdevdflt.c, gsimage4.c)

Removes the implementation of copy_alpha in gdevpbm.c, since this is now
implemented (more efficiently) in gdevm24.c.  (gdevpbm.c)

Adds TextAlphaBits and GraphicsAlphaBits as readable parameters for all
devices.  (gsdparam.c, gdevpbm.c, gdevsvga.c)

Platforms
---------

Fixes bugs:
	- There were some attempts to coerce long to short pointers
on segmented platforms.  (gsdparam.c, gstype1.c)
	- The stack could overflow on the 16-bit MS Windows platform.
(gxfill.c, gxclread.c)
	- The DLL callback parameter for window resize events was computed
incorrectly on 16-bit systems.  (gdevwdib.c)
	- A file included gxdevice.h unnecessarily.  (bcwin.mak,
bcwin32.mak, msvcwint.mak, gp_mswin.c)

Interpreter
-----------

Fixes bugs:
	- Storing into a read-only dictionary with def or store was
allowed.  (dstack.h)
	- If the interpreter allocated extra space for a dictionary
to round its storage size up to a power of 2, it was possible for
length to exceed maxlength.  (idict.c, iinit.c)
	- The if and ifelse operators didn't check that their
'procedure' arguments were actually procedures.  (interp.c, zcontrol.c)
	- The undef operator was defined even in Level 1
configurations.  (We need this capability for all configurations, so
we always define .undef.)  (zdict.c, gs_*.ps, pdf_*.ps)
	- In Level 1 configurations, copying a dictionary should copy the
access attributes, but it didn't.  We have to work around this
compatibility quirk in a lot of places.  (gs_cidfn.ps, gs_cmap.ps,
gs_dps1.ps, gs_fonts.ps, gs_init.ps, gs_l2img.ps, gs_lev2.ps, gs_pdf.ps,
gs_pfile.ps, gs_res.ps, gs_setpd.ps, gs_type1.ps, zdict.c)
	- DSC comments that crossed a buffer boundary didn't call the
scan_dsc_proc.  (iscan.c)
	- "statusdict /setpage get exec" caused an error.  (gs_statd.ps)
	- The default size of systemdict had become slightly too small.
(iinit.c)
	- Doing a showpage or copypage would cause the equivalent of a
setpagedevice at the next restore or grestore.  We aren't entirely sure that
the fix we made doesn't have bad side-effects.  (gs_setpd.ps)
	- Not all filters accepted (and ignored) an optional dictionary
parameter on the stack.  (ifilter.h, zfbcp.c, zfdecode.c, zfilter.c,
zfilterx.c, zfzlib.c, zmisc1.c)
	- The PixelDifference filters required a Columns parameter, rather
than defaulting it to 1.  (spdiffx.h, zfdecode.c)
	- Contrary to the NEWS entry for release 3.60, the LZW filters did
not implement pixel differencing.  (zfdecode.c, zfilter2.c)
	- readstring with a 0-length string didn't signal a rangecheck.
This doesn't make a lot of sense to me, but it's what the Adobe
documentation specifies.  Unfortunately, we have to work around this in a
number of places that assumed the sensible definition (return () true
without reading anything).  (gs_l2img.ps, pdf_font.ps, zfileio.c)
	- Encoded number strings didn't work (bug introduced in 3.64).
(ibnum.c)
	- The allocator could produce spurious "free large 0x...... chunk
not found" messages.  (These didn't cause any harm, but they were
disturbing.)  (gsalloc.c)

Changes the default transfer function for high-resolution devices so
that it is the identity function if the device is continuous-tone.
(gs_init.ps)

Undoes the "subversion" of zgetdevice noted in release 3.61, since it
is now possible to copy devices safely.  (zdevice.c)

Changes the implementation of the garbage collector and restore so that
object finalization code may safely free objects.  (igc.c, isave.c)

Reimplements essentially all of Type 1 BuildChar in C.  (gs_init.ps,
gs_type0.ps (deleted), gs_type1.ps, ifont.h, zchar.c, zchar1.c, zfont.c)

Reimplements DISKFONTS as a separate feature (diskfont.dev), and changes it
to use Type 4 fonts rather than special machinery.  Currently this feature
is included only in the makefiles for 16-bit architectures.  (bc.mak,
bcwin.mak, int.mak, tc.mak, gs_diskf.ps, gs_fonts.ps, gs_type1.ps)

Converts the library search path from a list of strings to a (PostScript)
array of strings, one string per directory.  (iminst.h, main.h, gs.c,
gsmain.c, zfile.c)

Adds a hook procedure scan_comment_proc for processing all comments,
similar to scan_dsc_proc.  If both are set, scan_comment_proc is used only
for non-DSC comments.  (iscan.h, iscan.c)

Interpreter (PDF)
-----------------

Fixes bugs:
	- Encrypted PDF files produced a random error (usually ioerror in
--token--) rather than a meaningful message.  (pdf_main.ps)
	- Color space setting didn't work.  (gs_pdf.ps)
	- The algorithm for skipping a possible blank line following the
'stream' keyword wasn't robust enough.  (We aren't sure the new algorithm is
exactly right, either.)  (pdf_base.ps)

Gets rid of the special handling of the LZW decoding filter, since the
filter itself now handles the Predictor facility.  (pdf_base.ps)

Streams
-------

Fixes bugs:
	- Configurations with LZW encoding but not decoding had an
undefined reference.  (lib.mak, slzwc.c, slzwd.c)
	- The LZW-compatible encoder didn't provide a 'reset' procedure.
(slzwce.c)
	- The PixelDifference filters didn't work for most parameter
combinations in which each pixel took up more than 1 byte.  (spdiff.c)
	- Temporary write streams could cause an infinite loop.  (We only
need such streams for the Predictor = 2 case of LZWEncode: this is why the
bug never showed up before.)  (stream.c)

Adds an optional reinitialization procedure to the stream template.  Note
that this is not the same as the PostScript 'reset' operation or the stream
resetting operation invoked by sreset: the reinit procedure in the template
reinitializes any internal state of the encoder or decoder without affecting
buffered data.  (scommon.h, strimpl.h, sbcp.c, sbhc.c, slzwce.c, slzwd.c,
slzwe.c, smtf.c, spdiff.c, srle.c) ****** NOT DONE YET: sbwbs.c, szlibd.c,
szlibe.c

Adds a decoding stream for the run-length compression used in PCX.
(spcxx.h, spcxd.c)

Library
-------

Fixes bugs:
	- A recent edit introduced an extraneous right parenthesis.
(gpcheck.h)
	- A minor nit in a macro could cause incorrect grouping of 'if'
statements under implausible conditions.  (gsmdebug.h)
	- The first data plane buffer of an image enumerator didn't get
marked during garbage collection.  (gsimage.c)
	- The Watcom C compiler required splitting up a declaration.
(gxcmap.h)
	- The extern declarations for the tables in gconf.c weren't gathered
together in one place.  (gscdefs.h, gxiodev.h, gconf.c, gsdevice.c, gslib.c,
gsinit.c, gsiodev.c)
	- charpath and show produced different output.  We fixed this by
undoing a "bug fix", introduced in version 2.9, which suppressed hinting and
coordinate rounding for charpath; we aren't sure this won't cause some
obscure problems to reappear.  (gstype1.c)
	- Clipping with a rectangle usually created a 3-rectangle clipping
list, slowing down all drawing operations (performance bug only).
(gxacpath.c)
	- stroking in a rotated coordinate system sometimes thought lines
were always thin when they actually weren't.  (gxstroke.c)
	- An unsigned quantity wasn't properly converted to signed, possibly
causing band path coordinates to get mangled.  (gxclread.c)
	- A bug in the Borland compiler caused an unsigned quantity to be
interpreted as signed, causing band path coordinates to get mangled.
(gxclread.c)

Changes structure type pointers on 16-bit segmented systems to full
32-bit pointers.  This will increase time and space requirements very
slightly on these systems.  (gsmemory.h, gxobj.h)

Changes the memory manager so that object finalization code may safely free
objects.  (gsmemory.h, gsstruct.h, gsalloc.c, gsmemory.c)

Refactors the Type 1 CharString interpreter so it can be included in
the imager library.  (gstype1.h, gxtype1.h, gstype1.c)

Starts to refactor the implementation of band lists in memory so that it can
use any encoding/decoding filter.  Currently this choice is made at compile
time, but it could easily be made dynamic.  (gxclmem.h, gxclmem.c)

Starts to refactor image rendering so that, like path filling and stroking,
it only uses imager state and can be done after banding.  (gxcmap.h,
gxdraw.h, gximage.h, gsimage*.c, gxcmap.c)

Speeds up copy_mono for 2-bit-per-pixel devices a little.  (gdevm2.c)

Implements an optimized copy_alpha for 24-bit memory devices.  (gdevmem.h,
gdevm24.c)

Speeds up filling rectangles significantly.  (gsbitops.c)

Changes the band list rasterizer to use the memory space of the device
rather than the C heap: our allocator is considerably faster than malloc.
(gxclread.c)

Speeds up stroking a little, especially in 90 degree rotated coordinate
systems.  (gxstroke.c)

Version 3.64(limited, incremental) (1/27/96)
==================================

This release fixes a few more bugs, including some serious bugs in band
lists, and adds pdfmark processing to the PDF writer.  The PDF writer is
still not fit for real use, since it converts all text characters into 720
dpi bitmaps and turns images into zillions of tiny rectangles (!), but it
should be producing legal output.

Documentation
-------------

Fixes bugs:
	- Frans van Hoesel's e-mail address was incorrect.  (gdevdjet.c)
	- The man page for ansi2knr was out of date.  (ansi2knr.1)
	- The description of a procedure was out of date.  (gxdcolor.h)

Notes that several "optional" features are required in order to obtain the
full PostScript Level 1 functionality at the library level.  (lib.doc)

Documents the top-level interpreter API.  (imain.h)

Adds details on differences between the imager API and the PostScript
graphics operators.  (lib.doc)

Notes (here, in NEWS) that the change for device prototypes in 3.61 made the
protection attributes of a device significant for the first time.  Only the
writable attribute is significant so far.  (news)

Procedures
----------

Fixes bugs:
	- The .dev rules in the library makefiles didn't list echogs as a
dependency.  (jpeg.mak, libpng.mak, zlib.mak)
	- The install rule tried to install gs.1.1 etc. rather than gs.1
etc.  (unix-end.mak)
	- The install rule tried to install some nonexistent *.1 files.
(unix-end.mak)

Adds 'help' and '?' procedures to assist users who don't read the
documentation.  (gs_init.ps)

Adds -A-, -E-, and -Z-... to turn off debugging flags.  (gs.c)

Adds a -dDELAYBIND switch to delay binding operators, to allow special
packages like pstotext to redefine them.  (gs_init.ps)

Utilities
---------

Fixes bugs:
	- Fonts produced by rollconv.ps left a couple of items on the
operand stack, and left array packing set to true.  (rollconv.ps)

Makes ansi2knr require that the first token after a function header be a
left brace on the next line, so it can cope with some macros in IJG release
6a.  Also updates it to work better without the GNU configure machinery, and
on some old compilers.  (ansi2knr.c)

Changes align.ps so it can be used directly to determine the margin
parameters.  (align.ps, psfiles.doc)

Drivers
-------

Fixes bugs:
	- The TIFF/F (G3 and G4) drivers were broken (bug introduced in
3.60).  (gdevtfax.c)
	- The PDF writer produced invalid output for 0-width, 0-height
images.  (gdevpdfi.c)
	- The PDF writer wasn't a page device.  (gdevpdf.c)
	- The PDF writer assigned the Contents node rather than the Pages
node as the Parent of each page.  (gdevpdfx.h, gdevpdf.c)

Corrects the margin information for the DeskJet printers to be the actual
values observed on a printer; all of the values in the file were wrong.
(gdevdjet.c)

Adds pdfmark recognition and conversion to the PDF writer.  All documented
pdfmarks (ANN, ARTICLE, DEST, DOCINFO, DOCVIEW, LNK, OUT, PAGE, PAGES, PS)
are recognized and converted, but some of them are not converted correctly.
(gs_pdfwr.ps, gdevpdfx.h, gdevpdf.c, gdevpdfm.c)

Adds recognition of all Distiller parameters, except *ImageDict, to the PDF
writer.  Currently only ASCII85EncodePages actually has any effect.
(gs_pdfwr.ps, gdevpdfx.h, gdevpdfp.c)

Ensures that PDF output files include at least a default Info dictionary.
(gdevpdf.c)

Changes the handling of coordinates in PDF output files so that the scale is
always 72 dpi, and so that each graphics operator is on a line by itself,
for compatibility with Adobe Illustrator.  (gdevpdfx.h, gdevpdf*.c)

Adds a driver for ImageMagick's MIFF format.  The driver currently only
produces 24-bit, direct color, RLE compressed output.  (gdevmiff.c)

Platforms
---------

Changes the gp_check_interrupts platform procedure so that instead of just
returning a Boolean, it can now also return a negative error code.  THIS IS
(THEORETICALLY) A NON-BACKWARD-COMPATIBLE CHANGE.  However, since all
implementations of this procedure should only have been returning 0 or 1 up
to now, no existing code should need to be changed.  (gpcheck.h, gsmisc.c)

Interpreter
-----------

Fixes bugs:
	- devicenames was accidentally deleted.  (gs_init.ps)
	- -dFAKEFONTS could cause the memory manager to waste a lot of time.
(gs_dps1.ps)
	- Using -r or -dFIXEDMEDIA with a non-page device caused an error.
(gs_init.ps)
	- A VMS compiler reserves the word "readonly", which was used as a
parameter name.  (imain.h, gsmain.c)
	- A garbage collection during the execution of x/y/xyshow with an
array providing the values could get confused.  (ibnum.h, ichar.h, stream.h,
ibnum.c, iscanbin.c, zchar.c, zchar2.c, zdps1.c, zupath.c)
	- Errors in encoded number strings produced a typecheck rather than
a rangecheck error.  (ibnum.c, zupath.c)

Updates the DCT filters for IJG release 6a.  (zfdctc.c)

Provides an API call for getting the real stdio files.  (imain.h,
gs.c, gsmain.c)

Streams
-------

Fixes bugs:
	- If the CCITTFaxEncode stream encountered an output buffer boundary
while processing the last scan line of input, it could fail to process some
the scan line.  (scfe.c)
	- A couple of pointers weren't always initialized, possibly
confusing the garbage collector.  (stream.c)
	- The weighting coefficient structures used for image scaling
weren't declared properly for the garbage collector.  (siscale.h, siscale.c)

Library
-------

Fixes bugs:
	- Unrotated patterns always used the bounding box size as the step,
rather than XStep/YStep.  (gspcolor.c)
	- Alpha computations for graphics could be seriously incorrect (bug
introduced in 3.6x).  (gdevabuf.c)
	- The length of the next_data_x command for the fill_mask operation
was incorrect, causing the band list to become confused (bug introduced in
3.63).  (gxclpath.c)
	- An extern was omitted, causing linker warnings.  (gxdevice.h)
	- RasterOps could cause an invalid access because the palette
for a memory device wasn't set.  (gdevmrop.c)
	- gximage.h was included unnecessarily.  (gspaint.c)
	- Color screens caused a segmentation fault (bug introduced in
3.6x).  (gxcht.c)
	- cshow returned the width in an incorrect coordinate system.
(gscoord.h, gschar.c)
	- Filling or stroking a path that lay entirely off the page in the
+X or +Y direction could corrupt memory (bug introduced in 3.6x).
(gxclpath.c)
	- When banding, painting characters with halftones produced random
results (bug introduced in 3.6x).  (gxclpath.c)
	- When banding, characters could get clipped when they shouldn't be
(bug introduced in 3.6x).  (gxclpath.c)
	- The default implementation of fill_mask could discard clipped
bitmaps (bug introduced in 3.6x).  (gdevdflt.c)
	- Non-halftoned 24-bit colors could get garbled when banding (bug
introduced in 3.6x).  (gxclist.c)
	- When banding, if a stroked path had subpaths that fell entirely
outside the current band, the rest of the path was drawn in the wrong place
(bug introduced in 3.6x).  (gxclpath.c)

Speeds up image interpolation on machines with slow floating point.
(siscale.h, siscale.c)

Speeds up interpolated images when using device color spaces.  (gxcvalue.h,
gxfrac.h, gdevht.c, gxcmap.c, gsimage.c, gsimage3.c)

Speeds up color mapping a little by removing tests and calls in favor of
code copying.  (gxcmap.c)

Implements RasterOp for 24-bit RGB devices.  (gdevm8.c, gdevm24.c,
gdevmrop.c)

Version 3.63(limited, incremental) (1/14/96)
==================================

This release has the usual collection of bug fixes, and two significant
additions: AccurateScreens, and the first draft of a PostScript->PDF
converter ("distiller").

Documentation
-------------

Fixes bugs:
	- Some documentation for pstoppm.ps was out of date.  (psfiles.doc)
	- Documentation for acctest.ps, view*.ps, and zeroline.ps was
missing.  (psfiles.doc)
	- The documentation for rollconv.ps omitted the .CSR file.
(rollconv.ps)

Removes an inappropriate RCS Id line.  (gs.1)

Adds a list of paper sizes to the man page.  (gs.1)

Suggests that driver authors use parameterization rather than copying when
possible.  (drivers.doc)

Adds an announcement of Ghostscript support on CompuServe.  (README)

Documents the new -dCOLORSCREEN switch and the existing -dDITHERPPI=lpi
switch.  (use.doc)

Notes that the OS/2 implementation now requires EMX/GCC 0.9b rather than
0.9a.  (install.doc)

Adds some new man pages.  (pdf2ps.1, ps2ascii.1)

Greatly expands lib.doc.  (lib.doc)

Procedures
----------

Fixes bugs:
	- The pg target for Unix platforms didn't include some necessary
additional X11 libraries.  (unix-end.mak)
	- The Unix library makefile didn't define CCAUX or CCLEAF.
(ugcclib.mak)
	- Unix systems didn't `install' some .ps files.  (unix-end.mak)

Extends genconf so that features at the library level can have
initialization procedures.  (gconf.c, genconf.c, gsinit.c)

Adds a -dCOLORSCREEN[=false] switch to force enabling or disabling of
4-color screens.  (gs_init.ps, gs_setpd.ps)

Utilities
---------

Fixes bugs:
	- The prfont utility didn't leave enough of a margin on the left.
(prfont.ps)
	- The ps2ascii utility still created files _temp_.out and _temp_.err
even though they are no longer used.  (ps2ascii.ps)
	- The acctest.ps file was empty, rather than including a test
program.  (acctest.ps)

Adds ps2pdf[.bat] scripts for invoking the new pdfwrite driver.  (ps2pdf,
ps2pdf.bat, unix-end.mak)

Drivers
-------

Fixes bugs:
	- The x11alpha driver had a patch that suppressed output in many
cases.  (gdevxalt.c)
	- The X driver set up a parameter incorrectly in copy_color.
(gdevx.c)
	- An explicit cast was needed to handle a 'const' problem.
(gdevpng.c)

Adds a pdfwrite driver that creates syntactically correct PDF output.  The
output is only reasonable for fill/stroke graphics, not for text or images.
(iscan.h, sa85x.h, sfilter.h, gdevpdf.c, sfilter2.c, zfdecode.c)

Platforms
---------

Fixes bugs:
	- The test for WinExec failure on Win32 was incorrect.  (gp_mswin.c)
	- getenv was declared redundantly on OS/2.  (gp_os2.c)
	- gs16spl.c was missing <string.h>.  (gs16spl.c)

Interpreter
-----------

Fixes bugs:
	- Images read data in smaller and smaller increments (performance
bug only).  (zpaint.c)
	- Images with MultipleDataSources=true and two or more DataSources
referencing the same stream could get confused.  (zpaint.c)
	- Invoking setpagedevice with an undefined key, even with Policy =
1, caused an error.  (gs_setpd.ps)
	- IEEE floats in binary tokens or encoded number strings were read
incorrectly on CPUs that use non-IEEE floating point.  (ibnum.c)

Adds a 'const' to the second parameter of zimage_setup.  (zimage2.c,
zpaint.c)

Encapsulates the filling of free memory blocks in a macro.  (igc.c,
igcstr.c)

Interpreter (PDF)
-----------------

Fixes bugs:
	- If the first line of a file began with % but the line was longer
than 255 characters, an error occurred.  (pdf_main.ps)
	- Masked images didn't set the color before drawing.  (gs_pdf.ps)
	- Extraneous blank lines in the trailer or cross-reference region
caused an error.  (pdf_base.ps, pdf_main.ps)

Streams
-------

Speeds up image interpolation a little.  Much more could be still be done.
(siscale.c)

Library
-------

Fixes bugs:
	- An error in handling a boundary condition could cause a horizontal
streak of pixels to be turned on or off when it shouldn't be.  (gxfill.c)
	- The new scan-line-based filling loop could write pixels twice.
(The old trapezoid-based loop still does write pixels twice.)  (gxfill.c)
	- For multi-plane images, gs_image_next only sets *pused for the
last plane; this wasn't documented.  (gsimage.h)
	- Images with MultipleDataSources=true and two or more DataSources
referencing the same stream could get confused.  (gsimage.h, gsimage0.c)
	- 12-bit gray images caused an invalid memory access.  (gsimage.c)
	- Nearly-zero-thickness lines didn't get filled, because the hack
that compensates for this peculiarity of the MS Windows PostScript driver
accidentally got disabled.  (gxfill.c)
	- Some casts to remove 'const' were omitted.  (gxclread.c)
	- 1-line-high bitmaps could get written in the band list with an
inconsistent number of bytes, causing errors when reading.  (gxcldev.h,
gxclbits.c, gxclist.c, gxclpath.c, gxclread.c)
	- Isolated dots produced by round caps usually disappeared.  (They
still disappear sometimes.)  (gxstroke.c)
	- On 16-bit platforms, the computation of t2 and t3 in
gx_curve_x_at_y could overflow, leading to incorrect output.  (gxpcopy.c)
	- Stroking horizontal or vertical lines could produce variations of
1 pixel in the line width.  (gxstroke.c)
	- The default clipping region for band rendering was too large,
leading to wasted work.  (gxclread.c)
	- Guarantees no double pixel writing when necessary, i.e., when a
non-idempotent RasterOp is selected.  (gsropt.h, gxfill.c)
	- For unrotated black-and-white images, one column of pixels at the
right edge of the image might be incorrect.  (gsimage1.c)
	- A const pointer was passed inappropriately.  (gxistate.h,
gscoord.c)
	- CIE color conversion could address 1 element beyond the end of an
array, with unpredictable results.  (gscie.c)

Separates out the higher-level band list facilities, so they can be an
optional feature.  (lib.mak, gxcldev.h, gxclpath.h, gxclbits.c, gxclist.c,
gxclpath.c, gxclread.c)

Implements bitmap (fill_mask) clipping in the band list.  (gxcldev.h,
gxclpath.h, gxclist.c, gxclpath.c, gxclread.c)

Starts to separate out the RasterOp facility as an optional feature.
(lib.mak, gxdevice.h, gxdevrop.h, gdevdflt.c, gdevmrop.c)

Encapsulates the filling of free memory blocks in a macro, at the request of
a licensee.  (gdebug.h, gsmdebug.h, gsmemory.h, gs.c, gsalloc.c, gsmemory.c,
gxbcache.c)

Speeds up fill_rectangle for 32-bit devices.  (gdevm32.c)

Speeds up path writing in band lists a little.  (gxclpath.c)

Implements AccurateScreens along the lines described in the Adobe
documentation.  The current implementation can produce very large
super-cells, so it will not always be able to actually increase the screen
accuracy.  (gxdht.h, gsht.c, gshtscr.c)

Version 3.62(limited, incremental) (12/26/95)
==================================

This release makes some licensee-requested improvements in the garbage
collector and fixes a couple of minor bugs.  It also constitutes a
checkpoint for the forthcoming forked 3.53 release.

Documentation
-------------

Notes that for Win32s, gs16spl.exe must be in the same directory as
gswin32.exe.  (install.doc)

Changes `3.N' to a real version number in the man page.  (gs.1)

Adds a reference to dos-psv, another "dumb terminal" user interface for
Ghostscript intended for MS-DOS users.  (README)

Procedures
----------

Fixes bugs:
	- The stack size for some of the PC platforms was set too small.
(watc.mak, watcwin.mak)

Changes the default value of ORIENT1 from false to true, i.e., assumes that
a value of 1 for the orientation parameter of setpageparams indicates
portrait orientation.  THIS IS A NON-BACKWARD-COMPATIBLE CHANGE.  It only
affects files created for roll-media imagesetters.  (gs_init.ps, use.doc)

Interpreter
-----------

Fixes bugs:
	- The definition of the op_index_op_array_table macro had an
incorrect trailing semicolon.  (opdef.h)
	- Setting the PageSize policy to 1 and then trying to set the page
size caused an error if FIXEDMEDIA was selected.  (gs_setpd.ps)

Changes the garbage collector marking phase so that instead of just using a
single block (allocated, free, or default) for the mark stack, it can chain
all three types of block together.  (igc.h, igc.c, igcstr.c, ilocate.c)

Refactors the garbage collector slightly to reduce inter-module
dependencies.  (int.mak, igc.h, igcstr.h, igcstr.c)

Changes the garbage collector to keep track of ranges within each chunk that
must be scanned if the mark stack overflows.  (gxalloc.h, igc.c)

Adds [write]===[only] procedures, which act like == but also print the
contents of dictionaries, and ppstack, which acts like pstack but uses ===.
Changes ESTACKPRINT and OSTACKPRINT to use === rather than ==.  (gs_init.ps,
gs_setpd.ps)

Interpreter (PDF)
-----------------

Fixes bugs:
	- If a PDF file substituted a calibrated color space for the
DeviceGray or DeviceRGB color space using a ColorSpace resource, the
PostScript file that pdf2ps produced from that PDF file caused an error.
(gs_pdf.ps)

Library
-------

Fixes bugs:
	- The debugging code for checking the sorting of line lists didn't
check for an empty list.  (gxfill.c)

Version 3.61(limited) (12/10/95)
=====================

This limited release fixes a few bugs (including a couple that significantly
affected character quality) and also includes some substantial performance
improvements.

Documentation
-------------

Fixes bugs:
	- The directory name for the PNG library was incorrect.
(libpng.mak)
	- The analysis of curve monotonocity in gxpcopy.c had an error.
(gxpcopy.c)

Changes the subdirectory names for zlib and libpng to be consistent.
(make.doc)

Documents a possible problem with object file format incompatibilities in
certain versions of Linux.  (make.doc)

Documents the new distinction between devices and device prototypes.
(language.doc)

Adds a pointer to DEC's free pstotext utility.  (README)

Procedures
----------

Fixes bugs:
	- zlib.mak omitted some files in the encoding module dependencies.
(zlib.mak)
	- os2.mak referred to png.mak rather than libpng.mak.  (os2.mak)
	- The png devices didn't include gdevpccm.$(OBJ) as a required file.
(devs.mak)
	- Some modules in lib.mak referred to stream.h, which was defined in
int.mak.  (int.mak, lib.mak)
	- Quite a few dependencies on header files were missing from the
makefiles.  (int.mak, lib.mak, *.mak)

Adds a 'pg' target to the Unix makefiles, for building profiling
configurations.  (unix-end.mak)

Utilities
---------

Fixes bugs:
	- Type 1 fonts in which some characters are defined by PostScript
procedures couldn't be compiled.  (ccfont.h, iccfont.c, font2c.ps)
	- pdf2ps didn't write Widths or Encoding in the converted file,
producing incorrect spacing and incorrect characters.  (pdf_2ps.ps)
	- markhint.ps didn't handle the Type 1 'div' operator, causing
typecheck errors.  (markhint.ps)
	- markhint.ps ignored the hstem3 and vstem3 hints.  (markhint.ps)

Changes the rollconv.ps utility to produce files whose names conform to the
8.3 length restriction, and to reduce the fixed RAM overhead for Kanji
fonts.  (rollconv.ps)

Adds a utility for detecting compiler problems that affect Ghostscript.
(bughunt.sh)

Drivers
-------

Adds anti-aliasing capability (-dTextAlphaBits and -dGraphicsAlphaBits) to
the PGM and PPM drivers.  (gdevpbm.c)

Declares the static_procs member of the device structure as const *.  This
should have been done a long time ago!  (drivers.doc, gxdevice.h)

Platforms
---------

Fixes bugs:
	- Printing didn't work in 32-bit MS Windows environments.
(bcwin32.mak, gdevmswn.c, gp_mswin.c)
	- There were some compatibility problems with IBM C.  (os2.mak,
gsdll.h, gdevpm.c, gp_os2.c)

Adds the PNG drivers to the 32-bit MS Windows and OS/2 makefiles.
(bcwin32.mak, os2.mak)

Adds a conditional to work around a bug in gcc 2.7.x (it didn't recognize
that the target of a const T * might still be mutable through aliasing).
(stdpre.h)

Fonts
-----

Fixes bugs:
	- Rasterizing a character in a Type 1 font with an invalid FontBBox
left some garbage on the operand stack (bug introduced in 3.52 or 3.60).
(gs_type1.ps)
	- The font substitution algorithm could fail or loop.  (gs_fonts.ps)

Adds a little more support for CID fonts and CMaps.  (gs_cidfn.ps,
gs_cmap.ps)

Interpreter
-----------

Fixes bugs:
	- An #include <memory_.h> was missing.  (ziodev.h)
	- Scanner-detected errors (primarily syntaxerror) didn't report the
file position.  (gs_init.ps)
	- Rotated characters were rendered incorrectly (bug introduced in
3.52).  (gstype1.c)
	- Some compilers got upset about the use of 'dict' as a variable
name.  (zdict.c)
	- Operand stack overflows sometimes didn't set the "requested" field
correctly.  (interp.c)
	- Using -dBufferSpace= with a non-printer device caused an error.
(gs_init.ps)

Adds zlibEncode/Decode filters.  (int.mak, zfzlib.c)

Separates devices from device prototypes.  Prototypes, which lack the
writable attribute, cannot be installed as the current device or have their
parameters changed.  This change allows Ghostscript to be exited and
restarted without being reloaded, which solves some problems with DLL
usage.  ****** WE HAD TO SUBVERT THIS CHANGE BECAUSE OF MEMORY MANAGER
PROBLEMS, by making zgetdevice return a writable reference to the
prototype.  (We finally fixed this in release 3.65.)  (gs_init.ps, iref.h,
opcheck.h, zdevice.c, ztype.c, zwppm.c)

Extends the client API to allow for pushing values onto the operand stack.
(imain.h, gs.c, gsmain.c)

Defines a .setdefaultscreen procedure that sets the default halftone screen,
transfer function, and stroke adjustment for the current device.  Changes
selectdevice and setpagedevice so that they call .setdefaultscreen;
setpagedevice calls .setdefaultscreen before calling the Install procedure,
so that Install can set different parameters if it wishes.  Note that
setdevice does not do this.  (gs_init.ps, gs_setpd.ps)

Interpreter (PDF)
-----------------

Fixes bugs:
	- Tf set the current text font twice, and interacted with pdf2ps in
an awkward way.  (gs_pdf.ps, pdf_2ps.ps, pdf_font.ps)
	- If a font had variant Widths, it could get confused in the cache
with the underlying font.  (pdf_font.ps)
	- If a character appeared twice in an encoding and the font
specified different Widths values for the two occurrences, the last Width
would be used.  We patched this to ignore zero Widths, which is not the
correct solution but which almost always produces correct output.
(pdf_font.ps)
	- Arrays containing nulls didn't print out correctly (bug introduced
in 3.60).  (gs_init.ps)
	- Some PDF files contain very large dictionaries, which caused a
stackoverflow.  (pdf_base.ps)

Speeds up the initial processing of PDF files by caching the map from page
numbers to page objects, and by not scanning the outlines if we aren't
producing PostScript output.  (pdf_2ps.ps, pdf_base.ps, pdf_main.ps)

Streams
-------

Adds zlibEncode/Decode filters.  (lib.mak, szlibx.h, szlibc.c, szlibd.c,
szlibe.c)

Library
-------

Fixes bugs:
	- glyphshow displayed a character with code 0 rather than the
requested character (bug introduced in 3.60.)  (gschar.c)
	- If trimming white space around a character reduced its raster, the
character was garbled in the cache (bug introduced in 3.60.)  (gxccman.c)
	- colorimage would incorrectly convert white pixels to black if the
image color space was CMYK, the current color space was not CMYK, and the
number of bits per pixel was 4 or 8.  (gsimage2.c)
	- One of the clipping tests for images was backwards (bug introduced
in 3.60).  (gsimage.c)
	- Type 1 fonts that used the Flex feature applied hints to the path
multiple times, causing dropouts, uneven stems, and other problems (bug
probably introduced in 3.21).  (gstype1.c)
	- If a Type 1 font used the Flex feature within the accent of an
accented character defined with seac, the shape of the accent could be
distorted.  (gxtype1.h, gstype1.c)
	- If a Type 1 font changed hints using the hint replacement facility
when the last operation was a closepath, the old hints would be applied a
second time, distorting the shape.  (gxhint3.c)
	- Band lists could read garbage beyond the end of data for a band,
causing unpredictable errors (bug introduced in 3.60).  (gxclread.c)
	- If the bounding box of the path for fill_path or stroke_path went
outside the device page boundary when banding, out-of-bounds memory
references occurred (bug introduced in 3.60).  (gxdevice.h, gxclpath.c)

Adds an alternative implementation of the core path filling algorithm that
is much faster on objects with curves but doesn't handle Y fattening.  This
is the implementation that will normally be used for rasterizing characters.
This implementation rasterizes curves directly, without flattening them.
(gxfixed.h, gxpath.h, gzpath.h, gsdps1.c, gxfill.c, gxpcopy.c, gxpdash.c)

Speeds up the flattening of curves substantially by omitting more redundant
points.  (gxpcopy.c)

Speeds up character bitmap compression a little more.  (gsbitops.h,
gdevabuf.c, gsbitops.c, gxccman.c)

Speeds up anti-aliased graphics a bit by computing a bounding box before
converting from oversampling to alpha values, and by speeding up the
bounding box computation itself.  (gsbitops.h, gdevabuf.c, gsbitops.c,
gxccman.c)

Version 3.60(limited) (11/20/95)
=====================

(Note: release numbers 3.54 through 3.59 were deliberately skipped.)  This
internal release includes a major redesign of band lists in order to reduce
their size for embedded implementations, to move towards supporting "vector"
output formats, and to further separate the imager library from the language
interpreters.

Documentation
-------------

Fixes bugs:
	- A comment was incorrect.  (viewpbm.ps)
	- The PixelDifference filters were not documented.  (language.doc)
	- The change from currenttime to .currenttime wasn't documented.
(language.doc)
	- gs.1 incorrectly stated that the default font directory name
included the version number.  (gs.1)
	- The -g and -r switches didn't specify that the units for their
arguments are pixels and pixels per inch respectively.  (use.doc)
	- The PageOffset page device parameter wasn't listed.
(language.doc)

Changes copy_mono and copy_color to optional procedures.  (drivers.doc)

Adds a reference to ps_view.ps, a "dumb terminal" user interface for
Ghostscript intended for MS-DOS users.  (README)

Splits off the documentation on installing Ghostscript into a separate file.
(readme, install.doc, use.doc)

Adds documentation on the data format produced by the standard LZWEncode
filter.  (readme, lzwce.doc)

Clarifies XLIBDIR vs. XLIBDIRS.  (make.doc)

Adds user-contributed documentation on building Ghostscript under QNX.
(make.doc)

Procedures
----------

Fixes bugs:
	- The rule for building dfaxhigh.dev had a typo.  (devs.mak)
	- The dependencies for gdevpipe.h were missing errno__h and
string__h.  (unixtail.mak)
	- The geninit program (the implementation of COMPILE_INITS=1) didn't
parse the command line properly, and didn't check for PostScript files
properly.  (geninit.c)
	- ccfontab.c was omitted from the fileset.  The easiest way to fix
this was to rename it to icfontab.c.  (gs.mak, int.mak, ccfontab.c)
	- The Unix makefiles installed caption.ls (a typo) rather than
caption.ps.  (unix-end.mak)
	- XLIBDIR, for dynamic library access, wasn't defined.  (*head.mak,
*tail.mak, ugcclib.mak)

Adds the PNG and ZLIB makefiles to the fileset.  (*.mak, png.mak, zlib.mak,
tar_cat)

Puts the PixelDifference filters in the standard Level 2 set, since the LZW
filters may invoke them (a post-Red Book addition to the PostScript language
definition).  (int.mak)

Adds -Wcast-qual to the gcc compiler flags.  (gcc-head.mak)

Adds the PNG drivers to the standard Unix configurations.
(ansi/cc-/gcc-head.mak)

Adds a -dNOFONTPATH switch to suppress any consultation of the FONTPATH
variable or the GS_FONTPATH environment variable.  (gs_fonts.ps, gs_init.ps)

Utilities
---------

Fixes bugs:
	- The default scaling for viewing PBM files was computed
incorrectly.  (viewpbm.ps)
	- ps2ascii left a value on the stack for each unrecognized character
it processed, eventually causing a stackoverflow.  (ps2ascii.ps)

Changes viewpbm.ps so that it simply defines P1 through P6, allowing PBM
files to be executed with 'run'.  (viewpbm.ps)

Adds a small benchmark to crudely measure hardware/system performance.  The
same file can either be compiled as a C program or executed as a PostScript
program.  (bench.c)

Adds a few PPD files to the distribution.  There will probably be more as
time goes on.  (tar_gs, unix-end.mak)

Updates the Unix lpr scripts to handle a wider variety of device options.
(unix-lpr.doc, lprsetup.sh, unix-lpr.sh)

Adds a utility for converting files produced by Macromedia's Rollup program
to a Type 0 form directly usable by Ghostscript.  (rollconv.ps)

Drivers
-------

Fixes bugs:
	- Forwarding devices passed an incorrect first argument when
forwarding a copy_rop operation.  (gsdevice.c)
	- Because of a typo, the LaserJet drivers had incorrect margins.
This was probably a new bug in 3.5x.  (gdevdjet.c)
	- A private name was duplicated.  (gdevtfax.c)
	- The x11alpha driver passed invalid colors to the X library.
(gdevxalt.c)
	- The x11alpha driver set the blue component of colors incorrectly.
(gdevxalt.c)
	- Some `const' declarations were missing.  (gdevtifs.c, gdevtfnx.c,
gdevxxf.c)
	- The size of A4 paper was slightly inconsistent across drivers.
(gdevdjet.c, gdevl256.c)

Provides default implementations of copy_mono and copy_color in terms of
fill_rectangle.  (gxdevice.h, gsdevice.c)

Adds forwarders for sync_output and output_page.  (gxdevice.h, gsdevice.c)

Adds new optional procedures to the driver interface:
	- fill_path for filling a path with a color;
	- stroke_path for stroking a path;
	- fill_mask for painting a color through a mask.
The default implementations use the existing rasterizer algorithms.  This
involves a NON-BACKWARD-COMPATIBLE change to the parameters of a few
internal routines:
	gs_currentlineparams
	gx_fill_path, gx_fill_path_only, gx_path_expand_dashes, gx_path_flatten
and two externally visible routines not part of standard PostScript:
	gs_setfilladjust, gs_currentfilladjust
(gdevmem.h, gdevprn.h, gspath.h, gspenum.h, gxcpath.h, gxdevice.h, gxdraw.h,
gxpaint.h, gxpath.h, gscoord.c, gsdevice.c, gspaint.c, gsstate.c,
gxacpath.c, gxclist.c, gxclread.c, gxcpath.c, gxdraw.c, gxfill.c, gxpaint.c,
gxpcmap.c, gxpcopy.c, gxstroke.c)

Makes major changes to the dithering algorithm for the color DeskJet and
BubbleJet drivers, contributed by a user.  (gdevcdj.c)

Adds a contributed 12-bit RGB TIFF driver.  (gdevtfnx.c)

Platforms
---------

Fixes bugs:
	- The printjob created by Ghostscript was called "Ghostscirpt"
instead of "Ghostscript".  (gp_os2.c)
	- An "export" declaration was omitted from DllInit.  (gp_mswin.c)

Removes gp_get_clock (its interface was changed from calendar
days/milliseconds to epoch seconds/nanoseconds in an undocumented,
NON-BACKWARD-COMPATIBLE change in 3.51), and adds a new gp_get_realtime
procedure that returns epoch seconds/nanoseconds.  This too is a
NON-BACKWARD-COMPATIBLE change; it is required because we overlooked the
prior change in a batch of user-contributed code.  (gp.h, gp_*.c)

Fonts
-----

Adds Heavy as a synonym for Bold when doing intelligent font substitution.
(gs_fonts.ps)

Interpreter
-----------

Fixes bugs:
	- The setup for the CCITTFax filters set the 'raster' element
redundantly.  (zfdecode.c)
	- currentscreen and currentcolorscreen could give an error if the
current screen was set with sethalftone (or, for currentscreen,
setcolorscreen).  (gs_dps1.ps)
	- The font operators didn't work properly if a PostScript file
redefined certain operator names.  (gs_res.ps)
	- The CCITTFax filters imposed a limit of 9999 Rows or Columns.  The
new limit is 32000.  (zfdecode.c)
	- Streams could get removed from a bookkeeping list prematurely, and
wind up dangling.  (zfile.c)
	- The garbage collector didn't ask for large enough a mark stack,
and only used half of what it got.  (This was only a performance problem.)
(igc.c)
	- Two private names duplicated names in a vendor library.  (zbseq.c)
	- Type 1 fonts didn't enforce the maximum value of BlueScale, which
caused some faulty fonts produced by Fontographer to produce incorrect
output.  (zfont1.c)
	- cvs / cvrs / = didn't produce Adobe-compatible output.
(gs_init.ps, iutil.h, iutil.c, zfileio.c)
	- Multiple -I switches set the search path incorrectly.  (gsmain.c)
	- Many `const' declarations were missing.  (icie.h, idparam.h,
iref.h, iutil.h, idparam.c, iinit.c, ilocate.c, iname.c, interp.c, iparam.c,
iutil.c, zcie.c, zfile.c, zgstate.c, ziodev.c, ztype.c)
	- Fonts could wind up with a pointer to the wrong VM space, causing
potential GC or save/restore confusion.  (zfont2.c)
	- upath could leave garbage on the stack if it failed.  (gs_dps1.ps)

Speeds up rasterizing characters into the cache a little.  (gs_type0.ps)

Changes the default limit on the size of cached characters from the maximum
of (18 points or 5 times the "average" character size) to (18 points or 1%
of the total cache size).  (gs_init.ps)

Adds the DecodedByteAlign parameter to the CCITTFax filters.  (zfdecode.c)

Updates some code for compatibility with the new fill_path driver procedure.
(zupath.c)

Replaces .set/currentfilladjust with .set/currentfilladjust2, and defines
the former in terms of the latter.  (gs_init.ps, zgstate.c)

Extends the make[word]imagedevice operators to accept palette values of 16,
24, and 32, for creating true-color image devices.  (zdevice.c)

Changes realtime to match the definition of gp_get_realtime.  (zmisc.c)

Removes the [.]currenttime operator.  realtime provides interval timing in
milliseconds; the %Calendar% IODevice provides calendar times.  (zmisc.c)

Extends the LZW filters to handle the PDF Predictor (pixel-differencing)
option.  (zfdecode.c, zfilter2.c, zfpdiff.c (deleted))

Interpreter (PDF)
-----------------

Fixes bugs:
	- The length of an image's data was sometimes calculated
incorrectly, causing an error when converting PDF to PostScript.
(pdf_draw.ps)
	- If word spacing and/or text spacing was non-zero, an error could
occur.  (gs_pdf.ps)
	- Text that was both filled and stroked caused an error.
(gs_pdf.ps)

Streams
-------

Fixes bugs:
	- When closing an encoding filter stream whose target was also a
filter, the latter could get called incorrectly with last = 1, possibly more
than once, leading to premature EOD markers.  (stream.c)
	- The LZW-compatible encoder put out an incorrect end-of-data code.
(slzwce.c)
	- The LZW-compatible encoder didn't put out a reset code soon
enough.  (slzwce.c)
	- Some `const' declarations were missing.  (siscale.c)
	- Doing a sgets on a closed stream could call sreadbuf, possibly
causing an error.  (stream.c)

Adds a new (optional) set_defaults procedure to the stream template, which
sets the stream parameters to default values.  We only implement it for a
few stream types.  (scfx.h, scommon.h, slzwx.h, spdiffx.h, srlx.h,
strimpl.h, scfd.c, scfe.c, slzwce.c, slzwd.c, slzwe.c, spdiff.c, srld.c,
srle.c)

Adds a new parameter to the CCITTFax filters, DecodedByteAlign.  This is an
integer N, which must be a power of 2 between 1 (2^0) and 16 (2^4), that
specifies that decoded data scan lines are always a multiple of N bytes.
The encoding filter skips data in each scan line from Columns to the next
multiple of N bytes; the decoding filter pads each scan line to a multiple
of N bytes.  Default value: 1.  (scfx.h, scfd.c, scfe.c)

Increases the maximum width of a scan line for the CCITTFaxEncode filter to
32000 pixels.  (scf.h)

Library
-------

Fixes bugs:
	- Cached characters sometimes had extra blank space on the left,
leading to some unnecessary bit-shuffling when imaging them.  (gxccman.c)
	- In rare cases, gray halftones called gx_color_load unnecessarily.
(gxdither.c)
	- The list of all-bands commands wasn't initialized/reset properly.
(gxclist.c, gxclread.c)
	- Rendering an anti-aliased character to a non-anti-aliased device
didn't free the temporary bitmap, causing memory to be lost.  (gxccache.c)
	- Dash patterns where the offset exactly reached a run of length 0
skipped over the 0-length run.  (gsline.c)
	- Rectangles closed with both lineto and closepath weren't
recognized as rectangles.  This is only a performance bug.  (gxpath2.c)
	- Because of a typo in a macro formal parameter list, a private name
was duplicated.  (gsstruct.h)
	- Text display operations didn't update the current character in the
enumerator structure during the fastest path through the code.  This only
matters to one very unusual commercial client.  (gschar.c)
	- Some `const' declarations were missing.  (gsparam.h, gxistate.h,
stdpre.h; gdevm1.c, gsalloc.c, gsfont.c, gsimage3.c, gsmemory.c, gsmisc.c,
gspcolor.c, gstype1.c, gxfill.c, gxpcopy.c)

Changes the header files to assume that gcc on Solaris defines
__svr4__ and that, in this case, <string.h> has the right stuff in it.
(memory_.h)

Refactors the character cache to share structures with a similar cache
used by band lists.  Eventually the band list may be able to reference
the character cache directly, saving a lot of copying.  (gxbcache.h,
gxfcache.h, gsfont.c, gxbcache.c, gxccache.c, gxccman.c)

Speeds up getting the side bearing and width of a Type 1 charstring a
little.  (gxtype1.h, gstype1.c)

Redesigns band lists so that they can cache character bitmaps as well as
halftone bitmaps.  Characters may be written for all bands, not just the
band(s) they appear in, depending on the setting of the CHAR_ALL_BANDS_COUNT
parameter in gxclbits.c.  (gxcldev.h, gxclist.h, gxclbits.c, gxclist.c,
gxclread.c)

Adds G4 fax compression for band list bitmaps.  (gxcldev.h, gxclist.c,
gxclread.c)

Incorporates the new set_defaults procedure into the memory-based band list
implementation.  (gxclmem.c)

Implements a halftoning device that can be used in a device pipeline.
(gdevht.h, gzht.h, gdevht.c, gxcht.c)

Factors out imager state from the full graphics state.  This division is
preliminary and subject to change.  (gxistate.h, gxop1.h, gzstate.h,
gsline.c, gsstate.c, gstype1.c, gxhint*.c)

Implements passing fill operations in the band list, except for pattern
color or colored halftones.  (gxcldev.h, gxclist.h, gxclist.c, gxclread.c)

Implements passing stroke operations in the band list, except for pattern
color or colored halftones.  (gsline.h, gslparam.h, gxline.h, gzline.h,
gsline.c; gxcldev.h, gxclist.h, gxclist.c, gxclread.c)

Implements the ability to represent halftoned characters in the band list.
(gxccache.c)

Starts to implement the ability to do halftoning during the rendering phase
rather than before writing the band list (currently for black-and-white
devices only).  Doing this required NON-BACKWARD-COMPATIBLE changes to the
interfaces of a few internal procedures:
	gx_check_tile_size, gx_render_device_{color,gray}
(gxdcolor.h, gxdht.h, gzht.h, gsht.c, gsimage1.c, gsmisc.c, gspcolor.c,
gsstate.c, gxcht.c, gxclbits.c, gxdither.c, gxht.c)

Implements passing clipping information in the band list.  (gzcpath.h,
gxacpath.c, gxclpath.c, gxclread.c, gxcpath.c)

Removes the gs_state * parameter from the device color fill_rectangle
procedures and many of their callers, since it is no longer needed.  This is
a non-backward-compatible change to an internal API.  (gdevmrop.h,
gxdcolor.h, gxdraw.h, gxpaint.h, gdevmrop.c, gsimage.c, gspcolor.c, gxcht.c,
gxclread.c, gxdraw.c, gxfill.c, gxht.c, gxpaint.c, gxstroke.c)

Removes gxdevice.h from gzstate.h, since not all modules requiring access to
the graphics state need to know the implementation of devices.  This entails
adding gxdevice.h to the include lists for some modules.  (gxchar.h,
gxcpath.h, gxcvalue.h, gxdevice.h, gxtype1.h, gzstate.h; gschar.c,
gscoord.c, gsdevice.c, gsimage1.c, gsimage2.c, gsimage3.c, gspaint.c,
gspath.c, gsstate.c, gstype1.c, gxccache.c, gxccman.c, gxhint1.c, gxhint2.c,
gxhint3.c, gxpaint.c)

Adds a compile-time option, ALPHA_LSB_FIRST, which causes alpha-sampled
characters to be nibble-reversed in the cache.  This was created for a
specialized application and does not interact well with the rest of the
code.  (gsbitops.c)

Substantially reduces the space required to represent 24- or 32-bit colors
in the band list, by using more aggressive color differencing.  (gxcldev.h,
gxclist.c, gxclread.c)

Changes the allocation of unique IDs for halftone tiles to use the gray
level rather than the number of 1-bits as the increment to a base ID; this
allows more efficient (delta) representation of halftone indices in the band
list.  (gxcldev.h, gxclist.c, gxclread.c, gxht.c)

Substantially speeds up entering anti-aliased characters in the cache, by
removing white space before compressing rather than vice versa.
(gsbitops.c, gxccman.c)

Version 3.53 (1/10/96)
============

This is an anomalous, out-of-sequence release requested by a commercial
licensee.  It consists of 3.52 plus the following retrofits from 3.60
through 3.63:
	- PDF interpreter and pdf2ps;
	- Type 1 rasterizer fixes;
	- Type 1 rasterizer and polygon fill performance improvements;
	- MS Windows and OS/2 fixes;
	- A few other important fixes.
It does NOT fix all problems reported since 3.52.

The list of changes below indicates which subsequent release was the source
of each change.  In several cases, minor editing of the change was required
to make it compatible with 3.52.

Documentation
-------------

Fixes bugs:
	[3.61] The analysis of curve monotonocity in gxpcopy.c had an error.
(gxpcopy.c)

[3.63] Notes that the OS/2 implementation now requires EMX/GCC 0.9b rather
than 0.9a.  (use.doc)

[3.62] Notes that for Win32s, gs16spl.exe must be in the same directory as
gswin32.exe.  (use.doc)

[3.62] Adds a reference to dos-psv, another "dumb terminal" user interface
for Ghostscript intended for MS-DOS users.  (README)

[3.61] Adds a pointer to DEC's free pstotext utility.  (README)

[3.60] Adds a reference to ps_view.ps, a "dumb terminal" user interface for
Ghostscript intended for MS-DOS users.  (README)

Procedures
----------

Fixes bugs:
	[3.60] The geninit program (the implementation of COMPILE_INITS=1)
didn't parse the command line properly, and didn't check for PostScript
files properly.  (geninit.c)
	[3.60] ccfontab.c was omitted from the fileset.  The easiest way to
fix this was to rename it to icfontab.c.  (gs.mak, int.mak, ccfontab.c)
	[3.60] The definition of pdfread.dev did an ADDMOD, not a SETMOD.
(int.mak)

[3.60] Adds a -dNOFONTPATH switch to suppress any consultation of the
FONTPATH variable or the GS_FONTPATH environment variable.  (gs_fonts.ps,
gs_init.ps)

Utilities
---------

Fixes bugs:
	[3.61] pdf2ps didn't write Widths or Encoding in the converted file,
producing incorrect spacing and incorrect characters.  (pdf_2ps.ps)
	[3.60] ps2ascii left a value on the stack for each unrecognized
character it processed, eventually causing a stackoverflow.  (ps2ascii.ps)

[3.61] Changes the rollconv.ps utility to produce files whose names conform
to the 8.3 length restriction, and to reduce the fixed RAM overhead for
Kanji fonts.  (rollconv.ps)

[3.60] Adds a utility for converting files produced by Macromedia's Rollup
program to a Type 0 form directly usable by Ghostscript.  (rollconv.ps)

Drivers
-------

Fixes bugs:
	[3.60] Because of a typo, the LaserJet drivers had incorrect
margins.  This was probably a new bug in 3.5x.  (gdevdjet.c)
	[3.60] A private name was duplicated.  (gdevtfax.c)
	[3.60] The x11alpha driver passed invalid colors to the X library.
(gdevxalt.c)
	[3.60] The x11alpha driver set the blue component of colors
incorrectly.  (gdevxalt.c)

Platforms
---------

Fixes bugs:
	[3.63] The test for WinExec failure on Win32 was incorrect.
(gp_mswin.c)
	[3.63] getenv was declared redundantly on OS/2.  (gp_os2.c)
	[3.63] gs16spl.c was missing <string.h>.  (gs16spl.c)
	[3.61] Printing didn't work in 32-bit MS Windows environments.
(bcwin32.mak, gdevmswn.c, gp_mswin.c)
	[3.61] There were some compatibility problems with IBM C.  (os2.mak,
gsdll.h, gdevpm.c, gp_os2.c)
	[3.60] The printjob created by Ghostscript was called "Ghostscirpt"
instead of "Ghostscript".  (gp_os2.c)
	[3.60] An "export" declaration was omitted from DllInit.
(gp_mswin.c)

[3.61] Adds a conditional to work around a bug in gcc 2.7.x (it didn't
recognize that the target of a const T * might still be mutable through
aliasing).  (stdpre.h)

Fonts
-----

Fixes bugs:
	[3.61] Rasterizing a character in a Type 1 font with an invalid
FontBBox left some garbage on the operand stack (bug introduced in 3.52 or
3.60).  (gs_type1.ps)
	[3.61] The font substitution algorithm could fail or loop.
(gs_fonts.ps)

[3.60] Adds Heavy as a synonym for Bold when doing intelligent font
substitution.  (gs_fonts.ps)

Interpreter
-----------

Fixes bugs:
	[3.63] Invoking setpagedevice with an undefined key, even with
Policy = 1, caused an error.  (gs_setpd.ps)
	[3.62] Setting the PageSize policy to 1 and then trying to set the
page size caused an error if FIXEDMEDIA was selected.  (gs_setpd.ps)
	[3.61] Rotated characters were rendered incorrectly (bug introduced
in 3.52).  (gstype1.c)
	[3.60] currentscreen and currentcolorscreen could give an error if
the current screen was set with sethalftone (or, for currentscreen,
setcolorscreen).  (gs_dps1.ps)
	[3.60] Streams could get removed from a bookkeeping list
prematurely, and wind up dangling.  (zfile.c)
	[3.60] Multiple -I switches set the search path incorrectly.
(gsmain.c)
	[3.60] Fonts could wind up with a pointer to the wrong VM space,
causing potential GC or save/restore confusion.  (zfont2.c)
	[3.60] upath could leave garbage on the stack if it failed.
(gs_dps1.ps)

[3.61] Extends the client API to allow for pushing values onto the operand
stack.  (imain.h, gs.c, gsmain.c)

[3.61] Defines a .setdefaultscreen procedure that sets the default halftone
screen, transfer function, and stroke adjustment for the current device.
Changes selectdevice and setpagedevice so that they call .setdefaultscreen;
setpagedevice calls .setdefaultscreen before calling the Install procedure,
so that Install can set different parameters if it wishes.  Note that
setdevice does not do this.  (gs_init.ps, gs_setpd.ps)

[3.60] Speeds up rasterizing characters into the cache a little.
(gs_type0.ps)

[3.60] Changes the default limit on the size of cached characters from the
maximum of (18 points or 5 times the "average" character size) to (18 points
or 1% of the total cache size).  (gs_init.ps)

[3.60] Implements parts of the Type 1 BuildChar callout in C.  (gs_type1.ps,
zchar.c)

Interpreter (PDF)
-----------------

Fixes bugs:
	[3.62] If a PDF file substituted a calibrated color space for the
DeviceGray or DeviceRGB color space using a ColorSpace resource, the
PostScript file that pdf2ps produced from that PDF file caused an error.
(gs_pdf.ps)
	[3.61] Tf set the current text font twice, and interacted with
pdf2ps in an awkward way.  (gs_pdf.ps, pdf_2ps.ps, pdf_font.ps)
	[3.61] If a font had variant Widths, it could get confused in the
cache with the underlying font.  (pdf_font.ps)
	[3.61] If a character appeared twice in an encoding and the font
specified different Widths values for the two occurrences, the last Width
would be used.  We patched this to ignore zero Widths, which is not the
correct solution but which almost always produces correct output.
(pdf_font.ps)
	[3.61] Arrays containing nulls didn't print out correctly (bug
introduced in 3.60).  (gs_init.ps)
	[3.61] Some PDF files contain very large dictionaries, which caused
a stackoverflow.  (pdf_base.ps)
	[3.60] The length of an image's data was sometimes calculated
incorrectly, causing an error when converting PDF to PostScript.
(pdf_draw.ps)
	[3.60] If word spacing and/or text spacing was non-zero, an error
could occur.  (gs_pdf.ps)
	[3.60] Text that was both filled and stroked caused an error.
(gs_pdf.ps)

[3.61] Speeds up the initial processing of PDF files by caching the map from
page numbers to page objects, and by not scanning the outlines if we aren't
producing PostScript output.  (pdf_2ps.ps, pdf_base.ps, pdf_main.ps)

Streams
-------

Fixes bugs:
	[3.60] When closing an encoding filter stream whose target was also
a filter, the latter could get called incorrectly with last = 1, possibly
more than once, leading to premature EOD markers.  (stream.c)
	[3.60] The LZW-compatible encoder put out an incorrect end-of-data
code.  (slzwce.c)
	[3.60] The LZW-compatible encoder didn't put out a reset code soon
enough.  (slzwce.c)
	[3.60] Doing a sgets on a closed stream could call sreadbuf,
possibly causing an error.  (stream.c)

Library
-------

Fixes bugs:
	[3.63] On 16-bit platforms, the computation of t2 and t3 in
gx_curve_x_at_y could overflow, leading to incorrect output.  (gxpcopy.c)
	[3.61] glyphshow displayed a character with code 0 rather than the
requested character (bug introduced in 3.60.)  (gschar.c)
	[3.61] If trimming white space around a character reduced its
raster, the character was garbled in the cache (bug introduced in 3.60.)
(gxccman.c)
	[3.61] colorimage would incorrectly convert white pixels to black if
the image color space was CMYK, the current color space was not CMYK, and
the number of bits per pixel was 4 or 8.  (gsimage2.c)
	[3.61] Type 1 fonts that used the Flex feature applied hints to the
path multiple times, causing dropouts, uneven stems, and other problems (bug
probably introduced in 3.21).  (gstype1.c)
	[3.61] If a Type 1 font used the Flex feature within the accent of
an accented character defined with seac, the shape of the accent could be
distorted.  (gxtype1.h, gstype1.c)
	[3.61] If a Type 1 font changed hints using the hint replacement
facility when the last operation was a closepath, the old hints would be
applied a second time, distorting the shape.  (gxhint2.c, gxhint3.c)
	[3.60] Cached characters sometimes had extra blank space on the
left, leading to some unnecessary bit-shuffling when imaging them.
(gxccman.c)
	[3.60] The list of all-bands commands wasn't initialized/reset
properly.  (gxclist.c)
	[3.60] Because of a typo in a macro formal parameter list, a private
name was duplicated.  (gsstruct.h)
	[3.60] Text display operations didn't update the current character
in the enumerator structure during the fastest path through the code.  This
only matters to one very unusual commercial client.  (gschar.c)

[3.61] Adds an alternative implementation of the core path filling algorithm
that is much faster on objects with curves but doesn't handle Y fattening.
This is the implementation that will normally be used for rasterizing
characters.  This implementation rasterizes curves directly, without
flattening them.  (gxfixed.h, gxpath.h, gzpath.h, gxdraw.c, gxfill.c,
gxpcopy.c)

[3.61] Speeds up the flattening of curves substantially by omitting more
redundant points.  (gxpcopy.c)

[3.61] Speeds up character bitmap compression a little more.  (gsbitops.h,
gdevabuf.c, gsbitops.c, gxccman.c)

[3.61] Speeds up anti-aliased graphics a bit by computing a bounding box
before converting from oversampling to alpha values, and by speeding up the
bounding box computation itself.  (gsbitops.h, gdevabuf.c, gsbitops.c,
gxccman.c)

[3.60] Speeds up getting the side bearing and width of a Type 1 charstring a
little.  (gxtype1.h, gstype1.c)

[3.60] Adds a compile-time option, ALPHA_LSB_FIRST, which causes
alpha-sampled characters to be nibble-reversed in the cache.  This was
created for a specialized application and does not interact well with the
rest of the code.  (gsbitops.c)

[3.60] Substantially speeds up entering anti-aliased characters in the
cache, by removing white space before compressing rather than vice versa.
(gsbitops.c, gxccman.c)

Version 3.52(limited) (10/6/95)
=====================

This is an incremental release to fix a few problems in 3.51.  Since it is
being made in an environment with no network connectivity, it will probably
not be released to the general public.  ****** THE CHANGES MARKED WITH ***
BELOW WERE LOST IN THE PROCESS OF SHUFFLING FILESETS BETWEEN ENVIRONMENTS.
THEY ARE INCORPORATED IN 3.60 BUT NOT IN 3.52. ******

Procedures
----------

Fixes bugs:
	- The fileset included a meaningless empty file.  (acctest.ps)
	*** The definition of pdfread.dev did an ADDMOD, not a SETMOD.
(int.mak)

Interpreter
-----------

Fixes bugs:
	- The RunLengthEncode filter used with a dictionary argument could
give a spurious error.  (zfilter.c)
	- The fast form of the 'dup' operator failed to check for stack
overflow, which could lead to memory smashing.  (interp.c)
	*** Level 1 configurations gave errors during initialization.
(ialloc.c, iinit.c, ireclaim.c)
	*** Attempting to look up or insert a noaccess string as a
dictionary key converted the string to a name rather than giving an error.
(idict.h, idict.c)

Adds a C implementation of the .dicttomark (>>) procedure.  (gs_init.ps,
zdict.c)

*** Implements parts of the Type 1 BuildChar callout in C.  (gs_type1.ps,
ifont.h, zchar.c, zfont1.c, zfont2.c)

Library
-------

Fixes bugs:
	- Braces were missing in an initializer.  (gxdcolor.h)
	- Composite fonts with a non-zero translation in the FontMatrix
positioned characters incorrectly.  (gschar.c)
	*** gsparam.c wouldn't compile with some versions of the Borland
compiler.  (gsparam.c)

Speeds up the handling of curve segments in Type 1 fonts a little.
(gstype1.c)

Speeds up displaying very short strings a little.  (gschar.c)

*** Implements parts of the Type 1 BuildChar callout in C.  (gxfont.h)

Version 3.51 (9/27/95)
============

This is the first public release since 3.33.  Its main features are a
working setpagedevice, a working PDF interpreter, and a working PDF to PS
converter.

Documentation
-------------

Fixes bugs:
	- The -dSHORTERRORS switch wasn't documented in enough places.
(current.doc, use.doc)
	- The DLL documentation was internally inconsistent.  (dll.doc)
	- The %pipe% file name syntax wasn't documented.  (language.doc)

Procedures
----------

Fixes bugs:
	- caption.ps wasn't installed properly.  (unix-end.mak)
	- geninit depended on $(gconfig_h) in an improper way.  (geninit.c,
int.mak, *.mak)
	- One script lacked the #!/bin/sh header.  (gsdj500)

Adds the 24-bit color TIFF driver to all configurations that support
black-and-white TIFF.  (*.mak)

Utilities
---------

Fixes bugs:
	- align.ps was omitted from the fileset.  (psfiles.doc, align.ps,
unix-end.mak)

Drivers
-------

Fixes bugs:
	- A driver had some \s in formal parameter lists.  (gdevcdj.c)
	- A driver had some improper &s.  (gdevtifs.c)
	- The default MS Windows printer driver was very slow.  (gdevwpr2.c)
	- The (newly restructured) TIFF drivers could produce a memory
access error.  (gdevtifs.c)
	- The CGM drivers referred to an obsolete structure member.
(gdevcgm.c)
	- The black-and-white H-P drivers didn't set the margins properly
(again).  (gdevdjet.c)
	- Several of the most common printer drivers omitted some scan lines
at the bottom of the page.  (gdevprn.h, gdevprn.c)

At the request of the main OS/2 developer, adds a printer device for OS/2.
(gdevos2p.c, os2.mak)

Makes many changes to the stcolor driver, submitted by the developer just
before the release.  (devices.doc, unix-end.mak, gdevstc.h, gdevstc*.c,
stcinfo.ps, stcolor.ps, stcinfo.ps)

Platforms
---------

Fixes bugs:
	- usertime (and realtime) were broken on VMS.  (gp_vms.c)
	- The 32-bit MS Windows DLL control file had a typo.  (gsdll32.def)

Removes the color inkjet drivers from the 16-bit Windows executable, because
they overflow the 64K default data segment; adds PCX, TIFF, and BMP output
formats.  (bcwin.mak)

Interpreter
-----------

Fixes bugs:
	- A routine was declared 'private' inconsistently.  (zcie.c)
	- -dSHORTERRORS didn't remove enough non-Adobe error output.
(gs_init.ps)

Interpreter (PDF)
-----------------

Fixes bugs:
	- The ProcSet relied on the presence of NullFont.  (gs_pdf.ps)

Library
-------

Fixes bugs:
	- There was an extraneous \ outside a macro.  (gsline.c)
	- Scaling up a black-and-white image could caused many scan lines to
be inverted.  (gsimage1.c)
	- The initial clipping path did not take Margins into account
properly.  (gxdevice.h, gdevxalt.c, gscoord.c, gsdevice.c, gsdevmem.c,
gsdparam.c, gspath.c)
	- If banding was required, characters could come out as solid black
rectangles.  (gxclist.c, gxclread.c)

Version 3.50(limited) (9/24/95)
=====================

This is the last limited bug-fix release during beta test.  The color
DeskJet drivers are broken (they sometimes produce black rectangles instead
of characters); we will fix this in the next release.

The following issues have been postponed to an unspecified future release:
	- Filling areas often writes pixels twice, causing incorrect output
with certain unusual RasterOp values.  [1.814]
	- The tar.gz archives should include a subdirectory like gs-3.46/ in
the file names.
	- The CCITTFaxDecode filter should skip initial junk if EndOfLine =
true.  [1844 8/24/95, NRE]

Procedures
----------

Fixes bugs:
	- The name of the new 24-bit TIFF driver was incorrect in one place.
(vms.mak)

Utilities
---------

Adds a new utility to put a caption in a box at the bottom of each page.
(caption.ps)

Drivers
-------

Fixes bugs:
	- The PC display devices weren't page devices.  Probably all the
other display and window system devices should be made page devices too, but
we aren't going to bother tracking them down.  (gdevpcfb.c)
	- There was a lot of duplicated code in the TIFF drivers.
(gdevtifs.h, gdevtfax.c, gdevtfnx.c, gdevtifs.c)

Updates the bjc600 / bjc800 drivers with changes from the author.
(devices.doc, gdevbjc.h, gdevcdj.c)

Interpreter
-----------

Fixes bugs:
	- Building with COMPILE_INITS=1 produced a stackunderflow error.
(gs_pdf_e.ps)
	- An internal operator didn't have a name.  (ztoken.c)
	- Some error and information messages weren't in the Adobe format.
(gs_fonts.ps, gs_init.ps)
	- Some common Adobe compatibility operators weren't implemented:
pagemargin, pageparams, setpagemargin.  (gs_statd.ps, gs_lev2.ps)
	- setpageparams set Margins rather than PageOffset.  (gs_lev2.ps)
	- setpage and setpageparams didn't set Orientation.  (gs_lev2.ps)
	- If the end of an input buffer fell just after the / of a literal
name, a memory access error could occur.  (iscan.c)
	- When the interpreter returned from gs_[main_]run_string_continue,
there could be an extra value on the operand stack.  (iscan.h, istream.h,
interp.c, iscan.c, zfileio.c, zfproc.c, zpaint.c, ztoken.c)
	- If the character cache was disabled, or if a character was too
large to be cached, returning from a font BuildChar procedure could do an
erasepage.  (zchar.c)

A minor change was required for compatibility with the library change for
image devices.  (zdevice.c)

Adds a -dSHORTERRORS switch that changes some of the common error and
warning messages for greater Adobe compatibility.  (gs_init.ps, gs_fonts.ps)

Interpreter (PDF)
-----------------

Fixes bugs:
	- If a CharProc for a Type 3 font did a BT/ET, the graphics state
could get confused.  (gs_pdf.ps)
	- If a Tf occurred inside a BT/ET, it didn't take effect on
subsequent BT/ETs.  (gs_pdf.ps)

Library
-------

Fixes bugs:
	- There was no way to control whether an image device was a page
device.  Fixing this required a NON-BACKWARD-COMPATIBLE CHANGE to
gs_makewordimagedevice and gs_initialize_wordimagedevice to take a Boolean
page_device argument.  Fortunately, this change affects only a few obscure
library clients.  (gsdevice.h, gsdevmem.c)

Adds translation capability to clipping devices.  This isn't used anywhere
yet.  (gxcpath.h, gxcpath.c)

Adds procedures for doing unaligned copy_xxx operations.  These were added
for a customer.  (gxdevice.h, gsdevice.c)

Changes the (undocumented) return value of gs_setcachedevice[2]: they used
to return 1 if the current show operation was a non-displaying one
(stringwidth or cshow), and now return 1 if the cache device was just
installed.  This change was required to fix the BuildChar page clearing bug
in the interpreter.  THIS IS A NON-BACKWARD-COMPATIBLE CHANGE, but as far as
I know, there aren't any external clients of these routines.  (gschar.h,
gschar.c)

Version 3.49(limited) (9/20/95)
=====================

This is another bug-fix release during beta test.  There are other bugs
outstanding, but the ones I know about right now are all platform-specific.

Documentation
-------------

Fixes bugs:
	- make.doc didn't mention that the .def files are needed to build a
MS Windows executable.  (make.doc)

Procedures
----------

Fixes bugs:
	- There were some forward references to macro definitions in the
makefiles.  (int.mak, lib.mak)
	- The default device for library configurations was the null page
device, not the first device in DEVICE_DEVS.  (ugcclib.mak)

Drivers
-------

Fixes bugs:
	- The BJC600 / BJC800 drivers were missing a header file.
(gdevbjc.h, gdevcdj.c)
	- A procedure name was used in two different files.  (gdevcdj.c)
	- The PCX driver didn't return an error code in case of failure.
(gdevpcx.c)
	- The X Windows driver produced some confusing warning messages.
(gdevxini.c)
	- Some names were duplicated between drivers.  (gdevepsc.c)
	- The X driver maintained its own, peculiar initial matrix even if
Ghostview wasn't involved.  (gdevx.c)

With the permission of the author, changes the 24-bit TIFF license from GNU
to Aladdin.  (gdevtfnx.c)

Platforms
---------

Fixes bugs:
	- The VMS build scripts were out of sync with the makefiles (again).
(modules.lis, vms.mak)

Interpreter
-----------

Fixes bugs:
	- When the requested media size matched an available size exactly
with a 90 degree rotation, Orientation was ignored.  (zmedia2.c)

Makes zcurrentdevice extern.  (opextern.h, zdevice.c)

Library
-------

Fixes bugs:
	- A couple of places used memcpy instead of memmove.  (gxclread.c)
	- If a bitmap image was compressed with RLE compression in a band
list, it would cause an error on decompression.  (gxclread.c)
	- The representation of colors in the band list was needlessly
inefficient.  (gxcldev.h, gxclist.c, gxclread.c)
	- When using colored halftones, snowflak.ps crashed with an invalid
memory access.  More generally, any use of halftones could cause the garbage
collector to make an invalid access.  (gsstate.c)

Adds some more code for paths in band lists, but again doesn't activate it.
(gxcldev.h, gxpath.h, gzline.h, gsline.c, gspath1.c, gxclist.c, gxclread.c,
gxpath.c)

Version 3.48(limited) (9/17/95)
=====================

This is the second bug-fix release during beta test.  Among other things, it
fixes a bug introduced in 3.47 that caused all PDF files to give an error.
******NOTE: the BJC600 and BCJ800 drivers do not work in this release,
because we didn't get a file from the author in time.  They will compile,
but not run.  This will be fixed in the next round.

Documentation
-------------
	
Fixes bugs:
	- Alan Barclay's contact information was wrong.  (README)

Procedures
----------

Fixes bugs:
	- The linker path for Watcom C++ 10.5 was wrong.  (wccommon.mak)
	- There was a syntax error in a batch file.  (pdf2ps.bat)
	- The VMS build script didn't have entries for some printers.
(vms.mak)

Adds the bjc600 and bjc800 devices on all platforms that already include the
color DeskJet devices.  (*.mak)

Drivers
-------

Fixes bugs:
	- The H-P drivers didn't reposition the cursor properly at the
beginning of pages after the first page, causing the image to be shifted
down slightly and cut off at the bottom.  (gdevdjet.c)
	- The x11alpha driver was extremely slow.  (gdevxalt.c)
	- The -g switch by itself didn't work for the X Windows driver.
(gdevxini.c)
	- .installpagedevice can get a rangecheck on MS Windows because the
HWColorMap can change spontaneously.  (gs_setpd.ps)

Updates the bjc600 and bjc800 drivers with new versions from Yves Arrouye.
(gdevcdj.c)

Adds a user-contributed driver that writes uncompressed 24-bit RGB TIFF
images in a format that is standard on NeXT platforms.  This driver is
governed by the GNU license and is therefore separated from the rest of the
Aladdin distribution.  (gdevtfnx.c)

Platforms
---------

Fixes bugs:
	- There was an undefined reference to clock_gettime on some Unix
systems.  (gp_unix.c)
	- The new gp_fopen routine had several errors.  (gp_vms.c)

Interpreter
-----------

Fixes bugs:
	- Some routines that should be main-instance-specific weren't.
(imain.h, main.h, gsmain.c)
	- sethalftone with a Type 2 or Type 4 halftone didn't work on CMYK
devices.  (zht2.c)
	- Setting A4 paper as the default in gs_init.ps, or specifying
-dPAPERSIZE, conflicted with -g.  (gs_init.ps)
	- The maximum value of a single-precision float wasn't correct on
VAX systems.  (math_.h, iscannum.c)
	- Some integer expressions were passed as floating point arguments.
(gs.c, zmedia2.c)
	- Media selection in setpagedevice was broken (again), as of 3.46.
(gs_setpd.ps, zmedia2.c)

Interpreter (PDF)
-----------------

Fixes bugs:
	- Substituted color spaces caused an error.  (gs_pdf.ps,
pdf_draw.ps)

Library
-------

Fixes bugs:
	- If a halftone had no non-default components that matched the
device's primary colors, the result would be a solid color rather than a
halftone using the default screen.  (gsht.c)
	- sethalftone with a Type 2 or Type 4 halftone didn't work on CMYK
devices.  (gxht.h, gsht.c, gsht1.c)
	- The new gp_fopen routine wasn't being used.  (gsiodev.c)
	- A mixing of float and fixed values caused a clipping region to be
possibly incorrect by up to 1 pixel.  (gspaint.c)
	- A function definition was inconsistent with the prototype.
(gspath1.c)

Adds preliminary code for including paths in band lists, but doesn't
activate any of it.  (lib.mak, gxcldev.h, gxclist.c, gxclread.c)

Version 3.47(limited) (9/14/95)
=====================

This is a bug-fix release during beta test.  It is meant to have no new
functionality, although in the case of setpagedevice that's stretching
things a little.

Documentation
-------------

Fixes bugs:
	- The Mac documentation still referred to IJG JPEG v5a rather than
v6.  (make.doc)
	- The RasterOp texture device was identified incorrectly.
(gdevmrop.c)
	- use.doc and psfiles.doc didn't mention the PDF-related files.
(psfiles.doc, use.doc)
	- psview is no longer available.  (README)
	- current.doc didn't document the recognized setpagedevice keys.
(current.doc)

Procedures
----------

Fixes bugs:
	- Many utility programs weren't included in the Unix 'install' list.
(unix-end.mak)
	- It wasn't at all convenient to make configurations without the BCP
or other non-standard filters.  (*.mak, int.mak, modules.lis, zfilter2.c,
zfilterx.c)
	- The gconfig.c and iconfig.c files weren't deleted after
compilation.  (int.mak, lib.mak)
	- unix-end.mak referred to the nonexistent macros INT{1,2}_MAK.
(unix-end.mak)
	- The rules for building the dfax drivers were incorrect.  (devs.mak)
	- Omitting filter.dev produced an undefined reference.  (int.mak)

Adds a customer-contributed makefile for Microsoft Visual C++ 2.n under
Windows NT.  (msvcwint.mak)

Utilities
---------

Fixes bugs:
	- The JPEG utility didn't support the new progressive JPEG modes,
and didn't invert Adobe Photoshop output as needed.  (viewjpeg.ps)
	- The printafm utility had a single font name wired in.  (printafm,
printafm.ps)
	- The CIE lookup simulation had several bugs.  (docie.ps)
	- pdf2ps[.bat] were missing from the fileset.
	- Files produced by pdf_2ps didn't include the GS_PDF ProcSet.
(gs_pdf.ps, pdf_2ps.ps, pdf_base.ps, pdf_main.ps)

Drivers
-------

Fixes bugs:
	- Bits read back from an EGA or VGA device were incorrect.
(gdevpcfb.c)
	- The 24-bit PCX run length compressor used a slow algorithm.
(gdevpcx.c)
	- gdevstc.c wouldn't compile with the Borland compiler.  (gdevstc.c)
	- There was a typo in the OS/2 PM driver.  (gdevpm.c)
	- .installpagedevice gets a rangecheck on X Windows because the
HWColorMap can change spontaneously.  (gs_setpd.ps)
	- The left margin for the DeskJet 500 was wrong.  (gdevdjet.c)
	- The two notions of "margin" (offset of 0,0 from physical page
corner vs. unprintable area around edges of physical page) were still
confused.  We've now fixed this for the H-P monochrome printers, but it's
probably still confused for all other printers.  (gdevprn.h, gdevdjet.c)

Platforms
---------

Fixes bugs:
	- The Windows print spooler header file wasn't included when it
needed to be, and some other Win32-specific changes were missing.
(gsdll32.def, gp_mswin.c)
	- Windows DLLs didn't parse "s in the command "arguments" correctly.
(gsdll.c)

Fonts
-----

Fixes bugs:
	- FAKEFONTS could get the font directories into inconsistent states.
(gs_dps1.ps, gs_fonts.ps)
	- The substitutions for Adobe's Myriad and Minion fonts weren't
appropriate.  (gs_fonts.ps)

Interpreter
-----------

Fixes bugs:
	- If pathforall got an error computing the user-space points on a
path, it could cause an invalid access.  (zpath1.c)
	- A 'private' declaration were omitted.  (Why doesn't gcc catch
this??)  (zcie.c)
	- Setting GS_FONTPATH produced a stackunderflow error.
(gs_fonts.ps)
	- currentscreen caused a typecheck if the screen had been set by
setcolorscreen.  (gs_dps1.ps)
	- setcolorrendering tried to cache values computed from the color
space even if the current color space wasn't a CIE space.  (zcrd.c)
	- Out-of-range numbers like 10E38 caused a floating point exception.
(iscannum.c)
	- Giving a closed readable file as input for a filter caused an
invalidaccess.  (files.h, interp.c, zfilter.c)
	- setpagedevice opened the default device even with -dNODISPLAY.
(gs_init.ps, gs_setpd.ps)
	- realtime returned the same value as usertime.  (gs_lev2.ps,
zmisc.c)
	- Storing a local value into systemdict caused some redundant code
to be executed.  (zdict.c)
	- Files with a very long first line could cause a rangecheck error.
(gs_init.ps)
	- The PageOffset page device parameter was ignored.  (gs_setpd.ps)
	- The Orientation page device parameter wasn't handled properly.
(gs_setpd.ps, idparam.h, idparam.c, zmedia2.c)
	- setpagedevice could set device parameters twice, with an
incomplete update the first time.  (gs_setpd.ps)

Interpreter (PDF)
-----------------

Fixes bugs:
	- Readers confused the internal pdfrun procedure with the public
runpdf procedure.  (pdf_*.ps)

Streams
-------

Fixes bugs:
	- Closed streams had a NULL state pointer, causing problems for some
clients.  (stream.c)
	- Group 4 decoding could get an ioerror if an end-of-buffer occurred
in a horizontal code sequence between a makeup code and the termination
code.  (scfd.c)

Library
-------

Fixes bugs:
	- Some 'private' declarations were omitted.  (Why doesn't gcc catch
these??)  (gdevmrop.c, gxht.c)
	- Patterns could produce bad output in the band list.  (gxclist.c)
	- RasterOp wasn't implemented at all for 2- or 4-bit devices.  (In
this release, we implement only a subset, and without handling transparency
properly.)  (gdevm2.c, gdevm4.c, gdevmrop.c)
	- Drawing operations and text sometimes didn't apply the RasterOp
when they should, and vice versa.  (gxdcolor.h, gxdraw.c)
	- setcolorrendering tried to cache values computed from the color
space even if the current color space wasn't a CIE space.  (gscie.h,
gscie.c)
	- Some CIE color spaces produced very distorted colors.  (gscie.c)
	- setpagedevice opened a window even with -dNODISPLAY.  (gsdevice.c,
gsdparam.c)
	- realtime returned the same value as usertime.  (gp.h, time_.h,
gp_*.c)
	- The library level attempted to handle the Orientation page device
parameter.  (gxdevice.h, gdevbit.c, gsdevice.c, gsdparam.c, gspath.c)
	- Severely non-linear CIE encoding/decoding functions produced
seriously skewed colors near the ends of the color value range.  This
problem can now be alleviated, at a significant cost in performance, by
changing configuration parameters at the beginning of gscie.h.  (gscie.h,
gscie.c)
	- Files FTP'ed in binary mode weren't being opened properly on VMS.
(gp.h, gp_*.c, gsiodev.c)
	- A header file had an inconsistent declaration.  (math_.h)

Adds a new gp_get_usertime procedure to gp.h.  THIS IS A
NON-BACKWARD-COMPATIBLE CHANGE, affecting only platform implementors.  It
was necessary to fix the realtime/usertime bug.  (gp.h, time_.h, gp_*.c)

Adds a new gp_fopen procedure to gp.h.  THIS IS A NON-BACKWARD-COMPATIBLE
CHANGE, affecting only platform implementors.  It was necessary to fix the
binary file problem on VMS.  (gp.h, gp_*.c)

Version 3.46(limited) (9/4/95)
=====================

This is the "serious beta test" release for the next public release.  It
finishes implementing RasterOp in the graphics state, and the remaining
commonly used parts of setpagedevice.

Documentation
-------------

Documents some possible problems when building with DJGPP v2.0-beta.
(make.doc)

Adds documentation on using Ghostscript as a PDF interpreter.  (use.doc)

Notes linking problems with the Watcom 10.0 environment.  (make.doc)

Procedures
----------

Fixes bugs:
	- The rule for $(ccfonts).dev was wrong.  (gs.mak)

Makes some additional filters into 'features'.  (devs.mak, gs.mak)

Splits off 2 new makefiles from gs.mak, which had gotten very large: lib.mak
(graphics library) and int.mak (interpreters).  (tar_cat, tar_cat.bat,
*.mak)

Adds a new 'config-clean' target that may be helpful in changing
configuration definitions.  (gs.mak)

Notes in the relevant makefiles that on Unix and DVX systems, one should not
edit 'makefile' or the concatenated makefile, but should edit the individual
subfile and run tar_cat.  (ansihead.mak, cc-head.mak, dgc-head.mak,
gcc-head.mak, devs.mak)

Updates the Watcom makefiles to handle Watcom release 10.5, in which many
executables moved to different directories.  (watc.mak, watcwin.mak,
wccommon.mak)

Adds a pdf2ps shell script.  (pdf2ps, pdf2ps.bat)

Adds a -sFONTMAP= switch to specify the name of the Fontmap file.
(gs_fonts.ps)

Adds a -u<name> switch to undefine a name from systemdict.  (interp.h, gs.c,
iinit.c)

Adds a -dFIXEDRESOLUTION switch to parallel -dFIXEDMEDIA.  Makes -g set
FIXEDMEDIA and -r set FIXEDRESOLUTION.  (gs_init.ps, gs_setpd.ps, gs.c)

Changes some build procedures to avoid problems with read-only source files.
(gs.mak, int.mak, lib.mak)

Utilities
---------

Adds a utility for emulating the CIE color mapping algorithms.  (docie.ps)

Drivers
-------

Changes the x11alpha device so that it uses 32-bit pixels with 8 bits of
alpha.  (gdevxalt.c)

Updates the Epson Stylus Color driver to Gunther Hess's release 1.17.
(devs.mak, unix-end.mak, devices.doc, stcolor.ps, gdevstc.h, gdevstc*.c)

Updates the alternate X drivers for the change from PageSize to MediaSize.
(gdevxalt.c)

Makes Duplex an optional parameter of printer devices rather than of all
devices.  (gdevprn.h, gxdevice.h, gsdparam.c, gdevdjet.c, gdevprn.c)

Platforms
---------

Makes pipes (%pipe% file syntax) a selectable option on Unix platforms,
rather than always being included.  (ansihead.mak, cc-head.mak,
gcc-head.mak, ugcclib.mak, unixtail.mak)

Interpreter
-----------

Fixes bugs:
	- colorimage, and the dictionary form of image with
MultipleDataSources = true, didn't check that all the data sources were of
the same type.  (zpaint.c)
	- colorimage, and dictionary-type images with MultipleDataSources =
true, usually didn't work properly with files.  (zpaint.c)
	- grestoreall left a dangling pointer to the transfer function
cache.  (gsstate.c)
	- Changes made by setpagedevice could get 'lost' and not installed
in the current page device dictionary.  (gs_setpd.ps)
	- The Install procedure was called before the new page device
dictionary had gotten installed.  (gs_setpd.ps)
	- If a grestore/grestoreall/restore/setgstate operation switched
page devices, the new page device didn't get installed properly.
(gs_setpd.ps, opextern.h, zdevice2.c, zdps1.c)
	- If the current screen was a Type 1 halftone, currentscreen and
currentcolorscreen returned frequency = 60, angle = 0 rather than the
Frequency and Angle from the halftone (see Adobe TN 5085).  (gs_dps1.ps,
gs_init.ps)
	- setscreen with a Type 1 halftone dictionary didn't insert the
frequency and angle into the dictionary (see Adobe TN 5085).  (gs_dps1.ps)
	- upath didn't include a trailing moveto in the bounding box.
(gs_dps1.ps, zpath1.c)
	- setpagedevice didn't automatically rotate or scale the image when
necessary.  (gs_setpd.ps, zmedia2.c)

Moves the RasterOp operators to a separate file.  (iutil.h, iutil.c,
zgstate.c, zrop.c)

Eliminates the unnecessary "wrapper" around .setdevice.  (zdevice2.c)

Establishes the convention that all interpreter callbacks into PostScript
code use procedure names that begin with %; documents this in gs_init.ps.
Changes Type1BuildChar and Type1BuildGlyph to %Type1BuildChar and
%Type1BuildGlyph.  (gs_init.ps, gs_type1.ps, zfont0.c, zfont1.c)

Changes image / imagemask / colorimage for the new library API.  (zimage2.c,
zpaint.c)

Reorganizes font loading to make compiled fonts and Fontmap interact better
with each other.  (gs_ccfnt.ps, gs_fonts.ps, gs_init.ps, gs_res.ps)

Implements parameter collection for the new CIEBasedDEF[G] color spaces, but
doesn't actually implement the color spaces themselves.  (icie.h, zcie.c,
zcrd.c)

Renames iconfig.c as iconf.c to avoid problems with read-only source files.
(iconf.c)

Interpreter (PDF)
-----------------

Fixes bugs:
	- PDF to PostScript conversion didn't work.  (pdf_main.ps)

Shifts most of the work in the PDF interpreter from the reader to the
ProcSet.  This simplifies the code considerably and also makes it easier to
modify.  (gs_pdf.ps, pdf_draw.ps, pdf_font.ps, pdf_main.ps)

Library
-------

Fixes bugs:
	- 'static' was omitted in a place that some compilers require it.
(gxccman.c)
	- Some compilers don't allow a variable with the same name as a
preprocessor macro with arguments.  (gscie.c)
	- Some places did a "return -1" rather than a proper error return.
(gsdevice.c, gxclist.c)
	- An external declaration had a typo.  (gsrop.h)
	- An extra semicolon upset some compilers.  (gzpath.h)
	- Printer devices that didn't use the standard macros for generating
their procedure vector wound up being considered as non-page devices.
(gdevprn.c)
	- Some compilers truncated identifiers longer than 31 characters.
(gscspace.h, zcie.c, gscie.c)
	- upath didn't include a trailing moveto in the bounding box.
(gspath.h, gspath1.c)
	- RasterOp value 126 returned an incorrect result.  (gsroptab.c)

Finishes implementing RasterOp in the graphics state.  (gdevmrop.h, gsrop.h,
gsropt.h, gsstate.h, gxbitmap.h, gxcindex.h, gxdcolor.h, gxdevice.h,
gzstate.h, gdevmrop.c, gscolor.c, gsdevice.c, gsimage.c, gsimage1.c,
gsimage2.c, gsimage3.c, gspcolor.c, gsrop.c, gsstate.c, gxacpath.c,
gxccache.c, gxcht.c, gxcmap.c, gxdither.c, gxdraw.c, gxht.c)

Changes forwarding devices so they forward get_bits by default.  This
probably doesn't affect any existing code.  (gxdevice.h, gsdevice.c)

Changes the API for gs_image[mask]_init to pass a structure rather than a
very large number of scalars.  THIS IS A NON-BACKWARD-COMPATIBLE CHANGE,
motivated by the addition of further image parameters to support RasterOp.
Since there are no external clients of the library yet, it shouldn't matter.
(gsimage.h, gsimage.c, gslib.c, gxccache.c)

Redefines the device "page size" as being the size of the actual media,
changing the name of the gx_device PageSize member to MediaSize, the name of
the PageSize device parameter to .MediaSize (but keeping PageSize as
equivalent, for backward compatibility), and the name of the
gx_device_set_page_size procedure to gx_device_set_media_size (keeping the
old name as a macro).  THIS IS A NON-BACKWARD-COMPATIBLE CHANGE.  It is
necessary to make setpagedevice work, and to avoid confusion about what
"page size" means.  It potentially affects any device driver, but almost
none of the device drivers distributed with Ghostscript are affected, and
those have been updated.  (gsparam.h, gxdevice.h, gsdevice.c, gsdparam.c,
gspath.c)

Renames gconfig.c as gconf.c to avoid problems with read-only source files.
(gconf.c)

Adds an API procedure for setting a bitmap pattern.  (gscolor2.h,
gspcolor.c)

Version 3.45(limited) (8/27/95)
=====================

The purpose of this release is to fix some minor bugs reported by commercial
licensees, and to add two enhancements: optional RenderTable interpolation
for CIE color, and reducing the temporary space used during character
caching (also for a licensee).

Documentation
-------------

Notes that the only valid return values from get_alpha_bits are 1, 2, and 4.
(drivers.doc)

Notes that the get_bits driver procedure will return a pointer to aligned
data, but does not require the caller's data area to be aligned.
(drivers.doc)

Procedures
----------

Fixes bugs:
	- Many of the printer and file output drivers in devs.mak still
included gdevprn.$(OBJ) in their dependencies.  (devs.mak)
	- PDEVH was used before it was defined.  (devs.mak)
	- GENCONF_XE was used before it was defined.  (unixhead.mak,
unix-end.mak)

Makes it possible to switch sfile implementations without editing gs.mak.
(gs.mak)

Makes it possible to specify alternate compiled font tables without editing
gs.mak.  (gs.mak)

Allows quoted arguments in @-files, e.g.,
	-sOutputFile="a file name with spaces"
(gs.c)

Utilities
---------

Fixes bugs:
	- The ps2ascii script could fail to delete temporary files in case
of an abnormal exit.  (ps2ascii)

Drivers
-------

Fixes bugs:
	- The MS Windows printer capability test was wrong.  (gdevwpr2.c)
	- The MS Windows and OS/2/PM displays weren't page devices.
(gdevwdib.c, gdevpm.c)

Gets rid of all direct references to dev->PageSize in drivers.  (gdevl256.c,
gdevvglb.c)

Platforms
---------

Fixes bugs:
	- The 32-bit MS Windows configuration file for the Borland C++
compiler was missing from the fileset.  (bcc32.cfg, tar_gs)

Makes the printer devices in the OS/2 implementation capable of outputting
directly to the print spooler.  (use.doc, gp_os2.c)

Makes printing on Windows NT and Windows 95 use the printer queue.
(gp_mswin.c, gswin32.rc)

Interpreter
-----------

Fixes bugs:
	- Copying a null device produced an uninitialized pointer.
(gsdevice.c)
	- The dictionary returned by deviceinfo wasn't read-only.
(gs_lev2.ps)
	- If a filter's init code failed, an entry on the operand stack
(usually the top) could be smashed.  (files.h, zfile.c, zfilter.c)

Adds const in a few places that needed it.  (zwppm.c)

Adds interpolation to the CIE RenderTable lookup.  (icie.h, zcie.c, zcrd.c)

Interpreter (PDF)
-----------------

Allows PDF files with control-character garbage at the end, and up to 250
characters of garbage at the beginning.  The latter is only supported by
runpdf, not by run.  (pdf_base.ps, pdf_main.ps)

Streams
-------

Fixes bugs:
	- A 1-D CCITTFaxDecode stream could give an error if an input buffer
boundary fell just before a 0-length termination code.  (scfx.h, scfd.c)

Library
-------

Fixes bugs:
	- A variable was used before being set, which could cause band
devices to become confused when processing colored halftones.  (gxclist.c)
	- Some of the color and tile bookkeeping for band lists was wrong
(as of 3.44), causing tiled areas to be filled with garbage.  (gxclist.c,
gxclread.c)
	- Colored Patterns showed up blank on devices whose native
representation of `black' was a non-zero value.  The fix removes the
'cached' member of the gx_device structure, and requires monobit memory
devices to have a palette; this is a NON-BACKWARD-COMPATIBLE CHANGE for
anyone who was foolish enough to statically initialize a gx_device structure
without using the macros in gxdevice.h or gdevprn.h.  (gdevmem.h,
gxdevice.h, gxdevmem.h, gdevm1.c, gdevmrop.c, gsdevice.c, gxcpath.c,
gxdither.c)

Provides the framework for band devices to implement alpha (anti-aliasing).
(gxcldev.h, gdevprn.c, gsdevice.c, gxclist.c, gxclread.c)

Implements an efficient API for enumerating paths using device coordinates.
(gspath.h, gxpath.h, gzpath.h, gspath1.c, gxpath2.c)

Changes the character cache logic so that when rasterizing large
anti-aliased characters, it converts the oversampled bits to alpha values on
the fly rather than waiting until it has rasterized the entire character.
This saves a lot of temporary space, at the expense of some extra time and
lower quality results for Type 3 characters that don't use a single fill or
imagemask operation to draw the character.  This enhancement requires adding
a member to the gx_device structure (max_fill_band), which is a
NON-BACKWARD-COMPATIBLE CHANGE for badly written drivers (see above).
(gxchar.h, gxdevice.h, gxpaint.h, gdevabuf.c, gschar.c, gspaint.c,
gxccache.c, gxccman.c, gxfill.c)

Changes the palette member of memory devices from gs_string to
gs_const_string.  (gdevmem.h, gxdevmem.h, gdevmem.c, gdevm1.c)

Starts to decouple halftoning from the graphics state machinery, so
it can be applied after banding rather than before.  (gxdcolor.h,
gxdht.h, gxdither.h, gzht.h, gxcmap.c, gxdither.c, gxdraw.c)

Starts to decouple path filling from the graphics state machinery, so
that we can pass paths through band lists.  (gxpaint.h, gxfill.c)

Adds interpolation to the CIE RenderTable lookup.  This is optional, enabled
by #define CIE_RENDER_TABLE_INTERPOLATE in gscie.h.  (gscie.h, gxctable.h,
gscie.c, gxctable.c)

Version 3.44(limited) (8/21/95)
=====================

This includes a few bug fixes, but its main purpose is to add two new
features: monobit and 8-bit gray-scale RasterOp (at the driver level, not at
the gstate level yet), and (compressed) band lists in RAM.  Of course, these
new features may have introduced new bugs!

Documentation
-------------

Adds contact information for a user working on NeXT machines.  (README)

Notes that Ghostscript runs on FreeBSD.  (README)

Adds copy_rop (the RasterOp operation) to the driver interface.
(drivers.doc)

Adds FONTPATH information for more operating systems.  (use.doc)

Procedures
----------

Fixes bugs:
	- The tar_cat script needed a #!/bin/sh to execute correctly on all
platforms.  (tar_cat)
	- There were a number of minor errors in the makefiles.  (gs.mak,
unixhead.mak)
	- Level 2 configurations without command lists had two undefined
references.  (gs.mak)
	- Some shells required an extra ';' to terminate an 'if' command.
(ugcclib.mak, unix-end.mak, unixtail.mak)

Updates the JPEG code to the officially released version 6 of the IJG
library.  See jpeg.mak for information on where to find this library.
(jpeg/*, jpeg.mak, *.mak, modules.lis)

Adds a definition of XEAUX to the makefiles to parallel CCAUX, primarily for
cross-compilation environments.  All references to <some-program>$(XE) must
be replaced by $(<SOME-PROGRAM>_XE), where some-program={$(GS), ansi2knr,
echogs, genarch, genconf, geninit}.  This is a NON-BACKWARD-COMPATIBLE
CHANGE, required in order for the makefiles to work in cross-compiled
environments.  (For non-cross-compiled environments, it currently doesn't
matter.)  (gs.mak, *.mak)

Utilities
---------

Updates ps2ai.ps to version 2.13.  (ps2ai.ps)

Changes all the utility shell scripts to include #!/bin/sh, to use exec, and
to pass the original arguments using "$@".  (bdftops, font2c, gsbj, gsdj,
gslj, gslp, gsnd, wftopfa)

Drivers
-------

Adds the requirement that all page-oriented devices (i.e., those that use
gdevprn.h and implement the print_page procedure) include page.dev in their
dependencies and use $(SETPDEV) rather than $(SETDEV) in their makefile rule
bodies.  THIS IS A NON-BACKWARD-COMPATIBLE CHANGE.  Without this change, the
command list logic (over 25K of unnecessary object code) would have to be
included in every configuration.  (gs.mak, devs.mak, echogs.c)

Adds a user-contributed driver for the Okidata Microline (IBM compatible)
dot matrix printers.  (gdevokii.c)

Adds copy_rop (the RasterOp operation) to the driver interface.  Currently,
only monobit and 8-bit gray-scale devices implement it.  (gxdevice.h,
gsdevice.c)

Adds the ability to read back bits from the display to the x11 devices.
(x_.h, gdevx.c, gdevxalt.c)

Platforms
---------

Makes some minor changes to support QNX.  (stat_.h)

Removes the mswinprn driver from the 16-bit Windows configuration, because
the 64K default data segment overflowed.  (bcwin.mak)

Interpreter
-----------

Fixes bugs:
	- Type 1 fonts didn't accept packed arrays for Subrs or OtherSubrs.
(zchar1.c, zfont1.c)
	- TBCP-encoded files (yes, I know there isn't supposed to be any
such thing) didn't automatically activate TBCP decoding.  (gs_init.ps)
	- Fonts with invalid FID entries weren't detected.  (zfont.c)

Speeds up dictionary operations slightly by removing redundant checks for
nulls.  (zdict.c)

Starts adding support for the new CIEBasedDEF and CIEBasedDEFG color spaces.
(gs_l2img.ps, gs_lev2.ps, igstate.h, zcrd.c)

Adds access operators for RasterOp and transparency in the graphics state.
(They don't actually do anything yet.)  (zgstate.c)

Interpreter (PDF)
-----------------

Fixes bugs:
	- PDFDocEncoding was missing characters 24-31.  (gs_pdf_e.ps)

Moves the definition of pdfmark from systemdict to userdict so that Adobe
PostScript files won't think the interpreter is a distiller.  (gs_pdf.ps)

Library
-------

Fixes bugs:
	- Some JPEG images had bands of garbage alternating with bands of
valid data.  IJG v6 fixed this -- see above.
	- With FPU_TYPE = -1, the cosine routine returned incorrect values
for angles above 270 degrees.  (gsmisc.c)
	- CIE color conversion didn't work on 16-bit systems.  (gscie.h,
gscie.c)

Partially implements reducing the intermediate space for rasterizing
anti-aliased characters by compressing the oversampled representation to an
alpha array incrementally.  (gdevmem.h, gxchar.h, gxdevmem.h, gdevabuf.c,
gschar.c, gspaint.c, gxccman.c)

Starts adding support for the new CIEBasedDEF and CIEBasedDEFG color spaces.
(gscie.h, gscspace.h, gscie.c)

Completes the implementation of band lists in RAM.  To select this feature,
change the definition of cl_impl in gs.mak from clfile to clmem.  (Someday
we'll make this easier.)  (gxclmem.h, gxclmem.c)

Finishes implementing RasterOp and transparency at the driver level for
monobit and 8-bit gray-scale devices, and implements some of the framework
for general multiple-bit-per-pixel devices.  See drivers.doc for
documentation.  (gsropt.h, gxcldev.h, gxclist.h, gdevm1.c, gdevm8.c,
gdevmem.c, gdevmrop.c, gschar.c, gxclist.c, gxclread.c)

Implements the ability to include commands applicable to all bands, rather
than an individual band, in the band list.  Eventually this will be used for
passing halftones through the band list.  (gxcldev.h, gxclist.h, gxclist.c)

Adds support for 2-bit-deep 'word' memory devices.  (gdevmem.h, gxdevmem.c,
gdevm2.c)

Changes the initialization for memory devices so that they determine their
polarity from the device for which they are buffering the image (if any).
This is a subtle change.  (gdevmem.h, gdevmem.c, gdevm1.c, gsdevmem.c)

Version 3.43(limited) (8/10/95)
=====================

Fixes a few more minor bugs, and changes FEATURE selection back to
essentially the way it was before 3.41.

Documentation
-------------

Fixes bugs:
	- A ~ was missing in a URL.  (README)

Adds information about an Amiga port of Ghostscript.  (README)

Removes a file called gs.1.c, which appears to be an obsolete version of
gs.1.

Adds DCX documentation to the PCX driver.  (We don't support DCX yet, but we
might in the future.)  (gdevpcx.c)

Adds information about getting Type 1 fonts from H-P if you have an H-P
PostScript printer.  (use.doc)

Procedures
----------

Fixes bugs:
	- The auxiliary programs wouldn't compile with ANSI compilers that
don't accept K&R syntax.  (ccgs, gs.mak, ugcclib.mak, *head.mak,
unixtail.mak, echogs.c, genarch.c, genconf.c, geninit.c)

Reinstates FEATURE_DEVS in the makefiles, getting rid of FEATURE1..10.  THIS
IS A NON-BACKWARD-COMPATIBLE CHANGE, but it puts things back the way they
were before 3.41, with one exception: compiling the PostScript
initialization code into the executable is now a separate macro
COMPILE_INITS with a definition of 0 or 1, instead of the ccinit 'feature'.
(gs.mak, *.mak, fonts.doc, make.doc)

Adds a CCLEAF macro to the makefiles, for optimizing the compilation of
modules containing only leaf procedures.  (gs.mak, *.mak)

Adds a CONFIG makefile variable that helps in maintaining multiple variants
in a single directory.  (gs.mak, *.mak)

Platforms
---------

Fixes bugs:
	- An extern for exit() (in <stdlib.h>) was omitted.  (gp_vms.c)

Fonts
-----

Reorganizes the compiled font facility so that fonts can be compiled and
turned into a library by third parties.  (gs.mak, font2c.ps, gs_ccfnt.ps,
ccfont.h, iccfont.c, ccfontab.c)

Interpreter
-----------

Fixes bugs:
	- internaldict was implemented as a dictionary in systemdict and an
operator in userdict, rather than as an operator in systemdict.  This caused
a noaccess error when loading certain Type 1 fonts.  (gs_init.ps,
gs_type1.ps)
	- xfonts couldn't handle modified encodings.  (zfont2.c)

Changes the build date printout in the help message to YYYY-MM-DD.  (gs.c)

Adds native support for Multiple Master fonts (WeightVector).  (zfont1.c)

Implements sin and cos more efficiently (by table lookup with linear
interpolation) on machines with slow (or no) floating point.  (zmath.c)

Separates out the code for 'reading' the .ps initialization files, for the
new COMPILE_INITS arrangement.  (imain.h, gconfig.c, gsmain.c, iconfig.c,
iccinit0.c, iinit.c)

Streams
-------

Fixes bugs:
	- The CCITTFaxDecode filter could read up to 3 bytes beyond EOD.
This fix doesn't quite cover all cases, but at least it makes things better.
(ghc.h, sbhc.c, scfd.c)

Library
-------

Fixes bugs:
	- After a nocurrentpoint error from a show operation with a
composite font, the bookkeeping was confused and could cause an access
error.  (gschar.c)
	- xfonts couldn't handle modified encodings.  (gsccode.h, gxchar.h,
gxfont.h, gxxfont.h, gschar.c, gxccache.c)

Makes .charboxpath able to use cached character information.  (gxchar.h,
gschar.c)

Adds native support for Multiple Master fonts (OtherSubrs 14-18).
(gxfont1.h, gstype1.c)

Improves the hashing functions for the character cache.  (gxfcache.h,
gxccman.c)

Adjusts the character oversampling algorithm to reduce thickening for
devices with alpha capability.  (gsbitops.c)

Improves the encoding of the band list for certain kinds of small
rectangles.  (gxcldev.h, gxclist.c, gxclread.c)

Implements sin and cos efficiently on machines with slow (or no) floating
point.  (gxfarith.h, gsmatrix.c, gsmisc.c, gspath1.c)

Version 3.42(limited) (8/2/95)
=====================

Fixes a few significant problems in 3.41, and brings the DLL code up to
date.

Documentation
-------------

Fixes bugs:
	- language.doc still referred to rectappend rather than .rectappend.
(language.doc)

Adds documentation on the Macintosh port.  (readme, make.doc)

Updates the DLL documentation.  (dll.doc)

Documents the BCP and TBCP filters as non-experimental.  (language.doc)

Procedures
----------

Changes the build date printout to YYYY-MM-DD.  (gs_init.ps)

Platforms
---------

Fixes bugs:
	- The VMS build script had gotten out of sync with the makefiles
(again).  (vms.mak, modules.lis)

Brings the MS Windows and OS/2 platforms up to date with the rest of the
code, including DLL support for OS/2.  (os2.mak, gsdll*.def, gdevswn.c,
gdevpm.c, gdevwdib.c, gp_mswin.c, gp_os2.c, gsdll.c, gsmain.c)

Adds a new platform-specific routine gp_do_exit, as an alias for the C
library `exit' call.  (gp.h, gsdll.c, gsmain.c, gp_*.c)

Interpreter
-----------

Fixes bugs:
	- .forgetsave at the outermost level didn't clear the l_new bit,
causing changes to be undone improperly.  (isave.c)
	- A 'void' formal parameter list upset some compilers (as it should
have).  (gsmain.c)

Adds a .charboxpath operator that appends to the current path the bounding
boxes of the characters of a string.  (zchar.c, zchar1.c)

Streams
-------

Fixes bugs:
	- A procedure was declared private inconsistently.  (siscale.c)

Library
-------

Fixes bugs:
	- The library test program didn't do a necessary initial gsave.
(gslib.c)
	- The fix for landscape monobit images in 3.41 could smash memory.
(gsimage1.c)
	- 1-pixel-wide lines drawn with image or imagemask still disappeared
sometimes.  (gsimage.c)

Does some more preparatory work for the implementation of command lists in
RAM.  (gdevprn.h, gxclio.h, gxclist.h, gxclfile.c, gxclist.c, gxclread.c)

Adds a gs_charboxpath procedure that appends to the current path the
bounding boxes of the characters of a string.  (gschar.h, gscpm.h,
gstype1.h, gxchar.h, gxpath.h, gxtype1.h, gzstate.h, gschar.c, gspaint.c,
gstype1.c, gxpath.c)

Version 3.41(limited) (7/27/95)
=====================

Another incremental release with bug fixes and customer-requested
enhancements.  This release was intended to include the full setpagedevice
media matching and adjustment algorithm, but we discovered some
architectural problems during development, and have postponed it.

Documentation
-------------

Replaces the build instructions for NeXTSTEP with more up-to-date and
accurate ones.  (make.doc)

Notes that some extra manual steps are required when cross-compiling.
(make.doc)

Documents how to define new 'features' in the makefile.  (gs.mak)

Procedures
----------

Fixes bugs:
	- The build rule for ccinit.dev was circular.  Fixing this required
a small but NON-BACKWARD-COMPATIBLE change in the way that features are
selected in the makefiles (FEATURE_DEVS replaced by FEATURE1..10).  (*.mak,
fonts.doc, make.doc)

Changes the build rule for gconfig.h to be less likely to overrun MS-DOS's
command line length limit.  (gs.mak)

Adds a -dFIXEDMEDIA switch to indicate that the media size should be
considered fixed after initialization.  (gs_init.ps)

Utilities
---------

Fixes bugs:
	- traceimg.ps incorrectly referred to .stdout.  (traceimg.ps)
	- prfont.ps didn't display unencoded characters correctly.
(prfont.ps)
	- ps2epsi didn't give correct bounding box information.  (ps2epsi,
ps2epsi.ps)
	- ps2epsi produced DSC comments that didn't fully conform to the
Adobe standard.  (ps2epsi, ps2epsi.ps)

Allows viewpbm.ps to take multiple files on the command line.  (viewpbm.ps)

Drivers
-------

Adds a preliminary, contributed PNG driver.  THIS IS NOT USABLE YET -- DON'T
TRY TO USE IT.  (png.mak, gdevpng.c)

Increases the maximum allowable scan line width for the TIFF drivers from
5183 pixels to 12863 pixels.  (scf.h)

Platforms
---------

Updates the MS Windows DLL code to export the new, suspendable run_string
interface.  (gsdll.h, gsdll.c, dll.doc)

Fonts
-----

Fixes bugs:
	- There were several errors in cfonts.mak.  (cfonts.mak)
	- The compiled fonts option didn't offer both free and standard
configurations.  (gs.mak)
	- A bug in the handling of Encoding resources prevented compiled
fonts from working.  (gs_res.ps)

Adds a little more support for CID-keyed fonts.  They still aren't anywhere
near usable.  (gs_cidfn.ps, gs_type1.ps)

Adds a new Fontmap for Solaris 2.3.  (Fontmap.Solaris)

Adds support for Type 4 fonts (Type 1 fonts with their own BuildChar
procedures), including the CCRun procedure in internaldict.  (gs_fonts.ps,
gs_res.ps, gs_type1.ps)

Interpreter
-----------

Fixes bugs:
	- showpage and copypage didn't honor NumCopies in a page device.
(gs_setpd.ps, zdevice2.c)
	- currentpagedevice returned incorrect information if the current
device wasn't a page device.  (gs_setpd.ps)
	- currentpagedevice didn't guarantee the presence of InputAttributes
and OutputAttributes.  (gs_setpd.ps)
	- The l_new bit wasn't set properly when a dictionary changed from
packed to unpacked keys, leading to unnecessary saves.  (idict.c)
	- Streams requiring intermediate buffering could read ahead too far,
causing input data to be skipped.  (zfilter.c)
	- cshow didn't reset the font to the base font when calling the
procedure.  (zchar2.c)
	- The Install procedure in a page device didn't set the default CTM.
(gs_setpd.ps, zmatrix.c)
	- findlibfile didn't handle special files like %stdin correctly.
(zfile.c)
	- setpagedevice didn't implement media matching.  (gs_setpd.ps,
zdevice2.c, zmedia2.c, zmatrix.c)
	- Some floating point numbers didn't print out with enough digits to
read back in with the identical value.  (iutil.c)
	- Integers that overflowed 31 bits (but not 32 bits) were converted
to negative integers rather than correct positive reals.  (iscannum.c)

Removes an experimental operator that called the image scaling/interpolation
code.  (zimage2.c)

Adds a -sSUBSTFONT=<fontname> switch that substitutes the given font for all
unknown fonts, bypassing the normal intelligent substitution algorithm.
(gs_fonts.ps)

Adds the Revision system parameter.  (zmisc2.c)

Adds a .knownundef operator that does an undef and returns true iff the key
was formerly present.  (zdict.c)

Makes the maximum length of names be 256 if EXTEND_NAMES is being used, 16K
otherwise.  (inamedef.h, iname.c)

Adds internaldict.  (gs_init.ps, iinit.c)

Adds support for Type 4 fonts.  (bfont.h, zchar.c, zchar1.c, zfont1.c,
zfont2.c)

Changes .encodingdict to EncodingDirectory, for compatibility with Adobe
interpreters.  (gs_init.ps, gs_kanji.ps, gs_res.ps)

Adds superexec, an undocumented operator that is equivalent to exec but
suppresses all invalidaccess checks.  NOT COMPLETED YET; currently superexec
is equivalent to exec.  (zcontrol.c)

Interpreter (PDF)
-----------------

Fixes bugs:
	- .stderr was used but is no longer defined.  (pdf_base.ps)

Streams
-------

Fixes bugs:
	- Not all streams initialized their state pointer.  (stream.c,
sfile.c, sfileno.c)

Adds a filter for the smoothed image scaling algorithm.  Eventually this
filter will require very little intermediate storage; right now it still
needs to buffer the entire intermediate image.  (siscale.h, siscale.c)

Increases the maximum allowable scan line width for the CCITTFaxEncode
filter from 5183 pixels to 12863 pixels.  (scf.h)

Library
-------

Fixes bugs:
	- setpagedevice didn't update NumCopies correctly.  (gdevprn.c,
gsdparam.c)
	- The newly optimized code for monobit bitmaps could cause an
out-of-bounds memory access and/or make unaligned references.  (gsimage1.c)
	- setpagedevice with unknown keys could cause an /undefined error.
(gsdparam.c)
	- cshow didn't reset the font to the base font when calling the
procedure.  (gschar.h, gschar.c)
	- The Install procedure in a page device didn't set the default CTM.
(gzstate.h, gschar.c, gscoord.c, gsdevice.c)
	- Very non-linear EncodeABC procedures in a color rendering
dictionary could produce very inaccurate results.  (gscie.h, gscie.c)
	- The line_ptrs pointer in memory devices didn't get relocated if
the bitmap was moved during garbage collection, leading to memory smashing.
(gdevmem.c)
	- setpagedevice didn't implement media matching.  (gsdparam.c,
gscoord.c)
	- 'word' memory devices weren't recognized as memory devices.
(gdevmem.c)
	- makeimagedevice allocated, and then didn't free, an unnecessary
palette for monobit devices.  (gsdevmem.c)
	- The hack for 1-bit-wide images didn't work consistently,
particularly in landscape orientation.  (gsimage.c, gsimage0.c)

Adds an .IgnoreNumCopies page device parameter that causes #copies and
NumCopies to be ignored.  (gxdevice.h, gsdevice.c, gsdparam.c)

Removes the .IsPageDevice device parameter.  (gsdparam.c)

Converts the image scaling/interpolation code to a filter.  (gximage.h,
gsimage.c, gsimage0.c, gsimage3.c)

Adds support for Type 4 fonts.  (gxfont.h)

Adds a default implementation of parameter lists, designed to be usable
easily from C code.  (gsparam.h, gsparam.c)

Version 3.40(limited) (6/28/95)
=====================

This is another incremental limited release for delivery of a couple of
important bug fixes (pixel 'holes' in rotated images, setpagedevice errors
on some platforms) and an enhancement (architectural support for band lists
in RAM).

Documentation
-------------

Fixes bugs:
	- The FTP location of the EMX DLLs was incorrect.  (use.doc)

Procedures
----------

Fixes bugs:
	- A couple of build rules for IJG v6 were omitted.  (jpeg.mak)

Utilities
---------

Fixes bugs:
	- prfont.ps wouldn't print more than 128 unencoded characters.
(prfont.ps)

Platforms
---------

Fixes bugs:
	- setpagedevice often caused /undefined errors on MS Windows and
OS/2 platforms.  (gdevmswn.c, gdevpm.c)
	- The VMS module list had gotten out of sync with the makefiles
(again).  (modules.lis)

Interpreter
-----------

Fixes bugs:
	- A couple of casts betwen char * and byte * were omitted.
(gsmain.c)
	- gs_[main_]run_file_open wasn't exported properly.  (imain.h,
main.h, gsmain.c)

Streams
-------

Changes the DCTEncode filter to return an error if it wasn't supplied enough
data before being closed.  (sdcte.c)

Library
-------

Fixes bugs:
	- The coordinate computations for all filling operations were
slightly inaccurate, leading to pixel 'holes' in rotated images.  (gxdda.h,
gximage.h, gsimage*.c, gxdraw.c, gxfill.c)

Undoes an "optimization" (inlining the normal, fast case of a procedure)
that actually hurt performance.  (gxclist.c)

Refactors the command list code so that it in the future it will be able to
store command lists either in RAM or in the file system.  (gdevprn.h,
gxcldev.h, gxclio.h, gxclist.h, gdevprn.c, gxclfile.c, gxclist.c,
gxclread.c)

Changes the interface to the path filling code to take separate X and Y
adjustment values.  (gxpaint.h, gspaint.c, gxfill.c)

Makes the command list allocate a small tile cache if the device doesn't
need halftones.  (gxclist.c)

Version 3.39(limited) (6/24/95)
=====================

This is again an incremental release primarily for delivery of enhancements
(suspendable string input in particular) to commercial customers, and with a
few bug fixes.

Documentation
-------------

Notes that PDF files and repositioning PostScript files do not work if
Ghostscript was compiled with VAX C.  (use.doc)

Notes the requirement for EOD lookahead in decoding filters.  (strimpl.h)

Procedures
----------

Fixes bugs:
	- There were a number of undefined or used-before-defined variables
in the makefiles.  (devs.mak, dvx-head.mak, unixhead.mak, gs.mak)
	- Some commands in the makefile exceeded the MS-DOS limit of 120
characters.  (gs.mak)

Adds a -P and -P- switch to control whether the search path automatically
includes `.' as its first element.  Moves the default value of this choice
(SEARCH_HERE_FIRST) from gsmain.c to iminst.h.  (iminst.h, gs.c, gsmain.c,
use.doc)

Makes some makefile changes in anticipation of the IJG v6 release.  (*.mak)

Utilities
---------

Fixes bugs:
	- font2c generated invalid C procedure names from font names that
contained non-alphanumerics other then '-'.  (font2c.ps)
	- font2c generated a single element of incorrect type for numeric
arrays of zero length.  (font2c.ps)

Platforms
---------

Fixes bugs:
	- The VMS build scripts had gotten out of sync (again).  (vms*.mak,
modules.lis)

Fonts
-----

Makes the FONTPATH directory scanner accept fonts that begin with
%!PS-AdobeFont or %!FontType1 with no following `-'.  (gs_fonts.ps)

Interpreter
-----------

Fixes bugs:
	- eq and ne on arrays or dictionaries required read access.
(zrelbit.c)
	- An include was missing.  (zcsindex.c)
	- .forgetsave at the outermost level didn't reset the l_new flag in
changed slots, leading to an anomalous (although perhaps not harmful) state.
(isave.c)
	- Dictionary growing or unpacking would both save and free the old
keys array, leading to a dangling reference.  (idict.c)

Changes gs_interpret so that for .quit with a negative operand <= -100,
gs_interpret returns e_Fatal rather than the operand.  THIS IS A
NON-BACKWARD-COMPATIBLE CHANGE, but as far as we know, it doesn't affect
anyone.  (interp.c)

Adds an API to allow feeding string input to the interpreter in pieces.
(errors.h, imain.h, main.h, gs.c, gsmain.c, interp.c, zcontrol.c, zfilter.c)

Adds new predicates .identeq and .identne that test "pointer equality", even
for numbers and strings.  (iutil.h, iutil.c, zrelbit.c)

Changes a few uses of return_error to return in places that don't lead
directly to a PostScript error.  (idict.c)

Streams
-------

Fixes bugs:
	- The logic for skipping up to a 0xff byte when decoding JPEG data
could skip too much.  (sdctd.c, sjpegd.c)
	- If a buffer boundary fell in the middle of, or just before, an
EOD, some decoding filters could stop reading too soon.  (sbcp.c, smtf.c,
sstring.c)

Makes some minor changes in anticipation of the IJG v6 release.
(gsjmorec.h)

Library
-------

Fixes bugs:
	- A declaration should have been removed.  (gsdll.c)
	- The library initialization/termination API wasn't declared.
(gslib.h, gsinit.c, gsmain.c)
	- A variable and a preprocessor macro with the same name confused
VAX C.  (gxclist.c)
	- Image devices with depth 2-8 and only gray shades in the palette
didn't set color_info correctly.  (gsdevice.c)

Speeds up unrotated black-and-white images further by making them render
directly into a memory device when possible.  (gxdevmem.h, gsimage1.c)

Version 3.38(limited) (6/18/95)
=====================

This release incorporates several customer-requested enhancements (cleaner
separation of the graphics library from the interpreter, option for >64K
names, true garbage collection of names, better handling of halftones on
band devices).  It is intended primarily for those customers, but is
intended as a dry run for the next public release.

Documentation
-------------

Fixes bugs:
	- gx_bitmap had not been updated to gx_tile_bitmap.
(drivers.doc)

Procedures
----------

Fixes bugs:
	- The man page extension in the Unix makefiles was still $(manext),
not $(man1ext).  (unix-end.mak)
	- 'make clean' didn't remove gs_init.c.  (gs.mak)

Restructures the makefiles to better separate the language interpreters from
the graphics core.  (gs.mak)

Adds a -dNOPROMPT switch to suppress the end-of-page prompts (but still wait
for the user to type a newline).  This is different from -dNOPAUSE, which
suppresses both the prompts and the wait.  (gs_init.ps)

Utilities
---------

Replaces the mergeini.ps program with an equivalent (actually slightly
better) version written in C.  (gs.mak, *.mak, psfiles.doc, use.doc,
geninit.c)

Drivers
-------

Fixes bugs:
	- The color DeskJet drivers wouldn't compile with a K&R compiler,
because some of the procedure definitions weren't in the restricted syntax
that ansi2knr requires.  (gdevcdj.c)
	- The color DeskJet drivers wouldn't compile because of a bug in
Sun's cc.  (gdevcdj.c)

Changes the BJ-10e(x) margins to be identical to those of the BJ-200.
(gdevbj10.c)

Changes the LaserJet margins in response to a user's request.  (gdevdjet.c)

Changes the psmono driver to produce slightly larger files that execute
faster on typical Level 1 printers.  (gdevpsim.c)

Changes the psmono driver so that it does not scale the image to fit the
page size, but instead scales it to be the same physical size on the page.
THIS IS A NON BACKWARD COMPATIBLE CHANGE.  However, for full-page images, it
will not have any visible effect.  (gdevpsim.c)

Platforms
---------

Fixes bugs:
	- There were some problems associated with printing in 32-bit
Windows environments.  (gp_mswin.c)
	- The IBM RS/6000 needs both <time.h> and <sys/time.h>.  (time_.h)

Adds the PDF interpreter to the standard MS Windows configuration.
(bcwin.mak)

Fonts
-----

Fixes bugs:
	- The entry for Courier-BoldItalic in cfonts.mak incorrectly named
it as Courier-Italic.  (cfonts.mak)
	- The files for Courier-Italic in cfonts.mak were inconsistently
named ncrri instead of ncri.  (cfonts.mak)
	- The rules in cfonts.mak covered only the fonts distributed with
the free versions of Ghostscript, omitting some of the standard set of 35.
(cfonts.mak)
	- The maximum number of stem hints per character in Type 1 fonts
wasn't large enough for complex Asian characters. (gxtype1.h)

Adds a -dNOFONTMAP switch to suppress loading the Fontmap file.
(gs_init.ps, gs_fonts.ps)

Interpreter
-----------

Fixes bugs:
	- One of the GC marking routines for halftones had a typo,
possibly leading to an invalid access.  (zht2.c)
	- The GC could store beyond the end of the mark stack,
possibly smashing some characters of a string or name.  (igc.c)
	- If the allocator allocated a new ref object from a
freelist, the bookkeeping for the current ref object could get
confused.  (ialloc.c)
	- The GC didn't remove names properly from the hash table.
(iname.c)
	- If a DOS editor added a ^Z to the end of an initialization file,
an error occurred during initialization.  (gs_init.ps)
	- If an initialization file had any lines longer than 128
characters, .skipeof would get an error.  (gs_init.ps)
	- makepattern could create structures in global VM pointing to
structures in local VM.  (zpcolor.c)
	- The default color rendering dictionary didn't specify large enough
ranges for some intermediate values.  (gs_lev2.ps)
	- Files being freed by a restore weren't unlinked properly, leading
to dangling pointers.  (zfile.c)
	- The interpreter used strlen without a prototype.  (interp.c)
	- Indexed or Separation colors with a CIE base or alternate space
didn't work.  (zcie.c)
	- The Watcom C 10.0 compiler produced incorrect code for an
overlapping structure assignment.  (zcsindex.c)

Removes limit of 64K names, if EXTEND_NAMES is defined at compile
time.  (*.mak, idebug.h, iminst.h, iname.h, gs.c, gsmain.c, idebug.c,
iname.c)

Makes the garbage collector really collect names.  (iname.h, inamedef.h,
isstate.h, igc.c, iname.c, isave.c)

Restructures some files to better separate the language interpreters
from their support code.  (gconfig.c, iconfig.c, iinit.c)

Restructures some files to better separate the language interpreters
from the graphics core.  (iastate.h, iastruct.h, ialloc.c)

Allows the operands of cshow to be in either order on the stack.  Adobe
interpreters apparently allow this, even though it's not documented.
(zchar2.c)

Adds a hack in cvs to truncate non-standard operator names, rather than
giving a rangecheck, to work around the "max err string" problem in some
common error handlers.  (ztype.c)

Changes the print string for unregistered operators from operator_0x... to
@0x....  (iutil.c)

Changes the garbage collector so it tries to allocate a large mark stack, to
avoid going into its 'slow' mode if the mark stack overflows.  (igc.c)

Interpreter (PDF)
-----------

Fixes bugs:
	- Stroked text used the text matrix, rather than just the
CTM, for scaling the line width, which could lead to inappropriately
wide lines.  (gs_pdf.ps)
	- Fonts based on other than a 1000-unit scale (i.e., with a
FontMatrix other than [0.001 0 0 0.001 0 0]) didn't scale Widths to
match the font scaling.  (pdf_font.ps)

Implements the PDF 1.1 color space extensions, except for Lab space.
(gs_pdf.ps, pdf_draw.ps)

Implements the Rotate key for pages.  (pdf_main.ps)

Streams
-------

Fixes bugs:
	- When the garbage collector closed a file stream, the stream
incorrectly attempted to free the buffer.  (stream.c)

Separates out some stream implementations to better distinguish the
graphics core from the language interpreters.  (smtf.h, sfilter1.c,
smtf.c, srld.c, srle.c)

Library
-------

Fixes bugs:
	- Compressing characters being entered in the cache could cause an
invalid memory access.  (gsbitops.c)
	- The setbbox bounding box check was slightly inaccurate.
(gsdps1.c)
	- makepattern could create structures in global VM pointing to
structures in local VM.  (gscolor2.h, gspcolor.c)
	- Out-of-range values during CIE color conversion led to random
results.  (gscie.c)
	- On output devices with non-inverted Y axes (such as MS Windows),
Interpolated images would smash memory.  (gsimage.c)
	- 90 degree rotated zero-width images caused an invalid memory
access.  (gsimage1.c)
	- If #copies was zero, showpage could create bogus empty output
files.  (gdevprn.c)
	- PageCount didn't take #copies into account.  (gsdevice.c)
	- Indexed or Separation colors with a CIE base or alternate space
didn't work.  (gscie.h, gscie.c)

Implements triangular line caps and joins, in anticipation of adding
a PCL5 interpreter.  (gsline.h, gxstroke.c)

Moves some procedures around for better separation of library from
interpreter.  (gsinit.c, gslib.c, gsmain.c, gsmisc.c)

Moves the standard allocator from the interpreter to the library.
(gsalloc.h, gxalloc.h, gxobj.h, gsalloc.c)

Starts to change the representation of paths slightly to make it possible to
identify arcs.  This change is backward-compatible for all code except
callers of gx_path_add_arc.  (gxpath.h, gspath1.c, gxpath.c, gxstroke.c)

Adds some framework for keeping track of RasterOp and "transparency" in the
graphics state, although these don't actually have any effect yet.
(gsrop.h, gsropt.h, gsstate.h, gxcldev.h, gzstate.h, gsrop.c, gsstate.c,
gxclist.c, gxclread.c)

Adds a compile-time option for using the Adobe RGB<->CMYK conversion rules.
(gxdcconv.c)

Adds a driver procedure for identifying band devices.  This change is
backward-compatible for all existing devices.  (gdevmem.h, gxdevice.h,
gsdevice.c, gxclip2.c, gxclist.c, gxcpath.c)

Speeds up gray-scale images on devices requiring banding, and enables
further optimizations, by reintroducing the distinction between banded and
non-banded devices.  (gxdevice.h, gdevprn.c, gsimage1.c)

Reduces the size of the band list for halftoned images by encoding tile
indices more compactly.  (gxcldev.h, gxclist.h, gxclist.c, gxclread.c)

Extends the band list so it can cache more than 256 halftone tiles, and to
make better decisions about tile caching.  (gxcldev.h, gxclist.h, gxclist.c,
gxclread.c)

Version 3.37(limited) (5/11/95)
=====================

Another bug fix release distributed only to customers.

Documentation
-------------

Fixes bugs:
	- Some documentation about parameter lists was incorrect.
(gsparam.h)
	- The documentation did not note that one cannot "pipe" PDF files
into the interpreter.  (use.doc)

Adds documentation for the BJC-600 to devices.doc.  (devices.doc)

Procedures
----------

Changes the debugging switch for OS calls from -Z0 to -Ze, and adds -Z0 for
high-level GC tracing.  (use.doc, gp_unifs.c, ialloc.c, igc.c)

Utilities
---------

Fixes bugs:
	- The ps2ascii shell script included an erroneous @d.  (ps2ascii)

Enhances ps2ascii to output color and rectangle fill/stroke information if
COMPLEX is defined.  (ps2ascii.ps)

Drivers
-------

Fixes bugs:
	- the BJC-600 driver didn't handle BitsPerPixel correctly.
(gdevcdj.c)

Fonts
-----

Fixes bugs:
	- Some buggy Type 1 fonts confused the Type 1 font reader.
(gs_fonts.ps, gs_type1.ps, pdf_font.ps)

Interpreter (PostScript)
-----------

Fixes bugs:
	- .registerencoding didn't accept mixedarrays, which could cause an
error if an encoding was loaded long after initialization.  (zfont2.c)
	- If a program did a lot of saves and restores, the garbage
collector could get invoked much too often.  (iastate.h, ialloc.c, igc.c,
isave.c)

Changes the name of the rectappend operator to .rectappend, since it isn't a
standard PostScript operator.  (zdps1.c)

Interpreter (PDF)
-----------------

Fixes bugs:
	- PDF files didn't interact properly with ps2ascii.  (gs_pdf.ps)
	- setdash wouldn't accept a packed array.  (zgstate.c)
	- PDF files with incorrect generation numbers in object references
produced an error rather than a warning.  (pdf_base.ps)

Version 3.36(limited) (5/4/95)
=====================

This is a limited-distribution release for distributing bug fixes to a few
customers.

Documentation
-------------

Adds some environment variables to the man page.  (gs.1)

Procedures
----------

Adds the psmono device to all 32-bit configurations.  (*.mak)

Moves the psmono and 'bit' devices to DEVICE_DEVS12 to avoid exceeding the
120-character maximum length of the DOS command line.  (*.mak)

Drivers
-------

Changes the pgm[raw] and ppm[raw] drivers so they do *not* automatically
switch to pbm or pgm/ppm respectively if this is possible for the particular
page being rendered; adds pgnm[raw] and pnm[raw] drivers that *do* do this.
THIS IS A NON-BACKWARD-COMPATIBLE CHANGE.  However, existing programs will
still work; they just won't produce the smallest and simplest possible
output.  (devs.mak, gdevpbm.c)

Interpreter
-----------

Fixes bugs:
	- A multi-level restore didn't free gstates allocated by
intermediate saves, causing some global VM to be lost until a garbage
collection.  (isave.h, isave.c, zvmem.c)

Speeds up restore by skipping the scan of the character cache if no new
names have been allocated since the save.  (zfont.c)

Extends the client API to allow for popping return values off the operand
stack.  (imain.h, gs.c, gsmain.c)

Library
-------

Modifies the character oversampling algorithms to help prevent dropouts.
(gsbitops.c, gschar.c)

Version 3.35(internal) (5/2/95)
======================

This is another internal "snapshot" version.

Documentation
-------------

Fixes bugs:
	- Some of the file names in the `man' page had gotten out of date.
(gs.1)
	- Two references to .PageCount hadn't been changed to PageCount.
(language.doc, devarch.doc)

Procedures
----------

Puts writeppmfile back in the standard Unix and DV/X configurations, since
gsftopk uses it.  Also puts the PDF reader in all 32-bit configurations.
(*.mak)

Moves the BMP devices to DEVICE_DEVS11 to avoid exceeding the 120-character
maximum length of the DOS command line.  (bcwin.mak, bcwin32.mak, os2.mak)

Utilities
---------

Fixes bugs:
	- unix-lpr.sh didn't handle 32-bit devices.  (unix-lpr.sh)
	- unix-lpr.sh still used the name .PageCount rather than PageCount.
(unix-lpr.sh)
	- font2c gave an error when trying to write general procedures in
font dictionaries.  (font2c.ps)

Adds a pdf2dsc.ps utility for writing out fake DSC-compliant PostScript code
to invoke the PDF reader, for the benefit of viewer programs that aren't
PDF-aware.  (unix-end.mak, pdf2dsc.ps)

Drivers
-------

Fixes bugs:
	- The TIFF drivers put out incorrect PageNumber values.
(gdevtfax.c)
	- Printer (and file output) devices got closed and reopened
unnecessarily when changing parameters.  (gdevprn.c)
	- Printer (and file output) devices didn't check for invalid formats
following a % in OutputFile.  (devs.mak, gdevprn.c)
	- 1-bit memory devices were not considered page devices, unlike all
other memory devices.  (gsdevice.c)
	- The black-and-white H-P printers didn't close the printer
properly, causing printing not to happen under MS Windows.  (gdevprn.c)
	- Some compilers didn't like initializing a const char * to NULL.
(gdevlbp8.c)

Changes the X Windows driver so that if Ghostview specifies a bounding box,
this also sets ImagingBBox.  (gdevxini.c)

At the request of a customer, adds 1-, 4-, 8-, 24-, and 32-bit-deep memory
devices that store bits in 32-bit units rather than byte units.  (gdevmem.h,
gxdevmem.h, gdevmem.c, gdevm1.c, gdevm2.c, gdevm4.c, gdevm8.c, gdevm16.c,
gdevm24.c, gdevm32.c)

Adds a new MS Windows printer driver, mswinpr2, that uses a DIB rather than
a DDB.  (gdevwpr2.c)

Platforms
---------

Fixes bugs:
	- A routine wouldn't compile because of a bug in the SGI C compiler.
(zcsindex.c)
	- Some declarations were inconsistent when compiling for segmented
environments.  (gscie.c)
	- A routine wouldn't compile because of a bug in the VAX C compiler.
(gscie.c)

Turns on compiler optimization for OS/2; adds PDF support and more devices
for Win32 and OS/2.  (bcwin.mak, bcwin32.mak, os2.mak)

Fonts
-----

Fixes bugs:
	- Font loading used 'setglobal' without binding it, which caused
some EPS files to signal errors.  (gs_fonts.ps)
	- A zero-length string with offset = 0 in a binary object sequence
caused an error.  (iscanbin.c)

Adds a LOCALFONTS switch that causes Ghostscript to load Type 1 fonts into
the current VM, rather than global VM.  According to Adobe, this is what
Adobe printers (but not other interpreters, such as DPS and CPSI) do.
(gs_init.ps, gs_fonts.ps)

Interpreter
-----------

Fixes bugs:
	- The 'note' page size command caused pages to be clipped
improperly.  (gs_statd.ps)

Adds "word" image devices.  (gs_init.ps, zdevice.c)

Starts converting the interpreter to use an explicit instance pointer.  This
is very fragmentary so far and not really supported.  (main.h, gs.c,
gsmain.c, iccinit.c)

Library
-------

Adds "word" image devices.  (gsdevice.h, gsdevice.c)

Removes the requirement that ImagingBBox[0] and [1] be non-negative.  (The
Adobe specification requires this, but Ghostscript supports more general
initial CTMs than the Adobe spec.)  (gsdparam.c)

Version 3.34(internal) (4/18/95)
======================

This is a "snapshot" version made for internal purposes.  It was never
released to anyone.

Documentation
-------------

Updates commprod.doc to be fully consistent with the AGFPL.  (commprod.doc)

Procedures
----------

Fixes bugs:
	- tar_x was out of date.  (tar_x)
	- tar_gs assumed that if any PC executables were present, gs.exe
would exist.  (tar_gs)
	- jpeg.mak said the current IJG version was 5b, but the makefiles
actually referred to version 5a.  (jpeg.mak)
	- The build rule for the LIPS III driver was incorrect.  (devs.mak)
	- Some definitions in the makefiles occurred out of order.
(ansihead.mak, cc-head.mak, gcc-head.mak, unixhead.mak, unixtail.mak)
	- The build rule for dvx-gcc.mak was incorrect.  (unix-end.mak)

Interpreter
-----------

Restructures the CIE caches to move much more of the computation from color
mapping time to cache loading time.  (zcie.c)

Library
-------

Fixes bugs:
	- Color conversion of 12-bit images was very slightly inaccurate.
(gxfrac.h)

Changes the transfer function, black generation, and undercolor removal
caches so that they sample at 1024 points and don't interpolate, rather than
sampling at 256 points and interpolating.  This significantly improves the
speed of colored image rendering.  ****** LIMITED TO 256 POINTS BECAUSE OF
O-STACK SIZE LIMIT. ****** (gxfmap.h, gxcmap.c)

Restructures the CIE caches to move much more of the computation from color
mapping time to cache loading time.  (gscie.h, gscie.c)

Versions 3.33 and before
========================

See the files history3.txt, history2.txt, and history1.txt.
