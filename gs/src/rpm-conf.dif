--- Makefile.backup	Mon Nov 15 18:50:11 1999
+++ Makefile	Mon Nov 15 19:00:20 1999
@@ -56,7 +56,7 @@
 INSTALL_PROGRAM = $(INSTALL) -m 755
 INSTALL_DATA = $(INSTALL) -m 644
 
-prefix = /usr/local
+prefix = /usr
 exec_prefix = $(prefix)
 bindir = $(exec_prefix)/bin
 scriptdir = $(bindir)
@@ -67,14 +67,14 @@
 gsdir = $(datadir)/ghostscript
 gsdatadir = $(gsdir)/$(GS_DOT_VERSION)
 
-docdir=$(gsdatadir)/doc
+docdir=$(prefix)/doc/ghostscript-$(GS_DOT_VERSION)
 exdir=$(gsdatadir)/examples
 GS_DOCDIR=$(docdir)
 
 # Define the default directory/ies for the runtime
 # initialization and font files.  Separate multiple directories with a :.
 
-GS_LIB_DEFAULT=$(gsdatadir)/lib:$(gsdir)/fonts
+GS_LIB_DEFAULT=$(gsdatadir)/lib:/usr/share/fonts/default/ghostscript:/usr/share/fonts/default/Type1
 
 # Define whether or not searching for initialization files should always
 # look in the current directory first.  This leads to well-known security
@@ -146,27 +146,26 @@
 # You may need to change this if the libpng version changes.
 # See libpng.mak for more information.
 
-PSRCDIR=libpng
-PVERSION=10003
+PSRCDIR=/usr/include
+PVERSION=102
 
 # Choose whether to use a shared version of the PNG library, and if so,
 # what its name is.
 # See gs.mak and Make.htm for more information.
 
-SHARE_LIBPNG=0
+SHARE_LIBPNG=1
 LIBPNG_NAME=png
 
 # Define the directory where the zlib sources are stored.
 # See zlib.mak for more information.
 
-ZSRCDIR=zlib
+ZSRCDIR=/usr/include
 
 # Choose whether to use a shared version of the zlib library, and if so,
 # what its name is (usually libz, but sometimes libgz).
 # See gs.mak and Make.htm for more information.
 
-SHARE_ZLIB=0
-#ZLIB_NAME=gz
+SHARE_ZLIB=1
 ZLIB_NAME=z
 
 # Define how to build the library archives.  (These are not used in any
@@ -192,7 +191,7 @@
 # the 2.7.0-2.7.2 optimizer bug, either "-Dconst=" or
 # "-Wcast-qual -Wwrite-strings" is automatically included.
 
-GCFLAGS=-Wall -Wstrict-prototypes -Wmissing-declarations -Wmissing-prototypes -Wtraditional -fno-builtin -fno-common
+GCFLAGS=$(RPM_OPT_FLAGS) -Wall -Wcast-qual -Wpointer-arith -Wstrict-prototypes -Wwrite-strings
 
 # Define the added flags for standard, debugging, and profiling builds.
 
@@ -213,7 +212,7 @@
 #   gcc to accept ANSI-style function prototypes and function definitions.
 XCFLAGS=
 
-CFLAGS=$(CFLAGS_STANDARD) $(GCFLAGS) $(XCFLAGS)
+CFLAGS=$(GCFLAGS) $(XCFLAGS)
 
 # Define platform flags for ld.
 # SunOS 4.n may need -Bstatic.
@@ -249,7 +248,7 @@
 # Note that x_.h expects to find the header files in $(XINCLUDE)/X11,
 # not in $(XINCLUDE).
 
-XINCLUDE=-I/usr/local/X/include
+XINCLUDE=-I/usr/X11R6/include
 
 # Define the directory/ies and library names for the X11 library files.
 # XLIBDIRS is for ld and should include -L; XLIBDIR is for LD_RUN_PATH
@@ -264,9 +263,10 @@
 #XLIBS=Xt SM ICE Xext X11
 
 #XLIBDIRS=-L/usr/local/X/lib
-XLIBDIRS=-L/usr/X11/lib
+#XLIBDIRS=-L/usr/X11/lib
+XLIBDIRS=-L/usr/X11R6/lib
 XLIBDIR=
-XLIBS=Xt Xext X11
+XLIBS=Xt SM ICE Xext X11
 
 # Define whether this platform has floating point hardware:
 #	FPU_TYPE=2 means floating point is faster than fixed point.
@@ -325,23 +325,6 @@
 # devs.mak and contrib.mak for the list of available devices.
 
 DEVICE_DEVS=$(DD)x11.dev $(DD)x11alpha.dev $(DD)x11cmyk.dev $(DD)x11gray2.dev $(DD)x11gray4.dev $(DD)x11mono.dev
-
-#DEVICE_DEVS1=
-#DEVICE_DEVS2=
-#DEVICE_DEVS3=
-#DEVICE_DEVS4=
-#DEVICE_DEVS5=
-#DEVICE_DEVS6=
-#DEVICE_DEVS7=
-#DEVICE_DEVS8=
-#DEVICE_DEVS9=
-#DEVICE_DEVS10=
-#DEVICE_DEVS11=
-#DEVICE_DEVS12=
-#DEVICE_DEVS13=
-#DEVICE_DEVS14=
-#DEVICE_DEVS15=
-
 DEVICE_DEVS1=$(DD)bmpmono.dev $(DD)bmpgray.dev $(DD)bmpsep1.dev $(DD)bmpsep8.dev $(DD)bmp16.dev $(DD)bmp256.dev $(DD)bmp16m.dev $(DD)bmp32b.dev
 DEVICE_DEVS2=$(DD)bmpamono.dev $(DD)bmpasep1.dev $(DD)bmpasep8.dev $(DD)bmpa16.dev $(DD)bmpa256.dev $(DD)bmpa16m.dev $(DD)bmpa32b.dev
 DEVICE_DEVS3=$(DD)deskjet.dev $(DD)djet500.dev $(DD)laserjet.dev $(DD)ljetplus.dev $(DD)ljet2p.dev $(DD)ljet3.dev $(DD)ljet3d.dev $(DD)ljet4.dev $(DD)ljet4d.dev $(DD)lj5mono.dev $(DD)lj5gray.dev
