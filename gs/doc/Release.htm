<html>
<head>
<title>How to prepare an Aladdin Ghostscript release</title>
<!-- $Id$ -->
<!-- Originally: make.txt -->
</head>

<body>
<!-- [1.0 begin visible header] ============================================ -->

<!-- [1.1 begin headline] ================================================== -->

<table width="100%" border="0">
<tr><th align="center" bgcolor="#CCCC00"><font size=6>
How to prepare an Aladdin Ghostscript release
</font>
</table>

<!-- [1.1 end headline] ==================================================== -->

<!-- [1.2 begin table of contents] ========================================= -->

<h2>Table of contents</h2>

<blockquote><ul>
<li><a href="#Introduction">Introduction</a>
<li><a href="#Master_site">Master site</a>
<li><a href="#Adding_or_deleting_files">Adding or deleting files</a>
<li><a href="#Making_distributions">Making distributions</a>
<ul>
<li><a href="#General_procedure">General procedure</a>
<ul>
<li><a href="#Checking_source">Checking the source code</a>
<li><a href="#Windows">Building for Windows</a>
<li><a href="#Finishing_up">Finishing up</a>
</ul>
<li><a href="#Tester_or_beta">Tester or beta distributions</a>
<li><a href="#Public_releases">Public releases</a>
</ul>
<li><a href="#File_servers">File servers</a>
</ul></blockquote>

<!-- [1.2 end table of contents] =========================================== -->

<!-- [1.3 begin hint] ====================================================== -->

<p>For other information, see the <a href="Readme.htm">Ghostscript
overview</a> and the instructions on how to <a href="Build.htm">build
Ghostscript</a>.

<!-- [1.3 end hint] ======================================================== -->

<hr>

<!-- [1.0 end visible header] ============================================== -->

<!-- [2.0 begin contents] ================================================== -->

<h1><a name="Introduction"></a>Introduction</h1>

<p>
This document is a rough set of internal notes that Aladdin Enterprises uses
to manage the process of making new Ghostscript releases.  As time goes on,
it will become a more suitable document for others wishing to prepare
releases for distribution.

<p>
This document refers to many script files that are not currently part of the
Ghostscript distribution.  In the course of time, these scripts will become
part of the distribution, probably in a new subdirectory.

<p>
File names below that don't include an explicit subdirectory name are in the
<b><tt>src</tt></b> subdirectory.

<p>
Anyone is welcome to prepare and distribute releases, but please be aware of
some items you will want to change.

<ul>

<li>If you make any significant changes, please edit
<b><tt>gscdef.c</tt></b> to change <b><tt>GS_PRODUCTFAMILY</tt></b> and
<b><tt>GS_PRODUCT</tt></b> from "Aladdin Ghostscript" to something else, in
order to avoid confusion with Aladdin's releases.

<li>In the same file, you may also want to edit <b><tt>GS_COPYRIGHT</tt></b>
to add your own copyright notice (although you must not remove Aladdin's
notice).

<li>You will almost certainly want to edit <b><tt>version.mak</tt></b> to
change the revision date, <b><tt>GS_REVISIONDATE</tt></b>.

<li>If you want to change the version number, you must change it in both
<b><tt>version.mak</tt></b> (<b><tt>GS_VERSION_</tt></b>*) and
<b><tt>lib/gs_init.ps</tt></b> (the integer on a line by itself near the
beginning of the file).

</ul>

<h1><a name="Master_site"></a>Master site</h1>

<p>
The master site for Aladdin Ghostscript is on the <a
href="http://sourceforge.net">SourceForge</a> service.  If you have a
SourceForge account (they're free) and have gotten "project member" status
for Aladdin Ghostscript from Aladdin Enterprises, you can access the master
CVS repository for Aladdin Ghostscript on SourceForge by setting these
environment variables:

<blockquote><pre>
CVSROOT=:ext:<em>youraccount</em>@cvs.ghostscript.sourceforge.net:/cvsroot/ghostscript
CVS_RSH=ssh
</pre></blockquote>

<p>
Otherwise, you need to use anonymous CVS:

<blockquote><pre>
cvs -d:pserver:anonymous@cvs.ghostscript.sourceforge.net:/cvsroot/ghostscript login
cvs -z3 -d:pserver:anonymous@cvs.ghostscript.sourceforge.net:/cvsroot/ghostscript co modulename
</pre></blockquote>

<p>
In either case, SourceForge recommends using the <b><tt>-z3</tt></b> switch
with <b><tt>cvs</tt></b> to enable compression of transmitted data.

<h1><a name="Adding_or_deleting_files"></a>Adding files</h1>

<p>
When adding or removing any files, don't forget to invoke <b><tt>cvs
add</tt></b> or <b><tt>cvs rm</tt></b>.

<p>
When adding or removing files other than .c or .h: If the files are included
in the fileset (i.e., not just support files), check the install list in
<b><tt>unixinst.mak</tt></b>.

<p>
When adding .c files, remember to update the relevant <b><tt>.mak</tt></b>
file (usually <b><tt>devs.mak</tt></b>, <b><tt>int.mak</tt></b>, or
<b><tt>lib.mak</tt></b>).

<p>
When adding operators, update <b><tt>doc/Language.htm</tt></b> if desired.

<p>
When adding .h files, remember to add a _h definition in the appropriate
<b><tt>.mak</tt></b> file.

<p>
When adding or changing fonts, update <b><tt>Fontmap.GS</tt></b>,
<b><tt>fonts.mak</tt></b>, and possibly the compiled fonts in
<b><tt>gs.mak</tt></b> and the examples in <b><tt>doc/Fonts.htm</tt></b>.

<p>
When adding or changing filters, update <b><tt>doc/Language.htm</tt></b>.

<p>
When adding .ps files, update <b><tt>doc/Psfiles.htm</tt></b>.

<h1><a name="Making_distributions"></a>Making distributions</h1>

<p>
You will need the following tools:
<blockquote>
	<b><tt>../bin/precheck.tcl</tt></b> (Tcl script)<br>
	<b><tt>master/pre</tt></b> (Tcl script)<br>
	<b><tt>master/pre.chk</tt></b> (data file)<br>
	<b><tt>master/gsmake.tcl</tt></b> (Tcl script)<br>
	<b><tt>master/gsmake</tt></b> (link to <b><tt>gsmake.tcl</tt></b>)<br>
	<b><tt>master/makeset.tcl</tt></b> (Tcl script)<br>
	<b><tt>master/makefonts</tt></b> (link to <b><tt>makeset.tcl</tt></b>)<br>
	<b><tt>master/maketars</tt></b> (ibid.)<br>
	<b><tt>master/makezips</tt></b> (ibid.)<br>
	<b><tt>master/makemaster</tt></b> (ibid.)<br>
	<b><tt>master/smoke.ps</tt></b> (PostScript file)<br>
	<b><tt>data/*/*.ps</tt></b> (PostScript files)<br>
	<b><tt>beta.msg</tt></b>
</blockquote>

<p>
If you are going to make Windows releases, mount the Windows partition on
<b><tt>/c</tt></b>, and be sure the following directories exist:

<blockquote>
	<b><tt>/c/work/fonts</tt></b><br>
	<b><tt>/c/work/gs#.#[#]</tt></b><br>
</blockquote>

<h2><a name="General_procedure"></a>General procedure</h2>

<p>
Make sure the release date and version number are up to date in
<b><tt>version.mak</tt></b>, <b><tt>lib/gs_init.ps</tt></b>, and
<b><tt>doc/News.htm</tt></b> (TOC and body).

<p>
Edit the makefile (presumably <b><tt>unix-gcc.mak</tt></b>) to set

<blockquote><pre>
FEATURE_DEVS=$(FEATURE_DEVS_ALL)
COMPILE_INITS=1
</pre></blockquote>

<p>
This will help catch compilation problems.

<p>
Run

<blockquote><pre>
rm obj/*
make -j2 &gt;&amp; t.log
</pre></blockquote>

<p>
and look for warnings and errors in the log file.

<p>
Do a smoke test:

<blockquote><pre>
bin/gs @b master/smoke.ps
export TEMP=/gs/tmp
bin/gs @b -sDEVICE=bitcmyk -sOutputFile=/dev/null -r600 -dMaxBitmap=1000000\
  master/smoke.ps
</pre></blockquote>

<p>
Undo the <b><tt>FEATURE_DEVS</tt></b> and <b><tt>COMPILE_INITS</tt></b>
edits.

<p>
Check in <b><tt>gscdef.c</tt></b> that the definition of
<b><tt>GS_PRODUCT</tt></b> includes the appropriate one of "TESTER RELEASE",
"BETA RELEASE", or neither.

<p>
Check for patched configuration parameters, #define TESTs, version/date
inconsistencies, and changed files with no News item by running:

<blockquote><pre>
master/pre
</pre></blockquote>

<p>
This program compares the result of various greps against a check file,
writing the results of grep on one output file and the differences from the
check file on another.  See the source code of <b><tt>master/pre</tt></b>
for the default file names.  The important one is the check file,
<b><tt>master/pre.chk</tt></b>.  <b><tt>pre</tt></b> also verifies that the
right information is in the following places:
<ul>
<li>version number in <b><tt>man/*.1</tt></b>, <b><tt>doc/*.htm</tt></b>,
<b><tt>version.mak</tt></b>, <b><tt>doc/gs-vms.hlp</tt></b>,
<b><tt>lib/gs_init.ps</tt></b>
<li>revision date in <b><tt>man/*.1</tt></b>, <b><tt>doc/*.htm</tt></b>,
<b><tt>version.mak</tt></b>, <b><tt>doc/gs-vms.hlp</tt></b>
<li>copyright year (if necessary) in <b><tt>gscdef.c</tt></b>
</ul>

<p>
If necessary, run

<blockquote><pre>
master/pre update
</pre></blockquote>

<p>
to update the version and revision date in the doc files, and then run

<blockquote><pre>
master/pre
</pre></blockquote>

<p>
again.

<h3><a name="Checking_source"></a>Checking the source code</h3>

<p>
Check the consistency of the source code with the makefiles by
running:

<blockquote><pre>
master/gsmake check
</pre></blockquote>

<p>
If you have ever run <b><tt>patch</tt></b>, clean up the directories with

<blockquote><pre>
rm -f src/*~ src/*.bak src/*.orig src/*.mak.tcl doc/*~ doc/*.orig lib/*~ lib/*.orig man/*~ man/*.orig examples/*~ gnu/src/*~ gnu/src/*.bak gnu/src/*.orig
</pre></blockquote>

<p>
Run <b><tt>cvs commit</tt></b> to ensure the repository is up to date.

<p>
<b>****** INFORMATION BEYOND THIS POINT MAY BE OBSOLETE ******</b>

<p>
Make the source archives with

<blockquote><pre>
master/maketars
</pre></blockquote>

<p>
This creates the files

<blockquote>
<b><tt>ghostscript-#.##.tar.gz</tt></b> (main archive)
<br><b><tt>ghostscript-#.##.tar.bz2</tt></b> (main archive)
<br><b><tt>ghostscript-#.##gnu.tar.gz</tt></b> (GPL'ed files)
</blockquote>

<p>
Unpack the main archive in a clean directory.  Prepare for building:

<blockquote><pre>
ln -s src/unix-gcc.mak makefile;\
ln -s /gs/jpeg jpeg; ln -s /gs/libpng libpng; ln -s /gs/zlib zlib
</pre></blockquote>

<p>
Do a full build and smoke test (in a separate window):

<blockquote><pre>
unset GS_LIB
bin/gs -Ilib -I/gs/fonts -dNOPAUSE -dBATCH /gs/master/smoke.ps | tee t
export TEMP=/gs/tmp
bin/gs -Ilib -I/gs/fonts -dNOPAUSE -dBATCH -sDEVICE=bitcmyk\
  -sOutputFile=/dev/null -r600 -dMaxBitmap=1000000 /gs/master/smoke.ps | tee t
</pre></blockquote>

<p>
This reads files named

<blockquote>
<b><tt>/gs/data/ps/*.ps</tt></b>
<br><b><tt>/gs/data/psl2/*.ps</tt></b>
<br><b><tt>/gs/data/psl3/*.ps</tt></b>
<br><b><tt>/gs/data/test/*.ps</tt></b>
</blockquote>

<p>
(Edit <b><tt>smoke.ps</tt></b> ad lib to use other test sets.)  Watch for
crashes, unusual error messages, or anomalous displayed output.

<p>
If you are not making a Windows release, skip the following section and
proceed to <a href="#Finishing_up">"Finishing up"</a>.

<h3><a name="Windows"></a>Building for Windows</h3>

<p>
Make the Windows zip files and copy them to the Windows partition:

<blockquote><pre>
master/makezips
cp gs###*.zip /c/work
</pre></blockquote>

<p>
This creates and copies the files

<blockquote>
<b><tt>gs###src.zip</tt></b> (source files)<br>
<b><tt>gs###lib.zip</tt></b> (runtime and font files)<br>
</blockquote>

<p>
Boot into Windows.  Unpack the archives:

<blockquote><pre>
cd \c\work
unzip -oq gs###src.zip
unzip -oq gs###lib.zip
cd gs#.#[#]
</pre></blockquote>

<p>
Build with the Borland compiler:

<blockquote><pre>
config bcwin32
erase obj\*.*
make > bc.log
</pre></blockquote>

<p>
Smoke test the executables (both <b><tt>gswin32</tt></b> and
<b><tt>gswin32c</tt></b>).  Then build with the Microsoft compiler:

<blockquote><pre>
config msvc32
erase obj\*.*
nmake > msvc.log
</pre></blockquote>

<p>
Smoke test these executables too.

<p>
Building with the Watcom compiler doesn't work, because the
<b><tt>wmake</tt></b> or <b><tt>wmakel</tt></b> program runs out of memory.
However, if it did work, this is how to do it:

<blockquote><pre>
config watcw32
erase obj\*.*
wmake -u > watc.log
</pre></blockquote>

If everything is OK, make the self-extracting executables:

<blockquote><pre>
nmake archive
</pre></blockquote>

<p>
Boot back into Linux.  If testing in Windows revealed problems, edit the
source files as necessary, and go back to <a href="#Checking_source">"Check
the consistency of the source code."</a>

<h3><a name="Finishing_up"></a>Finishing up</h3>

Execute

<blockquote><pre>
master/makemaster
</pre></blockquote>

<p>
This creates <b><tt>master/###</tt></b> if necessary, and moves the archives
to it.

<h2><a name="Tester_or_beta"></a>Tester or beta distributions</h2>

<p>
Do the steps for distributions in general.

<p>
FTP <b><tt>ghostscript-#.##.tar.*</tt></b> and <b><tt>gs###*.zip</tt></b> to
<b><tt>ftp://ftp.cs.wisc.edu/ghost/aladdin/test</tt></b>.

<p>
FTP the same files from there to
<b><tt>ftp://www.aladdin.com/pub/ftp/ghost/aladdin/test</tt></b>.

<p>
If <b><tt>ansi2knr.c</tt></b> has changed, put it on
<b><tt>ftp://ftp.cs.wisc.edu/ghost/ansi2knr.c</tt></b>.

<p>
If <b><tt>doc/C-style.htm</tt></b> has changed, put it on
<b><tt>ftp://ftp.cs.wisc.edu/ghost/aladdin/C-style.htm</tt></b>.

<p>
Construct the e-mail announcement by editing <b><tt>beta.msg</tt></b>;
include the News section for this release.  Mail using:
<blockquote>
	To: gs-test
</blockquote>

<h2><a name="Public_releases"></a>Public releases</h2>

<p>
Update the title (current version #), first heading (previous version #),
and "new features" and "known problems" lists in
<b><tt>doc/Current.htm</tt></b>.

<p>
Do the steps for distributions in general.

<p>
E-mail the release announcement using:
<blockquote>
	To: gs-announce
</blockquote>

<p>
Edit the Web pages on the Wisconsin server to reflect the new release.

<h1><a name="File_servers"></a>File servers</h1>

<p>
The public distribution point is
<b><tt>ftp://ftp.cs.wisc.edu/ghost/aladdin/</tt></b>.

<p>
The tester release distribution points are
<blockquote>
<b><tt>ftp://ftp.cs.wisc.edu/ghost/aladdin/test/</tt></b><br>
<b><tt>ftp://www.aladdin.com/ghost/aladdin/test/</tt></b>
</blockquote>

<!-- [2.0 end contents] ==================================================== -->

<!-- [3.0 begin visible trailer] =========================================== -->
<hr>

<font size=2>

<p>Copyright &copy; 1999, 2000 Aladdin Enterprises.  All rights reserved.

<p>This file is part of Aladdin Ghostscript.  See the
<a href="Public.htm">Aladdin Free Public License</a> (the "License") for
full details of the terms of using, copying, modifying, and redistributing
Aladdin Ghostscript.

<p>
Ghostscript version 6.0, 3 February 2000

</font>

<!-- [3.0 end visible trailer] ============================================= -->

</body>
</html>
